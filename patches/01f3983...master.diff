diff --git a/.appveyor.yml b/.appveyor.yml
index 8b529e45537..92006505103 100644
--- a/.appveyor.yml
+++ b/.appveyor.yml
@@ -4,7 +4,7 @@ clone_folder: C:\projects\yii2
 
 environment:
     matrix:
-      - php_ver: 7.2.4
+      - php_ver: 7.3.0
 
 cache:
     - '%APPDATA%\Composer'
@@ -30,7 +30,7 @@ install:
     - echo extension=php_mbstring.dll >> php.ini
     - echo extension=php_openssl.dll >> php.ini
     - echo extension=php_pdo_sqlite.dll >> php.ini
-    - IF NOT EXIST C:\tools\composer.phar (cd C:\tools && appveyor DownloadFile https://getcomposer.org/download/1.4.1/composer.phar)
+    - IF NOT EXIST C:\tools\composer.phar (cd C:\tools && appveyor DownloadFile https://getcomposer.org/download/2.6.3/composer.phar)
 
 before_test:
     - cd C:\projects\yii2
diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 6c3b0dcc341..1682f76006f 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -13,55 +13,34 @@ concurrency:
 
 jobs:
   phpunit:
-    name: PHP ${{ matrix.php }} on ${{ matrix.os }}
+    name: PHP ${{ matrix.php }}
 
-    runs-on: ${{ matrix.os }}
+    runs-on: ubuntu-latest
 
     strategy:
       fail-fast: false
       matrix:
         include:
-          - php: 5.4
-            coverage: none
-            extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
-          - php: 5.5
-            coverage: none
-            extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
-          - php: 5.6
-            coverage: none
-            extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
-          - php: 7.0
-            coverage: none
-            extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
-          - php: 7.1
-            coverage: none
-            extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
-          - php: 7.2
-            coverage: none
-            extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
           - php: 7.3
-            coverage: none
             extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
+            coverage: none
           - php: 7.4
-            coverage: xdebug
             extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
+            coverage: xdebug
           - php: 8.0
-            coverage: none
             extensions: apcu, curl, dom, imagick, intl, mbstring, mcrypt, memcached
-            os: ubuntu-latest
+            coverage: none
           - php: 8.1
+            extensions: apcu, curl, dom, imagick, intl, mbstring, mcrypt, memcached
+            coverage: none
+          - php: 8.2
+            extensions: apcu, curl, dom, imagick, intl, mbstring, mcrypt, memcached
             coverage: none
+          - php: 8.3
             extensions: apcu, curl, dom, imagick, intl, mbstring, mcrypt, memcached
+            coverage: none
             os: ubuntu-latest
-          - php: 8.2
+          - php: 8.4
             extensions: apcu, curl, dom, imagick, intl, mbstring, mcrypt, memcached
             coverage: none
             os: ubuntu-latest
@@ -86,22 +65,24 @@ jobs:
         uses: niden/actions-memcached@v7
 
       - name: Install dependencies.
+        if: matrix.php != '8.4'
         run: composer update $DEFAULT_COMPOSER_FLAGS
 
-      - name: Run tests with PHPUnit.
-        if: matrix.php < '7.4' || matrix.php >= '8.1'
-        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP --colors=always
-
-      - name: Run tests with PHPUnit.
-        if: matrix.php == '8.0'
-        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP --colors=always
+      - name: Install dependencies with PHP 8.4.
+        if: matrix.php == '8.4'
+        run: composer update $DEFAULT_COMPOSER_FLAGS --ignore-platform-reqs
 
       - name: Run tests with PHPUnit and generate coverage.
         if: matrix.php == '7.4'
         run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP --coverage-clover=coverage.xml --colors=always
 
+      - name: Run tests with PHPUnit.
+        if: matrix.php != '7.4'
+        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP --colors=always
+
       - name: Upload coverage to Codecov.
         if: matrix.php == '7.4'
-        uses: codecov/codecov-action@v3
+        uses: codecov/codecov-action@v4
         with:
+          token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
diff --git a/.github/workflows/ci-mariadb.yml b/.github/workflows/ci-mariadb.yml
new file mode 100644
index 00000000000..a2d8e4d0f59
--- /dev/null
+++ b/.github/workflows/ci-mariadb.yml
@@ -0,0 +1,68 @@
+on:
+  - pull_request
+  - push
+
+name: ci-mariadb
+
+concurrency:
+  group: ${{ github.workflow }}-${{ github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  tests:
+    name: PHP ${{ matrix.php }}-mariadb-${{ matrix.mariadb }}
+    env:
+      extensions: curl, intl, pdo, pdo_mysql
+      XDEBUG_MODE: coverage, develop
+
+    runs-on: ubuntu-latest
+
+    strategy:
+      fail-fast: false
+      matrix:
+        os: [ubuntu-latest]
+        php: [7.4, 8.0, 8.1, 8.2, 8.3, 8.4]
+        mariadb:
+          - mariadb:10.4
+          - mariadb:latest
+
+    services:
+      mysql:
+        image: ${{ matrix.mariadb }}
+        env:
+          MARIADB_ROOT_PASSWORD: root
+          MARIADB_DATABASE: yiitest
+        ports:
+          - 3306:3306
+        options: --health-cmd="mariadb-admin ping" --health-interval=10s --health-timeout=5s --health-retries=3
+
+    steps:
+      - name: Checkout.
+        uses: actions/checkout@v4
+
+      - name: Install PHP with extensions.
+        uses: shivammathur/setup-php@v2
+        with:
+          coverage: xdebug
+          extensions: ${{ env.EXTENSIONS }}
+          ini-values: date.timezone='UTC'
+          php-version: ${{ matrix.php }}
+          tools: composer:v2, pecl
+
+      - name: Install dependencies with composer
+        if: matrix.php != '8.4'
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
+
+      - name: Install dependencies with PHP 8.4.
+        if: matrix.php == '8.4'
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ignore-platform-reqs --ansi
+
+      - name: Run MariaDB tests with PHPUnit and generate coverage.
+        run: vendor/bin/phpunit --group mysql --coverage-clover=coverage.xml --colors=always
+
+      - name: Upload coverage to Codecov.
+        if: matrix.php == '7.4'
+        uses: codecov/codecov-action@v4
+        with:
+          token: ${{ secrets.CODECOV_TOKEN }}
+          file: ./coverage.xml
diff --git a/.github/workflows/ci-mssql.yml b/.github/workflows/ci-mssql.yml
index 777f91fd306..08ce49057bb 100644
--- a/.github/workflows/ci-mssql.yml
+++ b/.github/workflows/ci-mssql.yml
@@ -10,7 +10,7 @@ concurrency:
 
 jobs:
   tests:
-    name: PHP ${{ matrix.php }}-mssql-${{ matrix.mssql }}
+    name: PHP ${{ matrix.php }}-mssql-${{ matrix.mssql.version }}
 
     env:
       EXTENSIONS: pdo, pdo_sqlsrv
@@ -19,34 +19,47 @@ jobs:
     runs-on: ubuntu-latest
 
     strategy:
+      fail-fast: false
       matrix:
+        php:
+          - 7.4
+          - 8.0
+          - 8.1
+          - 8.2
+          - 8.3
+          - 8.4
+
+        mssql:
+          - version: server:2022-latest
+            mssql-tool: /opt/mssql-tools18/bin/sqlcmd -C
+
         include:
           - php: 7.4
-            mssql: server:2017-latest
+            mssql:
+              version: server:2017-latest
+              mssql-tool: /opt/mssql-tools/bin/sqlcmd
           - php: 8.0
-            mssql: server:2019-latest
-          - php: 8.1
-            mssql: server:2019-latest
-          - php: 8.2
-            mssql: server:2022-latest
+            mssql:
+              version: server:2019-latest
+              mssql-tool: /opt/mssql-tools18/bin/sqlcmd -C
 
     services:
       mssql:
-          image: mcr.microsoft.com/mssql/${{ matrix.mssql }}
+          image: mcr.microsoft.com/mssql/${{ matrix.mssql.version }}
           env:
               SA_PASSWORD: YourStrong!Passw0rd
               ACCEPT_EULA: Y
               MSSQL_PID: Developer
           ports:
               - 1433:1433
-          options: --name=mssql --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=3
+          options: --name=mssql --health-cmd="${{ matrix.mssql.mssql-tool }} -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=3
 
     steps:
       - name: Checkout
         uses: actions/checkout@v4
 
       - name: Create MS SQL Database
-        run: docker exec -i mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'CREATE DATABASE yiitest'
+        run: docker exec -i mssql ${{ matrix.mssql.mssql-tool }} -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'CREATE DATABASE yiitest'
 
       - name: Install PHP with extensions
         uses: shivammathur/setup-php@v2
@@ -61,18 +74,19 @@ jobs:
         run: composer self-update
 
       - name: Install dependencies with composer
+        if: matrix.php != '8.4'
         run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
 
+      - name: Install dependencies with PHP 8.4.
+        if: matrix.php == '8.4'
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ignore-platform-reqs --ansi
+
       - name: Run MSSQL tests with PHPUnit and generate coverage.
-        if: matrix.php == '7.4'
         run: vendor/bin/phpunit --group mssql --coverage-clover=coverage.xml --colors=always
 
-      - name: Run MSSQL tests with PHPUnit.
-        if: matrix.php > '7.4'
-        run: vendor/bin/phpunit --group mssql --colors=always
-
       - name: Upload coverage to Codecov.
         if: matrix.php == '7.4'
-        uses: codecov/codecov-action@v3
+        uses: codecov/codecov-action@v4
         with:
+          token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
diff --git a/.github/workflows/ci-mysql.yml b/.github/workflows/ci-mysql.yml
index a1c201b07c9..37e04b1da2f 100644
--- a/.github/workflows/ci-mysql.yml
+++ b/.github/workflows/ci-mysql.yml
@@ -15,22 +15,14 @@ jobs:
       extensions: curl, intl, pdo, pdo_mysql
       XDEBUG_MODE: coverage, develop
 
-    runs-on: ${{ matrix.os }}
+    runs-on: ubuntu-latest
 
     strategy:
+      fail-fast: false
       matrix:
-        os:
-          - ubuntu-latest
-
-        php:
-          - 7.4
-          - 8.0
-          - 8.1
-          - 8.2
-
-        mysql:
-          - 5.7
-          - latest
+        os: [ubuntu-latest]
+        php: [7.4, 8.0, 8.1, 8.2, 8.3, 8.4]
+        mysql: [5.7, latest]
 
     services:
       mysql:
@@ -55,19 +47,20 @@ jobs:
           php-version: ${{ matrix.php }}
           tools: composer:v2, pecl
 
-      - name: Install dependencies with composer.
+      - name: Install dependencies with composer
+        if: matrix.php != '8.4'
         run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
 
+      - name: Install dependencies with PHP 8.4.
+        if: matrix.php == '8.4'
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ignore-platform-reqs --ansi
+
       - name: Run MySQL tests with PHPUnit and generate coverage.
-        if: matrix.php == '7.4'
         run: vendor/bin/phpunit --group mysql --coverage-clover=coverage.xml --colors=always
 
-      - name: Run MySQL tests with PHPUnit.
-        if: matrix.php > '7.4'
-        run: vendor/bin/phpunit --group mysql --colors=always
-
       - name: Upload coverage to Codecov.
         if: matrix.php == '7.4'
-        uses: codecov/codecov-action@v3
+        uses: codecov/codecov-action@v4
         with:
+          token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
diff --git a/.github/workflows/ci-node.yml b/.github/workflows/ci-node.yml
index 3f49942b84a..345ef1b6e70 100644
--- a/.github/workflows/ci-node.yml
+++ b/.github/workflows/ci-node.yml
@@ -11,7 +11,7 @@ concurrency:
 
 jobs:
   test:
-    name: NPM 6 on ubuntu-latest
+    name: NPM 10 on ubuntu-latest
 
     runs-on: ubuntu-latest
 
@@ -26,9 +26,9 @@ jobs:
         run: composer require "bower-asset/jquery:3.6.*@stable"
 
       - name: Install node.js.
-        uses: actions/setup-node@v1
+        uses: actions/setup-node@v4
         with:
-          node-version: 6
+          node-version: 20
 
       - name: Tests.
         run: |
diff --git a/.github/workflows/ci-oracle.yml b/.github/workflows/ci-oracle.yml
index be139ff540c..c18f9c15b62 100644
--- a/.github/workflows/ci-oracle.yml
+++ b/.github/workflows/ci-oracle.yml
@@ -20,11 +20,8 @@ jobs:
 
     strategy:
       matrix:
-        os:
-          - ubuntu-latest
-
-        php:
-          - 7.4
+        os: [ubuntu-latest]
+        php: [7.4]
 
     services:
       oci:
@@ -56,6 +53,8 @@ jobs:
         run: vendor/bin/phpunit --group oci --coverage-clover=coverage.xml --colors=always
 
       - name: Upload coverage to Codecov.
-        uses: codecov/codecov-action@v3
+        if: matrix.php == '7.4'
+        uses: codecov/codecov-action@v4
         with:
+          token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
diff --git a/.github/workflows/ci-pgsql.yml b/.github/workflows/ci-pgsql.yml
index 8c623c283be..cd14889211c 100644
--- a/.github/workflows/ci-pgsql.yml
+++ b/.github/workflows/ci-pgsql.yml
@@ -15,25 +15,14 @@ jobs:
       extensions: curl, intl, pdo, pdo_pgsql
       XDEBUG_MODE: coverage, develop
 
-    runs-on: ${{ matrix.os }}
+    runs-on: ubuntu-latest
 
     strategy:
+      fail-fast: false
       matrix:
-        os:
-          - ubuntu-latest
-
-        php:
-          - 7.4
-          - 8.0
-          - 8.1
-
-        pgsql:
-          - 10
-          - 11
-          - 12
-          - 13
-          - 14
-          - 15
+        os: [ubuntu-latest]
+        php: [7.4, 8.0, 8.1, 8.2, 8.3, 8.4]
+        pgsql: [10, 11, 12, 13, 14, 15]
 
     services:
       postgres:
@@ -62,19 +51,20 @@ jobs:
       - name: Update composer.
         run: composer self-update
 
-      - name: Install dependencies with composer.
+      - name: Install dependencies with composer
+        if: matrix.php != '8.4'
         run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
 
+      - name: Install dependencies with PHP 8.4.
+        if: matrix.php == '8.4'
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ignore-platform-reqs --ansi
+
       - name: Run Pgsql tests with PHPUnit and generate coverage.
-        if: matrix.php == '7.4'
         run: vendor/bin/phpunit --group pgsql --coverage-clover=coverage.xml --colors=always
 
-      - name: Run Pgsql tests with PHPUnit.
-        if: matrix.php > '7.4'
-        run: vendor/bin/phpunit --group pgsql --colors=always
-
       - name: Upload coverage to Codecov.
         if: matrix.php == '7.4'
-        uses: codecov/codecov-action@v3
+        uses: codecov/codecov-action@v4
         with:
+          token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
diff --git a/.github/workflows/ci-sqlite.yml b/.github/workflows/ci-sqlite.yml
index e163da11004..fb1fc41946e 100644
--- a/.github/workflows/ci-sqlite.yml
+++ b/.github/workflows/ci-sqlite.yml
@@ -19,15 +19,10 @@ jobs:
     runs-on: ubuntu-latest
 
     strategy:
+        fail-fast: false
         matrix:
-            os:
-              - ubuntu-latest
-
-            php:
-              - 7.4
-              - 8.0
-              - 8.1
-              - 8.2
+            os: [ubuntu-latest]
+            php: [7.4, 8.0, 8.1, 8.2, 8.3, 8.4]
 
     steps:
       - name: Checkout.
@@ -45,19 +40,20 @@ jobs:
       - name: Update composer.
         run: composer self-update
 
-      - name: Install dependencies with composer.
+      - name: Install dependencies with composer
+        if: matrix.php != '8.4'
         run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
 
+      - name: Install dependencies with PHP 8.4.
+        if: matrix.php == '8.4'
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ignore-platform-reqs --ansi
+
       - name: Run SQLite tests with PHPUnit and generate coverage.
-        if: matrix.php == '7.4'
         run: vendor/bin/phpunit --group sqlite --coverage-clover=coverage.xml --colors=always
 
-      - name: Run SQLite tests with PHPUnit.
-        if: matrix.php > '7.4'
-        run: vendor/bin/phpunit --group sqlite --colors=always
-
       - name: Upload coverage to Codecov.
         if: matrix.php == '7.4'
-        uses: codecov/codecov-action@v3
+        uses: codecov/codecov-action@v4
         with:
+          token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
diff --git a/.github/workflows/lint.yaml b/.github/workflows/lint.yaml
new file mode 100644
index 00000000000..17e514f9588
--- /dev/null
+++ b/.github/workflows/lint.yaml
@@ -0,0 +1,22 @@
+name: lint
+
+on: [push, pull_request]
+
+jobs:
+    phpcs:
+      runs-on: ubuntu-latest
+      name: PHP_CodeSniffer
+      steps:
+      - uses: actions/checkout@v4
+
+      - name: Setup PHP
+        uses: shivammathur/setup-php@v2
+        with:
+            php-version: '8.2'
+            tools: cs2pr
+
+      - name: Install dependencies
+        run: composer install --prefer-dist
+
+      - name: Run phpcs
+        run: vendor/bin/phpcs -q --report=checkstyle framework/ | cs2pr
diff --git a/.gitignore b/.gitignore
index 02326c0cb90..cb1cc49dcf0 100644
--- a/.gitignore
+++ b/.gitignore
@@ -38,6 +38,7 @@ composer.phar
 phpunit.phar
 # local phpunit config
 /phpunit.xml
+.phpunit.result.cache
 
 # ignore dev installed apps and extensions
 /apps
diff --git a/.php_cs b/.php_cs
deleted file mode 100644
index 0350dff093c..00000000000
--- a/.php_cs
+++ /dev/null
@@ -1,27 +0,0 @@
-<?php
-
-if (!class_exists('yii\cs\YiisoftConfig', true)) {
-    // TODO: change error message
-    fwrite(STDERR, "Your php-cs-version is outdated: please upgrade it.\n");
-    die(16);
-}
-
-return yii\cs\YiisoftConfig::create()
-    ->setCacheFile(__DIR__ . '/tests/runtime/php_cs.cache')
-    ->mergeRules([
-        'braces' => [
-            'allow_single_line_closure' => true,
-        ],
-    ])
-    ->setFinder(
-        PhpCsFixer\Finder::create()
-            ->in(__DIR__)
-            ->exclude('docs')
-            ->exclude('apps')
-            ->exclude('extensions')
-            // requirement checker should work even on PHP 4.3, so it needs special treatment
-            ->exclude('framework/requirements')
-            ->notPath('framework/classes.php')
-            ->notPath('framework/helpers/mimeTypes.php')
-            ->notPath('framework/views/messageConfig.php')
-    );
diff --git a/.scrutinizer.yml b/.scrutinizer.yml
index a30e8f62d95..0634033ee66 100644
--- a/.scrutinizer.yml
+++ b/.scrutinizer.yml
@@ -16,7 +16,7 @@ build:
 
   environment:
     php:
-      version: 7.4.28
+      version: 8.1
       ini:
         xdebug.mode: coverage,develop
         memory_limit: -1
diff --git a/README.md b/README.md
index 2bcf182fab8..4bc05115c8d 100644
--- a/README.md
+++ b/README.md
@@ -12,13 +12,13 @@ The framework is easy to adjust to meet your needs, because Yii has been designe
 [![Latest Stable Version](https://img.shields.io/packagist/v/yiisoft/yii2.svg)](https://packagist.org/packages/yiisoft/yii2)
 [![Total Downloads](https://img.shields.io/packagist/dt/yiisoft/yii2.svg)](https://packagist.org/packages/yiisoft/yii2)
 [![Build Status](https://github.com/yiisoft/yii2/workflows/build/badge.svg)](https://github.com/yiisoft/yii2/actions)
-[![Code Coverage](https://scrutinizer-ci.com/g/yiisoft/yii2/badges/coverage.png?s=31d80f1036099e9d6a3e4d7738f6b000b3c3d10e)](https://scrutinizer-ci.com/g/yiisoft/yii2/)
+[![codecov](https://codecov.io/gh/yiisoft/yii2/graph/badge.svg?token=Exm6sRwhJ6)](https://codecov.io/gh/yiisoft/yii2)
 [![Scrutinizer Quality Score](https://scrutinizer-ci.com/g/yiisoft/yii2/badges/quality-score.png?s=b1074a1ff6d0b214d54fa5ab7abbb90fc092471d)](https://scrutinizer-ci.com/g/yiisoft/yii2/)
 
 Installation
 ------------
 
-- The minimum required PHP version of Yii is PHP 5.4.
+- The minimum required PHP version of Yii is PHP 7.3.
 - It works best with PHP 8.
 - [Follow the Definitive Guide](https://www.yiiframework.com/doc-2.0/guide-start-installation.html)
 in order to get step by step instructions.
@@ -34,6 +34,20 @@ and a [Definitive Guide Mirror](http://stuff.cebe.cc/yii2docs/) which is updated
 - For Yii 1.1 users, there is [Upgrading from Yii 1.1](https://www.yiiframework.com/doc/guide/2.0/en/intro-upgrade-from-v1)
 to get an idea of what has changed in 2.0.
 
+Versions & PHP compatibility
+----------------------------
+
+| Yii2 Version | PHP version    | Development status                | EOL ¹                                                          |
+|--------------|----------------|-----------------------------------|----------------------------------------------------------------|
+| <= 2.0.49.*  | >= 5.4, <= 8.3 | security fixes only               | 23 Nov 2026 ³                                                  |
+| >= 2.0.50    | >= 7.3, <= 8.4 | bug fixes and security fixes only | bugfixes till 23 Nov 2026 ³, security fixes till 21 Nov 2027 ⁴ |
+| >= 2.2.0 ²   | >= 8.1         | active development                |                                                                |
+
+¹ All mentioned dates may be subject to change and no rights can be derived from them.  
+² Note: Yii 2.1 was [skipped](https://github.com/yiisoft/yii2/discussions/19831#discussioncomment-5858046), [Yii 2.2](https://github.com/yiisoft/yii2/tree/2.2) has not yet been released.  
+³ [PHP 8.3 EOL date](https://www.php.net/supported-versions.php).  
+⁴ [Expected PHP 8.4 EOL date](https://wiki.php.net/todo/php84).  
+
 Community
 ---------
 
diff --git a/build/controllers/TranslationController.php b/build/controllers/TranslationController.php
index 3ca61667620..550b74975db 100644
--- a/build/controllers/TranslationController.php
+++ b/build/controllers/TranslationController.php
@@ -8,7 +8,6 @@
 namespace yii\build\controllers;
 
 use DirectoryIterator;
-use Yii;
 use yii\console\Controller;
 use yii\helpers\Html;
 
diff --git a/composer.json b/composer.json
index ef5d068f59d..af172dbb762 100644
--- a/composer.json
+++ b/composer.json
@@ -68,12 +68,12 @@
         "yiisoft/yii2": "self.version"
     },
     "require": {
-        "php": ">=5.4.0",
+        "php": ">=7.3.0",
         "ext-mbstring": "*",
         "ext-ctype": "*",
         "lib-pcre": "*",
         "yiisoft/yii2-composer": "~2.0.4",
-        "ezyang/htmlpurifier": "^4.6",
+        "ezyang/htmlpurifier": "^4.17",
         "cebe/markdown": "~1.0.0 | ~1.1.0 | ~1.2.0",
         "bower-asset/jquery": "3.7.*@stable | 3.6.*@stable | 3.5.*@stable | 3.4.*@stable | 3.3.*@stable | 3.2.*@stable | 3.1.*@stable | 2.2.*@stable | 2.1.*@stable | 1.11.*@stable | 1.12.*@stable",
         "bower-asset/inputmask": "^5.0.8 ",
@@ -82,11 +82,11 @@
         "paragonie/random_compat": ">=1"
     },
     "require-dev": {
-        "cweagans/composer-patches": "^1.7",
-        "phpunit/phpunit": "4.8.34",
         "cebe/indent": "~1.0.2",
-        "friendsofphp/php-cs-fixer": "~2.2.3 | ^3.0",
-        "johnkary/phpunit-speedtrap": "^1.0"
+        "dealerdirect/phpcodesniffer-composer-installer": "*",
+        "dms/phpunit-arraysubset-asserts": "^0.5",
+        "phpunit/phpunit": "^9.6",
+        "yiisoft/yii2-coding-standards": "^3.0"
     },
     "repositories": [
         {
@@ -104,7 +104,6 @@
     },
     "autoload-dev": {
         "psr-4": {
-            "yii\\cs\\": "cs/src/",
             "yii\\build\\": "build/",
             "yiiunit\\": "tests/"
         }
@@ -112,7 +111,8 @@
     "config": {
         "allow-plugins": {
             "cweagans/composer-patches": true,
-            "yiisoft/yii2-composer": true
+            "yiisoft/yii2-composer": true,
+            "dealerdirect/phpcodesniffer-composer-installer": true
         }
     },
     "bin": [
@@ -121,20 +121,6 @@
     "extra": {
         "branch-alias": {
             "dev-master": "2.0.x-dev"
-        },
-        "composer-exit-on-patch-failure": true,
-        "patches": {
-            "phpunit/phpunit-mock-objects": {
-                "Fix PHP 7 and 8 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_mock_objects.patch"
-            },
-            "phpunit/php-file-iterator": {
-                "Fix PHP 8.1 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_path_file_iterator.patch"
-            },
-            "phpunit/phpunit": {
-                "Fix PHP 7 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_php7.patch",
-                "Fix PHP 8 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_php8.patch",
-                "Fix PHP 8.1 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_php81.patch"
-            }
         }
     }
 }
diff --git a/composer.lock b/composer.lock
index 97f39ee4db3..b1b16dc9347 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,14 +4,14 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
         "This file is @generated automatically"
     ],
-    "content-hash": "80e3f228bae519816def145a5a1d47ae",
+    "content-hash": "67d678d7fc90991fe6c1967c41f6264d",
     "packages": [
         {
             "name": "bower-asset/inputmask",
             "version": "5.0.8",
             "source": {
                 "type": "git",
-                "url": "https://github.com/RobinHerbots/Inputmask.git",
+                "url": "git@github.com:RobinHerbots/Inputmask.git",
                 "reference": "e0f39e0c93569c6b494c3a57edef2c59313a6b64"
             },
             "dist": {
@@ -47,16 +47,16 @@
         },
         {
             "name": "bower-asset/punycode",
-            "version": "v2.2.3",
+            "version": "v2.3.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/mathiasbynens/punycode.js.git",
-                "reference": "46d412120e2feb868876769a9847790ba278c882"
+                "reference": "9e1b2cda98d215d3a73fcbfe93c62e021f4ba768"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/mathiasbynens/punycode.js/zipball/46d412120e2feb868876769a9847790ba278c882",
-                "reference": "46d412120e2feb868876769a9847790ba278c882"
+                "url": "https://api.github.com/repos/mathiasbynens/punycode.js/zipball/9e1b2cda98d215d3a73fcbfe93c62e021f4ba768",
+                "reference": "9e1b2cda98d215d3a73fcbfe93c62e021f4ba768"
             },
             "type": "bower-asset"
         },
@@ -147,20 +147,20 @@
         },
         {
             "name": "ezyang/htmlpurifier",
-            "version": "v4.16.0",
+            "version": "v4.17.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/ezyang/htmlpurifier.git",
-                "reference": "523407fb06eb9e5f3d59889b3978d5bfe94299c8"
+                "reference": "bbc513d79acf6691fa9cf10f192c90dd2957f18c"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/ezyang/htmlpurifier/zipball/523407fb06eb9e5f3d59889b3978d5bfe94299c8",
-                "reference": "523407fb06eb9e5f3d59889b3978d5bfe94299c8",
+                "url": "https://api.github.com/repos/ezyang/htmlpurifier/zipball/bbc513d79acf6691fa9cf10f192c90dd2957f18c",
+                "reference": "bbc513d79acf6691fa9cf10f192c90dd2957f18c",
                 "shasum": ""
             },
             "require": {
-                "php": "~5.6.0 || ~7.0.0 || ~7.1.0 || ~7.2.0 || ~7.3.0 || ~7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0"
+                "php": "~5.6.0 || ~7.0.0 || ~7.1.0 || ~7.2.0 || ~7.3.0 || ~7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0"
             },
             "require-dev": {
                 "cerdic/css-tidy": "^1.7 || ^2.0",
@@ -202,9 +202,9 @@
             ],
             "support": {
                 "issues": "https://github.com/ezyang/htmlpurifier/issues",
-                "source": "https://github.com/ezyang/htmlpurifier/tree/v4.16.0"
+                "source": "https://github.com/ezyang/htmlpurifier/tree/v4.17.0"
             },
-            "time": "2022-09-18T07:06:19+00:00"
+            "time": "2023-11-17T15:01:25+00:00"
         },
         {
             "name": "paragonie/random_compat",
@@ -372,106 +372,39 @@
             "time": "2014-05-23T14:40:08+00:00"
         },
         {
-            "name": "composer/pcre",
-            "version": "3.1.0",
+            "name": "dealerdirect/phpcodesniffer-composer-installer",
+            "version": "v1.0.0",
             "source": {
                 "type": "git",
-                "url": "https://github.com/composer/pcre.git",
-                "reference": "4bff79ddd77851fe3cdd11616ed3f92841ba5bd2"
+                "url": "https://github.com/PHPCSStandards/composer-installer.git",
+                "reference": "4be43904336affa5c2f70744a348312336afd0da"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/composer/pcre/zipball/4bff79ddd77851fe3cdd11616ed3f92841ba5bd2",
-                "reference": "4bff79ddd77851fe3cdd11616ed3f92841ba5bd2",
+                "url": "https://api.github.com/repos/PHPCSStandards/composer-installer/zipball/4be43904336affa5c2f70744a348312336afd0da",
+                "reference": "4be43904336affa5c2f70744a348312336afd0da",
                 "shasum": ""
             },
             "require": {
-                "php": "^7.4 || ^8.0"
-            },
-            "require-dev": {
-                "phpstan/phpstan": "^1.3",
-                "phpstan/phpstan-strict-rules": "^1.1",
-                "symfony/phpunit-bridge": "^5"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-main": "3.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-4": {
-                    "Composer\\Pcre\\": "src"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Jordi Boggiano",
-                    "email": "j.boggiano@seld.be",
-                    "homepage": "http://seld.be"
-                }
-            ],
-            "description": "PCRE wrapping library that offers type-safe preg_* replacements.",
-            "keywords": [
-                "PCRE",
-                "preg",
-                "regex",
-                "regular expression"
-            ],
-            "support": {
-                "issues": "https://github.com/composer/pcre/issues",
-                "source": "https://github.com/composer/pcre/tree/3.1.0"
-            },
-            "funding": [
-                {
-                    "url": "https://packagist.com",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/composer",
-                    "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/composer/composer",
-                    "type": "tidelift"
-                }
-            ],
-            "time": "2022-11-17T09:50:14+00:00"
-        },
-        {
-            "name": "composer/semver",
-            "version": "3.4.0",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/composer/semver.git",
-                "reference": "35e8d0af4486141bc745f23a29cc2091eb624a32"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/composer/semver/zipball/35e8d0af4486141bc745f23a29cc2091eb624a32",
-                "reference": "35e8d0af4486141bc745f23a29cc2091eb624a32",
-                "shasum": ""
-            },
-            "require": {
-                "php": "^5.3.2 || ^7.0 || ^8.0"
+                "composer-plugin-api": "^1.0 || ^2.0",
+                "php": ">=5.4",
+                "squizlabs/php_codesniffer": "^2.0 || ^3.1.0 || ^4.0"
             },
             "require-dev": {
-                "phpstan/phpstan": "^1.4",
-                "symfony/phpunit-bridge": "^4.2 || ^5"
+                "composer/composer": "*",
+                "ext-json": "*",
+                "ext-zip": "*",
+                "php-parallel-lint/php-parallel-lint": "^1.3.1",
+                "phpcompatibility/php-compatibility": "^9.0",
+                "yoast/phpunit-polyfills": "^1.0"
             },
-            "type": "library",
+            "type": "composer-plugin",
             "extra": {
-                "branch-alias": {
-                    "dev-main": "3.x-dev"
-                }
+                "class": "PHPCSStandards\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\Plugin"
             },
             "autoload": {
                 "psr-4": {
-                    "Composer\\Semver\\": "src"
+                    "PHPCSStandards\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\": "src/"
                 }
             },
             "notification-url": "https://packagist.org/downloads/",
@@ -480,199 +413,68 @@
             ],
             "authors": [
                 {
-                    "name": "Nils Adermann",
-                    "email": "naderman@naderman.de",
-                    "homepage": "http://www.naderman.de"
-                },
-                {
-                    "name": "Jordi Boggiano",
-                    "email": "j.boggiano@seld.be",
-                    "homepage": "http://seld.be"
-                },
-                {
-                    "name": "Rob Bast",
-                    "email": "rob.bast@gmail.com",
-                    "homepage": "http://robbast.nl"
-                }
-            ],
-            "description": "Semver library that offers utilities, version constraint parsing and validation.",
-            "keywords": [
-                "semantic",
-                "semver",
-                "validation",
-                "versioning"
-            ],
-            "support": {
-                "irc": "ircs://irc.libera.chat:6697/composer",
-                "issues": "https://github.com/composer/semver/issues",
-                "source": "https://github.com/composer/semver/tree/3.4.0"
-            },
-            "funding": [
-                {
-                    "url": "https://packagist.com",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/composer",
-                    "type": "github"
+                    "name": "Franck Nijhof",
+                    "email": "franck.nijhof@dealerdirect.com",
+                    "homepage": "http://www.frenck.nl",
+                    "role": "Developer / IT Manager"
                 },
                 {
-                    "url": "https://tidelift.com/funding/github/packagist/composer/composer",
-                    "type": "tidelift"
-                }
-            ],
-            "time": "2023-08-31T09:50:34+00:00"
-        },
-        {
-            "name": "composer/xdebug-handler",
-            "version": "3.0.3",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/composer/xdebug-handler.git",
-                "reference": "ced299686f41dce890debac69273b47ffe98a40c"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/composer/xdebug-handler/zipball/ced299686f41dce890debac69273b47ffe98a40c",
-                "reference": "ced299686f41dce890debac69273b47ffe98a40c",
-                "shasum": ""
-            },
-            "require": {
-                "composer/pcre": "^1 || ^2 || ^3",
-                "php": "^7.2.5 || ^8.0",
-                "psr/log": "^1 || ^2 || ^3"
-            },
-            "require-dev": {
-                "phpstan/phpstan": "^1.0",
-                "phpstan/phpstan-strict-rules": "^1.1",
-                "symfony/phpunit-bridge": "^6.0"
-            },
-            "type": "library",
-            "autoload": {
-                "psr-4": {
-                    "Composer\\XdebugHandler\\": "src"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "John Stevenson",
-                    "email": "john-stevenson@blueyonder.co.uk"
+                    "name": "Contributors",
+                    "homepage": "https://github.com/PHPCSStandards/composer-installer/graphs/contributors"
                 }
             ],
-            "description": "Restarts a process without Xdebug.",
+            "description": "PHP_CodeSniffer Standards Composer Installer Plugin",
+            "homepage": "http://www.dealerdirect.com",
             "keywords": [
-                "Xdebug",
-                "performance"
-            ],
-            "support": {
-                "irc": "irc://irc.freenode.org/composer",
-                "issues": "https://github.com/composer/xdebug-handler/issues",
-                "source": "https://github.com/composer/xdebug-handler/tree/3.0.3"
-            },
-            "funding": [
-                {
-                    "url": "https://packagist.com",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/composer",
-                    "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/composer/composer",
-                    "type": "tidelift"
-                }
-            ],
-            "time": "2022-02-25T21:32:43+00:00"
-        },
-        {
-            "name": "cweagans/composer-patches",
-            "version": "1.7.3",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/cweagans/composer-patches.git",
-                "reference": "e190d4466fe2b103a55467dfa83fc2fecfcaf2db"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/cweagans/composer-patches/zipball/e190d4466fe2b103a55467dfa83fc2fecfcaf2db",
-                "reference": "e190d4466fe2b103a55467dfa83fc2fecfcaf2db",
-                "shasum": ""
-            },
-            "require": {
-                "composer-plugin-api": "^1.0 || ^2.0",
-                "php": ">=5.3.0"
-            },
-            "require-dev": {
-                "composer/composer": "~1.0 || ~2.0",
-                "phpunit/phpunit": "~4.6"
-            },
-            "type": "composer-plugin",
-            "extra": {
-                "class": "cweagans\\Composer\\Patches"
-            },
-            "autoload": {
-                "psr-4": {
-                    "cweagans\\Composer\\": "src"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Cameron Eagans",
-                    "email": "me@cweagans.net"
-                }
+                "PHPCodeSniffer",
+                "PHP_CodeSniffer",
+                "code quality",
+                "codesniffer",
+                "composer",
+                "installer",
+                "phpcbf",
+                "phpcs",
+                "plugin",
+                "qa",
+                "quality",
+                "standard",
+                "standards",
+                "style guide",
+                "stylecheck",
+                "tests"
             ],
-            "description": "Provides a way to patch Composer packages.",
             "support": {
-                "issues": "https://github.com/cweagans/composer-patches/issues",
-                "source": "https://github.com/cweagans/composer-patches/tree/1.7.3"
+                "issues": "https://github.com/PHPCSStandards/composer-installer/issues",
+                "source": "https://github.com/PHPCSStandards/composer-installer"
             },
-            "time": "2022-12-20T22:53:13+00:00"
+            "time": "2023-01-05T11:28:13+00:00"
         },
         {
-            "name": "doctrine/annotations",
-            "version": "1.14.3",
+            "name": "dms/phpunit-arraysubset-asserts",
+            "version": "v0.5.0",
             "source": {
                 "type": "git",
-                "url": "https://github.com/doctrine/annotations.git",
-                "reference": "fb0d71a7393298a7b232cbf4c8b1f73f3ec3d5af"
+                "url": "https://github.com/rdohms/phpunit-arraysubset-asserts.git",
+                "reference": "aa6b9e858414e91cca361cac3b2035ee57d212e0"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/annotations/zipball/fb0d71a7393298a7b232cbf4c8b1f73f3ec3d5af",
-                "reference": "fb0d71a7393298a7b232cbf4c8b1f73f3ec3d5af",
+                "url": "https://api.github.com/repos/rdohms/phpunit-arraysubset-asserts/zipball/aa6b9e858414e91cca361cac3b2035ee57d212e0",
+                "reference": "aa6b9e858414e91cca361cac3b2035ee57d212e0",
                 "shasum": ""
             },
             "require": {
-                "doctrine/lexer": "^1 || ^2",
-                "ext-tokenizer": "*",
-                "php": "^7.1 || ^8.0",
-                "psr/cache": "^1 || ^2 || ^3"
+                "php": "^5.4 || ^7.0 || ^8.0",
+                "phpunit/phpunit": "^4.8.36 || ^5.7.21 || ^6.0 || ^7.0 || ^8.0 || ^9.0 || ^10.0"
             },
             "require-dev": {
-                "doctrine/cache": "^1.11 || ^2.0",
-                "doctrine/coding-standard": "^9 || ^10",
-                "phpstan/phpstan": "~1.4.10 || ^1.8.0",
-                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
-                "symfony/cache": "^4.4 || ^5.4 || ^6",
-                "vimeo/psalm": "^4.10"
-            },
-            "suggest": {
-                "php": "PHP 8.0 or higher comes with attributes, a native replacement for annotations"
+                "dms/coding-standard": "^9"
             },
             "type": "library",
             "autoload": {
-                "psr-4": {
-                    "Doctrine\\Common\\Annotations\\": "lib/Doctrine/Common/Annotations"
-                }
+                "files": [
+                    "assertarraysubset-autoload.php"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
@@ -680,112 +482,43 @@
             ],
             "authors": [
                 {
-                    "name": "Guilherme Blanco",
-                    "email": "guilhermeblanco@gmail.com"
-                },
-                {
-                    "name": "Roman Borschel",
-                    "email": "roman@code-factory.org"
-                },
-                {
-                    "name": "Benjamin Eberlei",
-                    "email": "kontakt@beberlei.de"
-                },
-                {
-                    "name": "Jonathan Wage",
-                    "email": "jonwage@gmail.com"
-                },
-                {
-                    "name": "Johannes Schmitt",
-                    "email": "schmittjoh@gmail.com"
-                }
-            ],
-            "description": "Docblock Annotations Parser",
-            "homepage": "https://www.doctrine-project.org/projects/annotations.html",
-            "keywords": [
-                "annotations",
-                "docblock",
-                "parser"
-            ],
-            "support": {
-                "issues": "https://github.com/doctrine/annotations/issues",
-                "source": "https://github.com/doctrine/annotations/tree/1.14.3"
-            },
-            "time": "2023-02-01T09:20:38+00:00"
-        },
-        {
-            "name": "doctrine/deprecations",
-            "version": "v1.1.1",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/doctrine/deprecations.git",
-                "reference": "612a3ee5ab0d5dd97b7cf3874a6efe24325efac3"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/deprecations/zipball/612a3ee5ab0d5dd97b7cf3874a6efe24325efac3",
-                "reference": "612a3ee5ab0d5dd97b7cf3874a6efe24325efac3",
-                "shasum": ""
-            },
-            "require": {
-                "php": "^7.1 || ^8.0"
-            },
-            "require-dev": {
-                "doctrine/coding-standard": "^9",
-                "phpstan/phpstan": "1.4.10 || 1.10.15",
-                "phpstan/phpstan-phpunit": "^1.0",
-                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
-                "psalm/plugin-phpunit": "0.18.4",
-                "psr/log": "^1 || ^2 || ^3",
-                "vimeo/psalm": "4.30.0 || 5.12.0"
-            },
-            "suggest": {
-                "psr/log": "Allows logging deprecations via PSR-3 logger implementation"
-            },
-            "type": "library",
-            "autoload": {
-                "psr-4": {
-                    "Doctrine\\Deprecations\\": "lib/Doctrine/Deprecations"
+                    "name": "Rafael Dohms",
+                    "email": "rdohms@gmail.com"
                 }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
             ],
-            "description": "A small layer on top of trigger_error(E_USER_DEPRECATED) or PSR-3 logging with options to disable all deprecations or selectively for packages.",
-            "homepage": "https://www.doctrine-project.org/",
+            "description": "This package provides ArraySubset and related asserts once deprecated in PHPUnit 8",
             "support": {
-                "issues": "https://github.com/doctrine/deprecations/issues",
-                "source": "https://github.com/doctrine/deprecations/tree/v1.1.1"
+                "issues": "https://github.com/rdohms/phpunit-arraysubset-asserts/issues",
+                "source": "https://github.com/rdohms/phpunit-arraysubset-asserts/tree/v0.5.0"
             },
-            "time": "2023-06-03T09:27:29+00:00"
+            "time": "2023-06-02T17:33:53+00:00"
         },
         {
             "name": "doctrine/instantiator",
-            "version": "1.5.0",
+            "version": "2.0.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/doctrine/instantiator.git",
-                "reference": "0a0fa9780f5d4e507415a065172d26a98d02047b"
+                "reference": "c6222283fa3f4ac679f8b9ced9a4e23f163e80d0"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/0a0fa9780f5d4e507415a065172d26a98d02047b",
-                "reference": "0a0fa9780f5d4e507415a065172d26a98d02047b",
+                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/c6222283fa3f4ac679f8b9ced9a4e23f163e80d0",
+                "reference": "c6222283fa3f4ac679f8b9ced9a4e23f163e80d0",
                 "shasum": ""
             },
             "require": {
-                "php": "^7.1 || ^8.0"
+                "php": "^8.1"
             },
             "require-dev": {
-                "doctrine/coding-standard": "^9 || ^11",
+                "doctrine/coding-standard": "^11",
                 "ext-pdo": "*",
                 "ext-phar": "*",
-                "phpbench/phpbench": "^0.16 || ^1",
-                "phpstan/phpstan": "^1.4",
-                "phpstan/phpstan-phpunit": "^1",
-                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
-                "vimeo/psalm": "^4.30 || ^5.4"
+                "phpbench/phpbench": "^1.2",
+                "phpstan/phpstan": "^1.9.4",
+                "phpstan/phpstan-phpunit": "^1.3",
+                "phpunit/phpunit": "^9.5.27",
+                "vimeo/psalm": "^5.4"
             },
             "type": "library",
             "autoload": {
@@ -812,7 +545,7 @@
             ],
             "support": {
                 "issues": "https://github.com/doctrine/instantiator/issues",
-                "source": "https://github.com/doctrine/instantiator/tree/1.5.0"
+                "source": "https://github.com/doctrine/instantiator/tree/2.0.0"
             },
             "funding": [
                 {
@@ -828,1030 +561,284 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2022-12-30T00:15:36+00:00"
+            "time": "2022-12-30T00:23:10+00:00"
         },
         {
-            "name": "doctrine/lexer",
-            "version": "2.1.0",
+            "name": "myclabs/deep-copy",
+            "version": "1.12.0",
             "source": {
                 "type": "git",
-                "url": "https://github.com/doctrine/lexer.git",
-                "reference": "39ab8fcf5a51ce4b85ca97c7a7d033eb12831124"
+                "url": "https://github.com/myclabs/DeepCopy.git",
+                "reference": "3a6b9a42cd8f8771bd4295d13e1423fa7f3d942c"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/lexer/zipball/39ab8fcf5a51ce4b85ca97c7a7d033eb12831124",
-                "reference": "39ab8fcf5a51ce4b85ca97c7a7d033eb12831124",
+                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/3a6b9a42cd8f8771bd4295d13e1423fa7f3d942c",
+                "reference": "3a6b9a42cd8f8771bd4295d13e1423fa7f3d942c",
                 "shasum": ""
             },
             "require": {
-                "doctrine/deprecations": "^1.0",
                 "php": "^7.1 || ^8.0"
             },
+            "conflict": {
+                "doctrine/collections": "<1.6.8",
+                "doctrine/common": "<2.13.3 || >=3 <3.2.2"
+            },
             "require-dev": {
-                "doctrine/coding-standard": "^9 || ^10",
-                "phpstan/phpstan": "^1.3",
-                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
-                "psalm/plugin-phpunit": "^0.18.3",
-                "vimeo/psalm": "^4.11 || ^5.0"
+                "doctrine/collections": "^1.6.8",
+                "doctrine/common": "^2.13.3 || ^3.2.2",
+                "phpspec/prophecy": "^1.10",
+                "phpunit/phpunit": "^7.5.20 || ^8.5.23 || ^9.5.13"
             },
             "type": "library",
             "autoload": {
+                "files": [
+                    "src/DeepCopy/deep_copy.php"
+                ],
                 "psr-4": {
-                    "Doctrine\\Common\\Lexer\\": "src"
+                    "DeepCopy\\": "src/DeepCopy/"
                 }
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
                 "MIT"
             ],
-            "authors": [
-                {
-                    "name": "Guilherme Blanco",
-                    "email": "guilhermeblanco@gmail.com"
-                },
-                {
-                    "name": "Roman Borschel",
-                    "email": "roman@code-factory.org"
-                },
-                {
-                    "name": "Johannes Schmitt",
-                    "email": "schmittjoh@gmail.com"
-                }
-            ],
-            "description": "PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.",
-            "homepage": "https://www.doctrine-project.org/projects/lexer.html",
+            "description": "Create deep copies (clones) of your objects",
             "keywords": [
-                "annotations",
-                "docblock",
-                "lexer",
-                "parser",
-                "php"
+                "clone",
+                "copy",
+                "duplicate",
+                "object",
+                "object graph"
             ],
             "support": {
-                "issues": "https://github.com/doctrine/lexer/issues",
-                "source": "https://github.com/doctrine/lexer/tree/2.1.0"
+                "issues": "https://github.com/myclabs/DeepCopy/issues",
+                "source": "https://github.com/myclabs/DeepCopy/tree/1.12.0"
             },
             "funding": [
                 {
-                    "url": "https://www.doctrine-project.org/sponsorship.html",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://www.patreon.com/phpdoctrine",
-                    "type": "patreon"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Flexer",
+                    "url": "https://tidelift.com/funding/github/packagist/myclabs/deep-copy",
                     "type": "tidelift"
                 }
             ],
-            "time": "2022-12-14T08:49:07+00:00"
+            "time": "2024-06-12T14:39:25+00:00"
         },
         {
-            "name": "friendsofphp/php-cs-fixer",
-            "version": "v3.9.5",
+            "name": "nikic/php-parser",
+            "version": "v5.1.0",
             "source": {
                 "type": "git",
-                "url": "https://github.com/FriendsOfPHP/PHP-CS-Fixer.git",
-                "reference": "4465d70ba776806857a1ac2a6f877e582445ff36"
+                "url": "https://github.com/nikic/PHP-Parser.git",
+                "reference": "683130c2ff8c2739f4822ff7ac5c873ec529abd1"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/FriendsOfPHP/PHP-CS-Fixer/zipball/4465d70ba776806857a1ac2a6f877e582445ff36",
-                "reference": "4465d70ba776806857a1ac2a6f877e582445ff36",
+                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/683130c2ff8c2739f4822ff7ac5c873ec529abd1",
+                "reference": "683130c2ff8c2739f4822ff7ac5c873ec529abd1",
                 "shasum": ""
             },
             "require": {
-                "composer/semver": "^3.2",
-                "composer/xdebug-handler": "^3.0.3",
-                "doctrine/annotations": "^1.13",
+                "ext-ctype": "*",
                 "ext-json": "*",
                 "ext-tokenizer": "*",
-                "php": "^7.4 || ^8.0",
-                "php-cs-fixer/diff": "^2.0",
-                "symfony/console": "^5.4 || ^6.0",
-                "symfony/event-dispatcher": "^5.4 || ^6.0",
-                "symfony/filesystem": "^5.4 || ^6.0",
-                "symfony/finder": "^5.4 || ^6.0",
-                "symfony/options-resolver": "^5.4 || ^6.0",
-                "symfony/polyfill-mbstring": "^1.23",
-                "symfony/polyfill-php80": "^1.25",
-                "symfony/polyfill-php81": "^1.25",
-                "symfony/process": "^5.4 || ^6.0",
-                "symfony/stopwatch": "^5.4 || ^6.0"
+                "php": ">=7.4"
             },
             "require-dev": {
-                "justinrainbow/json-schema": "^5.2",
-                "keradus/cli-executor": "^1.5",
-                "mikey179/vfsstream": "^1.6.10",
-                "php-coveralls/php-coveralls": "^2.5.2",
-                "php-cs-fixer/accessible-object": "^1.1",
-                "php-cs-fixer/phpunit-constraint-isidenticalstring": "^1.2",
-                "php-cs-fixer/phpunit-constraint-xmlmatchesxsd": "^1.2.1",
-                "phpspec/prophecy": "^1.15",
-                "phpspec/prophecy-phpunit": "^2.0",
-                "phpunit/phpunit": "^9.5",
-                "phpunitgoodpractices/polyfill": "^1.5",
-                "phpunitgoodpractices/traits": "^1.9.1",
-                "symfony/phpunit-bridge": "^6.0",
-                "symfony/yaml": "^5.4 || ^6.0"
-            },
-            "suggest": {
-                "ext-dom": "For handling output formats in XML",
-                "ext-mbstring": "For handling non-UTF8 characters."
+                "ircmaxell/php-yacc": "^0.0.7",
+                "phpunit/phpunit": "^9.0"
             },
             "bin": [
-                "php-cs-fixer"
-            ],
-            "type": "application",
-            "autoload": {
-                "psr-4": {
-                    "PhpCsFixer\\": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Dariusz Rumiński",
-                    "email": "dariusz.ruminski@gmail.com"
-                }
-            ],
-            "description": "A tool to automatically fix PHP code style",
-            "support": {
-                "issues": "https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues",
-                "source": "https://github.com/FriendsOfPHP/PHP-CS-Fixer/tree/v3.9.5"
-            },
-            "funding": [
-                {
-                    "url": "https://github.com/keradus",
-                    "type": "github"
-                }
+                "bin/php-parse"
             ],
-            "time": "2022-07-22T08:43:51+00:00"
-        },
-        {
-            "name": "johnkary/phpunit-speedtrap",
-            "version": "v1.1.0",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/johnkary/phpunit-speedtrap.git",
-                "reference": "f7cfe17c5a7076ed0ccca5450fe3bb981ec56361"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/johnkary/phpunit-speedtrap/zipball/f7cfe17c5a7076ed0ccca5450fe3bb981ec56361",
-                "reference": "f7cfe17c5a7076ed0ccca5450fe3bb981ec56361",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.6",
-                "phpunit/phpunit": ">=4.7,<6.0"
-            },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.1-dev"
+                    "dev-master": "5.0-dev"
                 }
             },
             "autoload": {
-                "psr-0": {
-                    "JohnKary": "src/"
+                "psr-4": {
+                    "PhpParser\\": "lib/PhpParser"
                 }
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "John Kary",
-                    "email": "john@johnkary.net"
+                    "name": "Nikita Popov"
                 }
             ],
-            "description": "Find slow tests in your PHPUnit test suite",
-            "homepage": "https://github.com/johnkary/phpunit-speedtrap",
+            "description": "A PHP parser written in PHP",
             "keywords": [
-                "phpunit",
-                "profile",
-                "slow"
-            ],
-            "support": {
-                "issues": "https://github.com/johnkary/phpunit-speedtrap/issues",
-                "source": "https://github.com/johnkary/phpunit-speedtrap/tree/1.1"
-            },
-            "time": "2017-03-25T17:14:26+00:00"
-        },
-        {
-            "name": "php-cs-fixer/diff",
-            "version": "v2.0.2",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/PHP-CS-Fixer/diff.git",
-                "reference": "29dc0d507e838c4580d018bd8b5cb412474f7ec3"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/PHP-CS-Fixer/diff/zipball/29dc0d507e838c4580d018bd8b5cb412474f7ec3",
-                "reference": "29dc0d507e838c4580d018bd8b5cb412474f7ec3",
-                "shasum": ""
-            },
-            "require": {
-                "php": "^5.6 || ^7.0 || ^8.0"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "^5.7.23 || ^6.4.3 || ^7.0",
-                "symfony/process": "^3.3"
-            },
-            "type": "library",
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
-                },
-                {
-                    "name": "Kore Nordmann",
-                    "email": "mail@kore-nordmann.de"
-                }
-            ],
-            "description": "sebastian/diff v3 backport support for PHP 5.6+",
-            "homepage": "https://github.com/PHP-CS-Fixer",
-            "keywords": [
-                "diff"
-            ],
-            "support": {
-                "issues": "https://github.com/PHP-CS-Fixer/diff/issues",
-                "source": "https://github.com/PHP-CS-Fixer/diff/tree/v2.0.2"
-            },
-            "abandoned": true,
-            "time": "2020-10-14T08:32:19+00:00"
-        },
-        {
-            "name": "phpdocumentor/reflection-docblock",
-            "version": "2.0.5",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/phpDocumentor/ReflectionDocBlock.git",
-                "reference": "e6a969a640b00d8daa3c66518b0405fb41ae0c4b"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/e6a969a640b00d8daa3c66518b0405fb41ae0c4b",
-                "reference": "e6a969a640b00d8daa3c66518b0405fb41ae0c4b",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "~4.0"
-            },
-            "suggest": {
-                "dflydev/markdown": "~1.0",
-                "erusev/parsedown": "~1.0"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.0.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "phpDocumentor": [
-                        "src/"
-                    ]
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Mike van Riel",
-                    "email": "mike.vanriel@naenius.com"
-                }
-            ],
-            "support": {
-                "issues": "https://github.com/phpDocumentor/ReflectionDocBlock/issues",
-                "source": "https://github.com/phpDocumentor/ReflectionDocBlock/tree/release/2.x"
-            },
-            "time": "2016-01-25T08:17:30+00:00"
-        },
-        {
-            "name": "phpspec/prophecy",
-            "version": "v1.5.0",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/phpspec/prophecy.git",
-                "reference": "4745ded9307786b730d7a60df5cb5a6c43cf95f7"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/4745ded9307786b730d7a60df5cb5a6c43cf95f7",
-                "reference": "4745ded9307786b730d7a60df5cb5a6c43cf95f7",
-                "shasum": ""
-            },
-            "require": {
-                "doctrine/instantiator": "^1.0.2",
-                "phpdocumentor/reflection-docblock": "~2.0",
-                "sebastian/comparator": "~1.1"
-            },
-            "require-dev": {
-                "phpspec/phpspec": "~2.0"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.4.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Prophecy\\": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                },
-                {
-                    "name": "Marcello Duarte",
-                    "email": "marcello.duarte@gmail.com"
-                }
-            ],
-            "description": "Highly opinionated mocking framework for PHP 5.3+",
-            "homepage": "https://github.com/phpspec/prophecy",
-            "keywords": [
-                "Double",
-                "Dummy",
-                "fake",
-                "mock",
-                "spy",
-                "stub"
-            ],
-            "support": {
-                "issues": "https://github.com/phpspec/prophecy/issues",
-                "source": "https://github.com/phpspec/prophecy/tree/master"
-            },
-            "time": "2015-08-13T10:07:40+00:00"
-        },
-        {
-            "name": "phpunit/php-code-coverage",
-            "version": "2.2.4",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
-                "reference": "eabf68b476ac7d0f73793aada060f1c1a9bf8979"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/eabf68b476ac7d0f73793aada060f1c1a9bf8979",
-                "reference": "eabf68b476ac7d0f73793aada060f1c1a9bf8979",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3",
-                "phpunit/php-file-iterator": "~1.3",
-                "phpunit/php-text-template": "~1.2",
-                "phpunit/php-token-stream": "~1.3",
-                "sebastian/environment": "^1.3.2",
-                "sebastian/version": "~1.0"
-            },
-            "require-dev": {
-                "ext-xdebug": ">=2.1.4",
-                "phpunit/phpunit": "~4"
-            },
-            "suggest": {
-                "ext-dom": "*",
-                "ext-xdebug": ">=2.2.1",
-                "ext-xmlwriter": "*"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.2.x-dev"
-                }
-            },
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sb@sebastian-bergmann.de",
-                    "role": "lead"
-                }
-            ],
-            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
-            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
-            "keywords": [
-                "coverage",
-                "testing",
-                "xunit"
-            ],
-            "support": {
-                "irc": "irc://irc.freenode.net/phpunit",
-                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
-                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/2.2"
-            },
-            "time": "2015-10-06T15:47:00+00:00"
-        },
-        {
-            "name": "phpunit/php-file-iterator",
-            "version": "1.4.5",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
-                "reference": "730b01bc3e867237eaac355e06a36b85dd93a8b4"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/730b01bc3e867237eaac355e06a36b85dd93a8b4",
-                "reference": "730b01bc3e867237eaac355e06a36b85dd93a8b4",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.4.x-dev"
-                }
-            },
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sb@sebastian-bergmann.de",
-                    "role": "lead"
-                }
-            ],
-            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
-            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
-            "keywords": [
-                "filesystem",
-                "iterator"
-            ],
-            "support": {
-                "irc": "irc://irc.freenode.net/phpunit",
-                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
-                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/1.4.5"
-            },
-            "time": "2017-11-27T13:52:08+00:00"
-        },
-        {
-            "name": "phpunit/php-text-template",
-            "version": "1.2.1",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/php-text-template.git",
-                "reference": "31f8b717e51d9a2afca6c9f046f5d69fc27c8686"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/31f8b717e51d9a2afca6c9f046f5d69fc27c8686",
-                "reference": "31f8b717e51d9a2afca6c9f046f5d69fc27c8686",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de",
-                    "role": "lead"
-                }
-            ],
-            "description": "Simple template engine.",
-            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
-            "keywords": [
-                "template"
-            ],
-            "support": {
-                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
-                "source": "https://github.com/sebastianbergmann/php-text-template/tree/1.2.1"
-            },
-            "time": "2015-06-21T13:50:34+00:00"
-        },
-        {
-            "name": "phpunit/php-timer",
-            "version": "1.0.8",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/php-timer.git",
-                "reference": "38e9124049cf1a164f1e4537caf19c99bf1eb260"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/38e9124049cf1a164f1e4537caf19c99bf1eb260",
-                "reference": "38e9124049cf1a164f1e4537caf19c99bf1eb260",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "~4|~5"
-            },
-            "type": "library",
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sb@sebastian-bergmann.de",
-                    "role": "lead"
-                }
-            ],
-            "description": "Utility class for timing",
-            "homepage": "https://github.com/sebastianbergmann/php-timer/",
-            "keywords": [
-                "timer"
-            ],
-            "support": {
-                "irc": "irc://irc.freenode.net/phpunit",
-                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
-                "source": "https://github.com/sebastianbergmann/php-timer/tree/master"
-            },
-            "time": "2016-05-12T18:03:57+00:00"
-        },
-        {
-            "name": "phpunit/php-token-stream",
-            "version": "1.4.12",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/php-token-stream.git",
-                "reference": "1ce90ba27c42e4e44e6d8458241466380b51fa16"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/1ce90ba27c42e4e44e6d8458241466380b51fa16",
-                "reference": "1ce90ba27c42e4e44e6d8458241466380b51fa16",
-                "shasum": ""
-            },
-            "require": {
-                "ext-tokenizer": "*",
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "~4.2"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.4-dev"
-                }
-            },
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
-                }
-            ],
-            "description": "Wrapper around PHP's tokenizer extension.",
-            "homepage": "https://github.com/sebastianbergmann/php-token-stream/",
-            "keywords": [
-                "tokenizer"
-            ],
-            "support": {
-                "issues": "https://github.com/sebastianbergmann/php-token-stream/issues",
-                "source": "https://github.com/sebastianbergmann/php-token-stream/tree/1.4"
-            },
-            "abandoned": true,
-            "time": "2017-12-04T08:55:13+00:00"
-        },
-        {
-            "name": "phpunit/phpunit",
-            "version": "4.8.34",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/phpunit.git",
-                "reference": "7eb45205d27edd94bd2b3614085ea158bd1e2bca"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/7eb45205d27edd94bd2b3614085ea158bd1e2bca",
-                "reference": "7eb45205d27edd94bd2b3614085ea158bd1e2bca",
-                "shasum": ""
-            },
-            "require": {
-                "ext-dom": "*",
-                "ext-json": "*",
-                "ext-pcre": "*",
-                "ext-reflection": "*",
-                "ext-spl": "*",
-                "php": ">=5.3.3",
-                "phpspec/prophecy": "^1.3.1",
-                "phpunit/php-code-coverage": "~2.1",
-                "phpunit/php-file-iterator": "~1.4",
-                "phpunit/php-text-template": "~1.2",
-                "phpunit/php-timer": "^1.0.6",
-                "phpunit/phpunit-mock-objects": "~2.3",
-                "sebastian/comparator": "~1.2.2",
-                "sebastian/diff": "~1.2",
-                "sebastian/environment": "~1.3",
-                "sebastian/exporter": "~1.2",
-                "sebastian/global-state": "~1.0",
-                "sebastian/version": "~1.0",
-                "symfony/yaml": "~2.1|~3.0"
-            },
-            "suggest": {
-                "phpunit/php-invoker": "~1.1"
-            },
-            "bin": [
-                "phpunit"
-            ],
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "4.8.x-dev"
-                }
-            },
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de",
-                    "role": "lead"
-                }
-            ],
-            "description": "The PHP Unit Testing framework.",
-            "homepage": "https://phpunit.de/",
-            "keywords": [
-                "phpunit",
-                "testing",
-                "xunit"
-            ],
-            "support": {
-                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
-                "source": "https://github.com/sebastianbergmann/phpunit/tree/4.8.34"
-            },
-            "time": "2017-01-26T16:15:36+00:00"
-        },
-        {
-            "name": "phpunit/phpunit-mock-objects",
-            "version": "2.3.8",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/sebastianbergmann/phpunit-mock-objects.git",
-                "reference": "ac8e7a3db35738d56ee9a76e78a4e03d97628983"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/phpunit-mock-objects/zipball/ac8e7a3db35738d56ee9a76e78a4e03d97628983",
-                "reference": "ac8e7a3db35738d56ee9a76e78a4e03d97628983",
-                "shasum": ""
-            },
-            "require": {
-                "doctrine/instantiator": "^1.0.2",
-                "php": ">=5.3.3",
-                "phpunit/php-text-template": "~1.2",
-                "sebastian/exporter": "~1.2"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "~4.4"
-            },
-            "suggest": {
-                "ext-soap": "*"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.3.x-dev"
-                }
-            },
-            "autoload": {
-                "classmap": [
-                    "src/"
-                ]
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "BSD-3-Clause"
-            ],
-            "authors": [
-                {
-                    "name": "Sebastian Bergmann",
-                    "email": "sb@sebastian-bergmann.de",
-                    "role": "lead"
-                }
-            ],
-            "description": "Mock Object library for PHPUnit",
-            "homepage": "https://github.com/sebastianbergmann/phpunit-mock-objects/",
-            "keywords": [
-                "mock",
-                "xunit"
-            ],
-            "support": {
-                "irc": "irc://irc.freenode.net/phpunit",
-                "issues": "https://github.com/sebastianbergmann/phpunit-mock-objects/issues",
-                "source": "https://github.com/sebastianbergmann/phpunit-mock-objects/tree/2.3"
-            },
-            "abandoned": true,
-            "time": "2015-10-02T06:51:40+00:00"
-        },
-        {
-            "name": "psr/cache",
-            "version": "3.0.0",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/php-fig/cache.git",
-                "reference": "aa5030cfa5405eccfdcb1083ce040c2cb8d253bf"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/php-fig/cache/zipball/aa5030cfa5405eccfdcb1083ce040c2cb8d253bf",
-                "reference": "aa5030cfa5405eccfdcb1083ce040c2cb8d253bf",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=8.0.0"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.0.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-4": {
-                    "Psr\\Cache\\": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "PHP-FIG",
-                    "homepage": "https://www.php-fig.org/"
-                }
-            ],
-            "description": "Common interface for caching libraries",
-            "keywords": [
-                "cache",
-                "psr",
-                "psr-6"
-            ],
-            "support": {
-                "source": "https://github.com/php-fig/cache/tree/3.0.0"
-            },
-            "time": "2021-02-03T23:26:27+00:00"
-        },
-        {
-            "name": "psr/container",
-            "version": "2.0.2",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/php-fig/container.git",
-                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/php-fig/container/zipball/c71ecc56dfe541dbd90c5360474fbc405f8d5963",
-                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=7.4.0"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.0.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-4": {
-                    "Psr\\Container\\": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "PHP-FIG",
-                    "homepage": "https://www.php-fig.org/"
-                }
-            ],
-            "description": "Common Container Interface (PHP FIG PSR-11)",
-            "homepage": "https://github.com/php-fig/container",
-            "keywords": [
-                "PSR-11",
-                "container",
-                "container-interface",
-                "container-interop",
-                "psr"
+                "parser",
+                "php"
             ],
             "support": {
-                "issues": "https://github.com/php-fig/container/issues",
-                "source": "https://github.com/php-fig/container/tree/2.0.2"
+                "issues": "https://github.com/nikic/PHP-Parser/issues",
+                "source": "https://github.com/nikic/PHP-Parser/tree/v5.1.0"
             },
-            "time": "2021-11-05T16:47:00+00:00"
+            "time": "2024-07-01T20:03:41+00:00"
         },
         {
-            "name": "psr/event-dispatcher",
-            "version": "1.0.0",
+            "name": "phar-io/manifest",
+            "version": "2.0.4",
             "source": {
                 "type": "git",
-                "url": "https://github.com/php-fig/event-dispatcher.git",
-                "reference": "dbefd12671e8a14ec7f180cab83036ed26714bb0"
+                "url": "https://github.com/phar-io/manifest.git",
+                "reference": "54750ef60c58e43759730615a392c31c80e23176"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0",
-                "reference": "dbefd12671e8a14ec7f180cab83036ed26714bb0",
+                "url": "https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176",
+                "reference": "54750ef60c58e43759730615a392c31c80e23176",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.2.0"
+                "ext-dom": "*",
+                "ext-libxml": "*",
+                "ext-phar": "*",
+                "ext-xmlwriter": "*",
+                "phar-io/version": "^3.0.1",
+                "php": "^7.2 || ^8.0"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.0.x-dev"
+                    "dev-master": "2.0.x-dev"
                 }
             },
             "autoload": {
-                "psr-4": {
-                    "Psr\\EventDispatcher\\": "src/"
-                }
+                "classmap": [
+                    "src/"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "PHP-FIG",
-                    "homepage": "http://www.php-fig.org/"
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Heuer",
+                    "email": "sebastian@phpeople.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "Developer"
                 }
             ],
-            "description": "Standard interfaces for event handling.",
-            "keywords": [
-                "events",
-                "psr",
-                "psr-14"
-            ],
+            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
             "support": {
-                "issues": "https://github.com/php-fig/event-dispatcher/issues",
-                "source": "https://github.com/php-fig/event-dispatcher/tree/1.0.0"
+                "issues": "https://github.com/phar-io/manifest/issues",
+                "source": "https://github.com/phar-io/manifest/tree/2.0.4"
             },
-            "time": "2019-01-08T18:20:26+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/theseer",
+                    "type": "github"
+                }
+            ],
+            "time": "2024-03-03T12:33:53+00:00"
         },
         {
-            "name": "psr/log",
-            "version": "3.0.0",
+            "name": "phar-io/version",
+            "version": "3.2.1",
             "source": {
                 "type": "git",
-                "url": "https://github.com/php-fig/log.git",
-                "reference": "fe5ea303b0887d5caefd3d431c3e61ad47037001"
+                "url": "https://github.com/phar-io/version.git",
+                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/php-fig/log/zipball/fe5ea303b0887d5caefd3d431c3e61ad47037001",
-                "reference": "fe5ea303b0887d5caefd3d431c3e61ad47037001",
+                "url": "https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
+                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.0.0"
+                "php": "^7.2 || ^8.0"
             },
             "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.x-dev"
-                }
-            },
             "autoload": {
-                "psr-4": {
-                    "Psr\\Log\\": "src"
-                }
+                "classmap": [
+                    "src/"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "PHP-FIG",
-                    "homepage": "https://www.php-fig.org/"
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Heuer",
+                    "email": "sebastian@phpeople.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "Developer"
                 }
             ],
-            "description": "Common interface for logging libraries",
-            "homepage": "https://github.com/php-fig/log",
-            "keywords": [
-                "log",
-                "psr",
-                "psr-3"
-            ],
+            "description": "Library for handling version information and constraints",
             "support": {
-                "source": "https://github.com/php-fig/log/tree/3.0.0"
+                "issues": "https://github.com/phar-io/version/issues",
+                "source": "https://github.com/phar-io/version/tree/3.2.1"
             },
-            "time": "2021-07-14T16:46:02+00:00"
+            "time": "2022-02-21T01:04:05+00:00"
         },
         {
-            "name": "sebastian/comparator",
-            "version": "1.2.4",
+            "name": "phpunit/php-code-coverage",
+            "version": "9.2.31",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/comparator.git",
-                "reference": "2b7424b55f5047b47ac6e5ccb20b2aea4011d9be"
+                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
+                "reference": "48c34b5d8d983006bd2adc2d0de92963b9155965"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/2b7424b55f5047b47ac6e5ccb20b2aea4011d9be",
-                "reference": "2b7424b55f5047b47ac6e5ccb20b2aea4011d9be",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/48c34b5d8d983006bd2adc2d0de92963b9155965",
+                "reference": "48c34b5d8d983006bd2adc2d0de92963b9155965",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3",
-                "sebastian/diff": "~1.2",
-                "sebastian/exporter": "~1.2 || ~2.0"
+                "ext-dom": "*",
+                "ext-libxml": "*",
+                "ext-xmlwriter": "*",
+                "nikic/php-parser": "^4.18 || ^5.0",
+                "php": ">=7.3",
+                "phpunit/php-file-iterator": "^3.0.3",
+                "phpunit/php-text-template": "^2.0.2",
+                "sebastian/code-unit-reverse-lookup": "^2.0.2",
+                "sebastian/complexity": "^2.0",
+                "sebastian/environment": "^5.1.2",
+                "sebastian/lines-of-code": "^1.0.3",
+                "sebastian/version": "^3.0.1",
+                "theseer/tokenizer": "^1.2.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.4"
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-pcov": "PHP extension that provides line coverage",
+                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.2.x-dev"
+                    "dev-master": "9.2-dev"
                 }
             },
             "autoload": {
@@ -1864,60 +851,56 @@
                 "BSD-3-Clause"
             ],
             "authors": [
-                {
-                    "name": "Jeff Welch",
-                    "email": "whatthejeff@gmail.com"
-                },
-                {
-                    "name": "Volker Dusch",
-                    "email": "github@wallbash.com"
-                },
-                {
-                    "name": "Bernhard Schussek",
-                    "email": "bschussek@2bepublished.at"
-                },
                 {
                     "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Provides the functionality to compare PHP values for equality",
-            "homepage": "http://www.github.com/sebastianbergmann/comparator",
+            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
+            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
             "keywords": [
-                "comparator",
-                "compare",
-                "equality"
+                "coverage",
+                "testing",
+                "xunit"
             ],
             "support": {
-                "issues": "https://github.com/sebastianbergmann/comparator/issues",
-                "source": "https://github.com/sebastianbergmann/comparator/tree/1.2"
+                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
+                "security": "https://github.com/sebastianbergmann/php-code-coverage/security/policy",
+                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.31"
             },
-            "time": "2017-01-29T09:50:25+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2024-03-02T06:37:42+00:00"
         },
         {
-            "name": "sebastian/diff",
-            "version": "1.4.1",
+            "name": "phpunit/php-file-iterator",
+            "version": "3.0.6",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/diff.git",
-                "reference": "13edfd8706462032c2f52b4b862974dd46b71c9e"
+                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
+                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/13edfd8706462032c2f52b4b862974dd46b71c9e",
-                "reference": "13edfd8706462032c2f52b4b862974dd46b71c9e",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
+                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "php": ">=7.3"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.8"
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.4-dev"
+                    "dev-master": "3.0-dev"
                 }
             },
             "autoload": {
@@ -1930,50 +913,58 @@
                 "BSD-3-Clause"
             ],
             "authors": [
-                {
-                    "name": "Kore Nordmann",
-                    "email": "mail@kore-nordmann.de"
-                },
                 {
                     "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Diff implementation",
-            "homepage": "https://github.com/sebastianbergmann/diff",
+            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
+            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
             "keywords": [
-                "diff"
+                "filesystem",
+                "iterator"
             ],
             "support": {
-                "issues": "https://github.com/sebastianbergmann/diff/issues",
-                "source": "https://github.com/sebastianbergmann/diff/tree/master"
+                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
+                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6"
             },
-            "time": "2015-12-08T07:14:41+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2021-12-02T12:48:52+00:00"
         },
         {
-            "name": "sebastian/environment",
-            "version": "1.3.7",
+            "name": "phpunit/php-invoker",
+            "version": "3.1.1",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/environment.git",
-                "reference": "4e8f0da10ac5802913afc151413bc8c53b6c2716"
+                "url": "https://github.com/sebastianbergmann/php-invoker.git",
+                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/4e8f0da10ac5802913afc151413bc8c53b6c2716",
-                "reference": "4e8f0da10ac5802913afc151413bc8c53b6c2716",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
+                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "php": ">=7.3"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.4"
+                "ext-pcntl": "*",
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-pcntl": "*"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.3.x-dev"
+                    "dev-master": "3.1-dev"
                 }
             },
             "autoload": {
@@ -1988,48 +979,51 @@
             "authors": [
                 {
                     "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Provides functionality to handle HHVM/PHP environments",
-            "homepage": "http://www.github.com/sebastianbergmann/environment",
+            "description": "Invoke callables with a timeout",
+            "homepage": "https://github.com/sebastianbergmann/php-invoker/",
             "keywords": [
-                "Xdebug",
-                "environment",
-                "hhvm"
+                "process"
             ],
             "support": {
-                "issues": "https://github.com/sebastianbergmann/environment/issues",
-                "source": "https://github.com/sebastianbergmann/environment/tree/1.3.7"
+                "issues": "https://github.com/sebastianbergmann/php-invoker/issues",
+                "source": "https://github.com/sebastianbergmann/php-invoker/tree/3.1.1"
             },
-            "time": "2016-05-17T03:18:57+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-09-28T05:58:55+00:00"
         },
         {
-            "name": "sebastian/exporter",
-            "version": "1.2.2",
+            "name": "phpunit/php-text-template",
+            "version": "2.0.4",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/exporter.git",
-                "reference": "42c4c2eec485ee3e159ec9884f95b431287edde4"
+                "url": "https://github.com/sebastianbergmann/php-text-template.git",
+                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/42c4c2eec485ee3e159ec9884f95b431287edde4",
-                "reference": "42c4c2eec485ee3e159ec9884f95b431287edde4",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
+                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3",
-                "sebastian/recursion-context": "~1.0"
+                "php": ">=7.3"
             },
             "require-dev": {
-                "ext-mbstring": "*",
-                "phpunit/phpunit": "~4.4"
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.3.x-dev"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
@@ -2042,66 +1036,53 @@
                 "BSD-3-Clause"
             ],
             "authors": [
-                {
-                    "name": "Jeff Welch",
-                    "email": "whatthejeff@gmail.com"
-                },
-                {
-                    "name": "Volker Dusch",
-                    "email": "github@wallbash.com"
-                },
-                {
-                    "name": "Bernhard Schussek",
-                    "email": "bschussek@2bepublished.at"
-                },
                 {
                     "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
-                },
-                {
-                    "name": "Adam Harvey",
-                    "email": "aharvey@php.net"
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Provides the functionality to export PHP variables for visualization",
-            "homepage": "http://www.github.com/sebastianbergmann/exporter",
+            "description": "Simple template engine.",
+            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
             "keywords": [
-                "export",
-                "exporter"
+                "template"
             ],
             "support": {
-                "issues": "https://github.com/sebastianbergmann/exporter/issues",
-                "source": "https://github.com/sebastianbergmann/exporter/tree/master"
+                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
+                "source": "https://github.com/sebastianbergmann/php-text-template/tree/2.0.4"
             },
-            "time": "2016-06-17T09:04:28+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T05:33:50+00:00"
         },
         {
-            "name": "sebastian/global-state",
-            "version": "1.1.1",
+            "name": "phpunit/php-timer",
+            "version": "5.0.3",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/global-state.git",
-                "reference": "bc37d50fea7d017d3d340f230811c9f1d7280af4"
+                "url": "https://github.com/sebastianbergmann/php-timer.git",
+                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/bc37d50fea7d017d3d340f230811c9f1d7280af4",
-                "reference": "bc37d50fea7d017d3d340f230811c9f1d7280af4",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
+                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "php": ">=7.3"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.2"
-            },
-            "suggest": {
-                "ext-uopz": "*"
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.0-dev"
+                    "dev-master": "5.0-dev"
                 }
             },
             "autoload": {
@@ -2116,47 +1097,87 @@
             "authors": [
                 {
                     "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Snapshotting of global state",
-            "homepage": "http://www.github.com/sebastianbergmann/global-state",
+            "description": "Utility class for timing",
+            "homepage": "https://github.com/sebastianbergmann/php-timer/",
             "keywords": [
-                "global state"
+                "timer"
             ],
             "support": {
-                "issues": "https://github.com/sebastianbergmann/global-state/issues",
-                "source": "https://github.com/sebastianbergmann/global-state/tree/1.1.1"
+                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
+                "source": "https://github.com/sebastianbergmann/php-timer/tree/5.0.3"
             },
-            "time": "2015-10-12T03:26:01+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:16:10+00:00"
         },
         {
-            "name": "sebastian/recursion-context",
-            "version": "1.0.5",
+            "name": "phpunit/phpunit",
+            "version": "9.6.19",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/recursion-context.git",
-                "reference": "b19cc3298482a335a95f3016d2f8a6950f0fbcd7"
+                "url": "https://github.com/sebastianbergmann/phpunit.git",
+                "reference": "a1a54a473501ef4cdeaae4e06891674114d79db8"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/b19cc3298482a335a95f3016d2f8a6950f0fbcd7",
-                "reference": "b19cc3298482a335a95f3016d2f8a6950f0fbcd7",
+                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/a1a54a473501ef4cdeaae4e06891674114d79db8",
+                "reference": "a1a54a473501ef4cdeaae4e06891674114d79db8",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "doctrine/instantiator": "^1.3.1 || ^2",
+                "ext-dom": "*",
+                "ext-json": "*",
+                "ext-libxml": "*",
+                "ext-mbstring": "*",
+                "ext-xml": "*",
+                "ext-xmlwriter": "*",
+                "myclabs/deep-copy": "^1.10.1",
+                "phar-io/manifest": "^2.0.3",
+                "phar-io/version": "^3.0.2",
+                "php": ">=7.3",
+                "phpunit/php-code-coverage": "^9.2.28",
+                "phpunit/php-file-iterator": "^3.0.5",
+                "phpunit/php-invoker": "^3.1.1",
+                "phpunit/php-text-template": "^2.0.3",
+                "phpunit/php-timer": "^5.0.2",
+                "sebastian/cli-parser": "^1.0.1",
+                "sebastian/code-unit": "^1.0.6",
+                "sebastian/comparator": "^4.0.8",
+                "sebastian/diff": "^4.0.3",
+                "sebastian/environment": "^5.1.3",
+                "sebastian/exporter": "^4.0.5",
+                "sebastian/global-state": "^5.0.1",
+                "sebastian/object-enumerator": "^4.0.3",
+                "sebastian/resource-operations": "^3.0.3",
+                "sebastian/type": "^3.2",
+                "sebastian/version": "^3.0.2"
             },
-            "require-dev": {
-                "phpunit/phpunit": "~4.4"
+            "suggest": {
+                "ext-soap": "To be able to generate mocks based on WSDL files",
+                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
             },
+            "bin": [
+                "phpunit"
+            ],
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.0.x-dev"
+                    "dev-master": "9.6-dev"
                 }
             },
             "autoload": {
+                "files": [
+                    "src/Framework/Assert/Functions.php"
+                ],
                 "classmap": [
                     "src/"
                 ]
@@ -2167,41 +1188,65 @@
             ],
             "authors": [
                 {
-                    "name": "Jeff Welch",
-                    "email": "whatthejeff@gmail.com"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "The PHP Unit Testing framework.",
+            "homepage": "https://phpunit.de/",
+            "keywords": [
+                "phpunit",
+                "testing",
+                "xunit"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
+                "security": "https://github.com/sebastianbergmann/phpunit/security/policy",
+                "source": "https://github.com/sebastianbergmann/phpunit/tree/9.6.19"
+            },
+            "funding": [
+                {
+                    "url": "https://phpunit.de/sponsors.html",
+                    "type": "custom"
                 },
                 {
-                    "name": "Sebastian Bergmann",
-                    "email": "sebastian@phpunit.de"
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
                 },
                 {
-                    "name": "Adam Harvey",
-                    "email": "aharvey@php.net"
+                    "url": "https://tidelift.com/funding/github/packagist/phpunit/phpunit",
+                    "type": "tidelift"
                 }
             ],
-            "description": "Provides functionality to recursively process PHP variables",
-            "homepage": "http://www.github.com/sebastianbergmann/recursion-context",
-            "support": {
-                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
-                "source": "https://github.com/sebastianbergmann/recursion-context/tree/master"
-            },
-            "time": "2016-10-03T07:41:43+00:00"
+            "time": "2024-04-05T04:35:58+00:00"
         },
         {
-            "name": "sebastian/version",
-            "version": "1.0.6",
+            "name": "sebastian/cli-parser",
+            "version": "1.0.2",
             "source": {
                 "type": "git",
-                "url": "https://github.com/sebastianbergmann/version.git",
-                "reference": "58b3a85e7999757d6ad81c787a1fbf5ff6c628c6"
+                "url": "https://github.com/sebastianbergmann/cli-parser.git",
+                "reference": "2b56bea83a09de3ac06bb18b92f068e60cc6f50b"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/58b3a85e7999757d6ad81c787a1fbf5ff6c628c6",
-                "reference": "58b3a85e7999757d6ad81c787a1fbf5ff6c628c6",
+                "url": "https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/2b56bea83a09de3ac06bb18b92f068e60cc6f50b",
+                "reference": "2b56bea83a09de3ac06bb18b92f068e60cc6f50b",
                 "shasum": ""
             },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
             "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
+            },
             "autoload": {
                 "classmap": [
                     "src/"
@@ -2218,1374 +1263,1142 @@
                     "role": "lead"
                 }
             ],
-            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
-            "homepage": "https://github.com/sebastianbergmann/version",
+            "description": "Library for parsing CLI options",
+            "homepage": "https://github.com/sebastianbergmann/cli-parser",
             "support": {
-                "issues": "https://github.com/sebastianbergmann/version/issues",
-                "source": "https://github.com/sebastianbergmann/version/tree/1.0.6"
+                "issues": "https://github.com/sebastianbergmann/cli-parser/issues",
+                "source": "https://github.com/sebastianbergmann/cli-parser/tree/1.0.2"
             },
-            "time": "2015-06-21T13:59:46+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2024-03-02T06:27:43+00:00"
         },
         {
-            "name": "symfony/console",
-            "version": "v6.3.4",
+            "name": "sebastian/code-unit",
+            "version": "1.0.8",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/console.git",
-                "reference": "eca495f2ee845130855ddf1cf18460c38966c8b6"
+                "url": "https://github.com/sebastianbergmann/code-unit.git",
+                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/console/zipball/eca495f2ee845130855ddf1cf18460c38966c8b6",
-                "reference": "eca495f2ee845130855ddf1cf18460c38966c8b6",
+                "url": "https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120",
+                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "symfony/deprecation-contracts": "^2.5|^3",
-                "symfony/polyfill-mbstring": "~1.0",
-                "symfony/service-contracts": "^2.5|^3",
-                "symfony/string": "^5.4|^6.0"
-            },
-            "conflict": {
-                "symfony/dependency-injection": "<5.4",
-                "symfony/dotenv": "<5.4",
-                "symfony/event-dispatcher": "<5.4",
-                "symfony/lock": "<5.4",
-                "symfony/process": "<5.4"
-            },
-            "provide": {
-                "psr/log-implementation": "1.0|2.0|3.0"
+                "php": ">=7.3"
             },
             "require-dev": {
-                "psr/log": "^1|^2|^3",
-                "symfony/config": "^5.4|^6.0",
-                "symfony/dependency-injection": "^5.4|^6.0",
-                "symfony/event-dispatcher": "^5.4|^6.0",
-                "symfony/lock": "^5.4|^6.0",
-                "symfony/process": "^5.4|^6.0",
-                "symfony/var-dumper": "^5.4|^6.0"
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
             },
-            "type": "library",
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\Console\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Eases the creation of beautiful and testable command line interfaces",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "cli",
-                "command-line",
-                "console",
-                "terminal"
-            ],
+            "description": "Collection of value objects that represent the PHP code units",
+            "homepage": "https://github.com/sebastianbergmann/code-unit",
             "support": {
-                "source": "https://github.com/symfony/console/tree/v6.3.4"
+                "issues": "https://github.com/sebastianbergmann/code-unit/issues",
+                "source": "https://github.com/sebastianbergmann/code-unit/tree/1.0.8"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-08-16T10:10:12+00:00"
+            "time": "2020-10-26T13:08:54+00:00"
         },
         {
-            "name": "symfony/deprecation-contracts",
-            "version": "v3.3.0",
+            "name": "sebastian/code-unit-reverse-lookup",
+            "version": "2.0.3",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/deprecation-contracts.git",
-                "reference": "7c3aff79d10325257a001fcf92d991f24fc967cf"
+                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
+                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/deprecation-contracts/zipball/7c3aff79d10325257a001fcf92d991f24fc967cf",
-                "reference": "7c3aff79d10325257a001fcf92d991f24fc967cf",
+                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
+                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1"
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "3.4-dev"
-                },
-                "thanks": {
-                    "name": "symfony/contracts",
-                    "url": "https://github.com/symfony/contracts"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "function.php"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 }
             ],
-            "description": "A generic function and convention to trigger deprecation notices",
-            "homepage": "https://symfony.com",
+            "description": "Looks up which function or method a line of code belongs to",
+            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
             "support": {
-                "source": "https://github.com/symfony/deprecation-contracts/tree/v3.3.0"
+                "issues": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues",
+                "source": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-05-23T14:45:45+00:00"
+            "time": "2020-09-28T05:30:19+00:00"
         },
         {
-            "name": "symfony/event-dispatcher",
-            "version": "v6.3.2",
+            "name": "sebastian/comparator",
+            "version": "4.0.8",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/event-dispatcher.git",
-                "reference": "adb01fe097a4ee930db9258a3cc906b5beb5cf2e"
+                "url": "https://github.com/sebastianbergmann/comparator.git",
+                "reference": "fa0f136dd2334583309d32b62544682ee972b51a"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/event-dispatcher/zipball/adb01fe097a4ee930db9258a3cc906b5beb5cf2e",
-                "reference": "adb01fe097a4ee930db9258a3cc906b5beb5cf2e",
+                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a",
+                "reference": "fa0f136dd2334583309d32b62544682ee972b51a",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "symfony/event-dispatcher-contracts": "^2.5|^3"
-            },
-            "conflict": {
-                "symfony/dependency-injection": "<5.4",
-                "symfony/service-contracts": "<2.5"
-            },
-            "provide": {
-                "psr/event-dispatcher-implementation": "1.0",
-                "symfony/event-dispatcher-implementation": "2.0|3.0"
+                "php": ">=7.3",
+                "sebastian/diff": "^4.0",
+                "sebastian/exporter": "^4.0"
             },
             "require-dev": {
-                "psr/log": "^1|^2|^3",
-                "symfony/config": "^5.4|^6.0",
-                "symfony/dependency-injection": "^5.4|^6.0",
-                "symfony/error-handler": "^5.4|^6.0",
-                "symfony/expression-language": "^5.4|^6.0",
-                "symfony/http-foundation": "^5.4|^6.0",
-                "symfony/service-contracts": "^2.5|^3",
-                "symfony/stopwatch": "^5.4|^6.0"
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\EventDispatcher\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                },
+                {
+                    "name": "Jeff Welch",
+                    "email": "whatthejeff@gmail.com"
+                },
+                {
+                    "name": "Volker Dusch",
+                    "email": "github@wallbash.com"
                 },
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Bernhard Schussek",
+                    "email": "bschussek@2bepublished.at"
                 }
             ],
-            "description": "Provides tools that allow your application components to communicate with each other by dispatching events and listening to them",
-            "homepage": "https://symfony.com",
+            "description": "Provides the functionality to compare PHP values for equality",
+            "homepage": "https://github.com/sebastianbergmann/comparator",
+            "keywords": [
+                "comparator",
+                "compare",
+                "equality"
+            ],
             "support": {
-                "source": "https://github.com/symfony/event-dispatcher/tree/v6.3.2"
+                "issues": "https://github.com/sebastianbergmann/comparator/issues",
+                "source": "https://github.com/sebastianbergmann/comparator/tree/4.0.8"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-07-06T06:56:43+00:00"
+            "time": "2022-09-14T12:41:17+00:00"
         },
         {
-            "name": "symfony/event-dispatcher-contracts",
-            "version": "v3.3.0",
+            "name": "sebastian/complexity",
+            "version": "2.0.3",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/event-dispatcher-contracts.git",
-                "reference": "a76aed96a42d2b521153fb382d418e30d18b59df"
+                "url": "https://github.com/sebastianbergmann/complexity.git",
+                "reference": "25f207c40d62b8b7aa32f5ab026c53561964053a"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/a76aed96a42d2b521153fb382d418e30d18b59df",
-                "reference": "a76aed96a42d2b521153fb382d418e30d18b59df",
+                "url": "https://api.github.com/repos/sebastianbergmann/complexity/zipball/25f207c40d62b8b7aa32f5ab026c53561964053a",
+                "reference": "25f207c40d62b8b7aa32f5ab026c53561964053a",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "psr/event-dispatcher": "^1"
+                "nikic/php-parser": "^4.18 || ^5.0",
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "3.4-dev"
-                },
-                "thanks": {
-                    "name": "symfony/contracts",
-                    "url": "https://github.com/symfony/contracts"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Contracts\\EventDispatcher\\": ""
-                }
+                "classmap": [
+                    "src/"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Generic abstractions related to dispatching event",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "abstractions",
-                "contracts",
-                "decoupling",
-                "interfaces",
-                "interoperability",
-                "standards"
-            ],
+            "description": "Library for calculating the complexity of PHP code units",
+            "homepage": "https://github.com/sebastianbergmann/complexity",
             "support": {
-                "source": "https://github.com/symfony/event-dispatcher-contracts/tree/v3.3.0"
+                "issues": "https://github.com/sebastianbergmann/complexity/issues",
+                "source": "https://github.com/sebastianbergmann/complexity/tree/2.0.3"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-05-23T14:45:45+00:00"
+            "time": "2023-12-22T06:19:30+00:00"
         },
         {
-            "name": "symfony/filesystem",
-            "version": "v6.3.1",
+            "name": "sebastian/diff",
+            "version": "4.0.6",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/filesystem.git",
-                "reference": "edd36776956f2a6fcf577edb5b05eb0e3bdc52ae"
+                "url": "https://github.com/sebastianbergmann/diff.git",
+                "reference": "ba01945089c3a293b01ba9badc29ad55b106b0bc"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/filesystem/zipball/edd36776956f2a6fcf577edb5b05eb0e3bdc52ae",
-                "reference": "edd36776956f2a6fcf577edb5b05eb0e3bdc52ae",
+                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/ba01945089c3a293b01ba9badc29ad55b106b0bc",
+                "reference": "ba01945089c3a293b01ba9badc29ad55b106b0bc",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "symfony/polyfill-ctype": "~1.8",
-                "symfony/polyfill-mbstring": "~1.8"
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3",
+                "symfony/process": "^4.2 || ^5"
             },
             "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\Filesystem\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 },
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Kore Nordmann",
+                    "email": "mail@kore-nordmann.de"
                 }
             ],
-            "description": "Provides basic utilities for the filesystem",
-            "homepage": "https://symfony.com",
+            "description": "Diff implementation",
+            "homepage": "https://github.com/sebastianbergmann/diff",
+            "keywords": [
+                "diff",
+                "udiff",
+                "unidiff",
+                "unified diff"
+            ],
             "support": {
-                "source": "https://github.com/symfony/filesystem/tree/v6.3.1"
+                "issues": "https://github.com/sebastianbergmann/diff/issues",
+                "source": "https://github.com/sebastianbergmann/diff/tree/4.0.6"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-06-01T08:30:39+00:00"
+            "time": "2024-03-02T06:30:58+00:00"
         },
         {
-            "name": "symfony/finder",
-            "version": "v6.3.3",
+            "name": "sebastian/environment",
+            "version": "5.1.5",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/finder.git",
-                "reference": "9915db259f67d21eefee768c1abcf1cc61b1fc9e"
+                "url": "https://github.com/sebastianbergmann/environment.git",
+                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/finder/zipball/9915db259f67d21eefee768c1abcf1cc61b1fc9e",
-                "reference": "9915db259f67d21eefee768c1abcf1cc61b1fc9e",
+                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
+                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1"
+                "php": ">=7.3"
             },
             "require-dev": {
-                "symfony/filesystem": "^6.0"
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-posix": "*"
             },
             "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "5.1-dev"
+                }
+            },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\Finder\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 }
             ],
-            "description": "Finds files and directories via an intuitive fluent interface",
-            "homepage": "https://symfony.com",
+            "description": "Provides functionality to handle HHVM/PHP environments",
+            "homepage": "http://www.github.com/sebastianbergmann/environment",
+            "keywords": [
+                "Xdebug",
+                "environment",
+                "hhvm"
+            ],
             "support": {
-                "source": "https://github.com/symfony/finder/tree/v6.3.3"
+                "issues": "https://github.com/sebastianbergmann/environment/issues",
+                "source": "https://github.com/sebastianbergmann/environment/tree/5.1.5"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-07-31T08:31:44+00:00"
+            "time": "2023-02-03T06:03:51+00:00"
         },
         {
-            "name": "symfony/options-resolver",
-            "version": "v6.3.0",
+            "name": "sebastian/exporter",
+            "version": "4.0.6",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/options-resolver.git",
-                "reference": "a10f19f5198d589d5c33333cffe98dc9820332dd"
+                "url": "https://github.com/sebastianbergmann/exporter.git",
+                "reference": "78c00df8f170e02473b682df15bfcdacc3d32d72"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/options-resolver/zipball/a10f19f5198d589d5c33333cffe98dc9820332dd",
-                "reference": "a10f19f5198d589d5c33333cffe98dc9820332dd",
+                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/78c00df8f170e02473b682df15bfcdacc3d32d72",
+                "reference": "78c00df8f170e02473b682df15bfcdacc3d32d72",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "symfony/deprecation-contracts": "^2.5|^3"
+                "php": ">=7.3",
+                "sebastian/recursion-context": "^4.0"
+            },
+            "require-dev": {
+                "ext-mbstring": "*",
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\OptionsResolver\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                },
+                {
+                    "name": "Jeff Welch",
+                    "email": "whatthejeff@gmail.com"
+                },
+                {
+                    "name": "Volker Dusch",
+                    "email": "github@wallbash.com"
+                },
+                {
+                    "name": "Adam Harvey",
+                    "email": "aharvey@php.net"
                 },
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Bernhard Schussek",
+                    "email": "bschussek@gmail.com"
                 }
             ],
-            "description": "Provides an improved replacement for the array_replace PHP function",
-            "homepage": "https://symfony.com",
+            "description": "Provides the functionality to export PHP variables for visualization",
+            "homepage": "https://www.github.com/sebastianbergmann/exporter",
             "keywords": [
-                "config",
-                "configuration",
-                "options"
+                "export",
+                "exporter"
             ],
             "support": {
-                "source": "https://github.com/symfony/options-resolver/tree/v6.3.0"
+                "issues": "https://github.com/sebastianbergmann/exporter/issues",
+                "source": "https://github.com/sebastianbergmann/exporter/tree/4.0.6"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-05-12T14:21:09+00:00"
+            "time": "2024-03-02T06:33:00+00:00"
         },
         {
-            "name": "symfony/polyfill-ctype",
-            "version": "v1.28.0",
+            "name": "sebastian/global-state",
+            "version": "5.0.7",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/polyfill-ctype.git",
-                "reference": "ea208ce43cbb04af6867b4fdddb1bdbf84cc28cb"
+                "url": "https://github.com/sebastianbergmann/global-state.git",
+                "reference": "bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/ea208ce43cbb04af6867b4fdddb1bdbf84cc28cb",
-                "reference": "ea208ce43cbb04af6867b4fdddb1bdbf84cc28cb",
+                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9",
+                "reference": "bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.1"
+                "php": ">=7.3",
+                "sebastian/object-reflector": "^2.0",
+                "sebastian/recursion-context": "^4.0"
             },
-            "provide": {
-                "ext-ctype": "*"
+            "require-dev": {
+                "ext-dom": "*",
+                "phpunit/phpunit": "^9.3"
             },
             "suggest": {
-                "ext-ctype": "For best performance"
+                "ext-uopz": "*"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "1.28-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
+                    "dev-master": "5.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Ctype\\": ""
-                }
+                "classmap": [
+                    "src/"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Gert de Pagter",
-                    "email": "BackEndTea@gmail.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 }
             ],
-            "description": "Symfony polyfill for ctype functions",
-            "homepage": "https://symfony.com",
+            "description": "Snapshotting of global state",
+            "homepage": "http://www.github.com/sebastianbergmann/global-state",
             "keywords": [
-                "compatibility",
-                "ctype",
-                "polyfill",
-                "portable"
+                "global state"
             ],
             "support": {
-                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.28.0"
+                "issues": "https://github.com/sebastianbergmann/global-state/issues",
+                "source": "https://github.com/sebastianbergmann/global-state/tree/5.0.7"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-01-26T09:26:14+00:00"
+            "time": "2024-03-02T06:35:11+00:00"
         },
         {
-            "name": "symfony/polyfill-intl-grapheme",
-            "version": "v1.28.0",
+            "name": "sebastian/lines-of-code",
+            "version": "1.0.4",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/polyfill-intl-grapheme.git",
-                "reference": "875e90aeea2777b6f135677f618529449334a612"
+                "url": "https://github.com/sebastianbergmann/lines-of-code.git",
+                "reference": "e1e4a170560925c26d424b6a03aed157e7dcc5c5"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/875e90aeea2777b6f135677f618529449334a612",
-                "reference": "875e90aeea2777b6f135677f618529449334a612",
+                "url": "https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/e1e4a170560925c26d424b6a03aed157e7dcc5c5",
+                "reference": "e1e4a170560925c26d424b6a03aed157e7dcc5c5",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.1"
+                "nikic/php-parser": "^4.18 || ^5.0",
+                "php": ">=7.3"
             },
-            "suggest": {
-                "ext-intl": "For best performance"
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "1.28-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
+                    "dev-master": "1.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Intl\\Grapheme\\": ""
-                }
+                "classmap": [
+                    "src/"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
-            "authors": [
-                {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
+            "authors": [
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Symfony polyfill for intl's grapheme_* functions",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "compatibility",
-                "grapheme",
-                "intl",
-                "polyfill",
-                "portable",
-                "shim"
-            ],
+            "description": "Library for counting the lines of code in PHP source code",
+            "homepage": "https://github.com/sebastianbergmann/lines-of-code",
             "support": {
-                "source": "https://github.com/symfony/polyfill-intl-grapheme/tree/v1.28.0"
+                "issues": "https://github.com/sebastianbergmann/lines-of-code/issues",
+                "source": "https://github.com/sebastianbergmann/lines-of-code/tree/1.0.4"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-01-26T09:26:14+00:00"
+            "time": "2023-12-22T06:20:34+00:00"
         },
         {
-            "name": "symfony/polyfill-intl-normalizer",
-            "version": "v1.28.0",
+            "name": "sebastian/object-enumerator",
+            "version": "4.0.4",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/polyfill-intl-normalizer.git",
-                "reference": "8c4ad05dd0120b6a53c1ca374dca2ad0a1c4ed92"
+                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
+                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/8c4ad05dd0120b6a53c1ca374dca2ad0a1c4ed92",
-                "reference": "8c4ad05dd0120b6a53c1ca374dca2ad0a1c4ed92",
+                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71",
+                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.1"
+                "php": ">=7.3",
+                "sebastian/object-reflector": "^2.0",
+                "sebastian/recursion-context": "^4.0"
             },
-            "suggest": {
-                "ext-intl": "For best performance"
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "1.28-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
+                    "dev-master": "4.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Intl\\Normalizer\\": ""
-                },
                 "classmap": [
-                    "Resources/stubs"
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 }
             ],
-            "description": "Symfony polyfill for intl's Normalizer class and related functions",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "compatibility",
-                "intl",
-                "normalizer",
-                "polyfill",
-                "portable",
-                "shim"
-            ],
+            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
+            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
             "support": {
-                "source": "https://github.com/symfony/polyfill-intl-normalizer/tree/v1.28.0"
+                "issues": "https://github.com/sebastianbergmann/object-enumerator/issues",
+                "source": "https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-01-26T09:26:14+00:00"
+            "time": "2020-10-26T13:12:34+00:00"
         },
         {
-            "name": "symfony/polyfill-mbstring",
-            "version": "v1.28.0",
+            "name": "sebastian/object-reflector",
+            "version": "2.0.4",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/polyfill-mbstring.git",
-                "reference": "42292d99c55abe617799667f454222c54c60e229"
+                "url": "https://github.com/sebastianbergmann/object-reflector.git",
+                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/42292d99c55abe617799667f454222c54c60e229",
-                "reference": "42292d99c55abe617799667f454222c54c60e229",
+                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
+                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.1"
+                "php": ">=7.3"
             },
-            "provide": {
-                "ext-mbstring": "*"
-            },
-            "suggest": {
-                "ext-mbstring": "For best performance"
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "1.28-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Mbstring\\": ""
-                }
+                "classmap": [
+                    "src/"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 }
             ],
-            "description": "Symfony polyfill for the Mbstring extension",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "compatibility",
-                "mbstring",
-                "polyfill",
-                "portable",
-                "shim"
-            ],
+            "description": "Allows reflection of object attributes, including inherited and non-public ones",
+            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
             "support": {
-                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.28.0"
+                "issues": "https://github.com/sebastianbergmann/object-reflector/issues",
+                "source": "https://github.com/sebastianbergmann/object-reflector/tree/2.0.4"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-07-28T09:04:16+00:00"
+            "time": "2020-10-26T13:14:26+00:00"
         },
         {
-            "name": "symfony/polyfill-php80",
-            "version": "v1.28.0",
+            "name": "sebastian/recursion-context",
+            "version": "4.0.5",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/polyfill-php80.git",
-                "reference": "6caa57379c4aec19c0a12a38b59b26487dcfe4b5"
+                "url": "https://github.com/sebastianbergmann/recursion-context.git",
+                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/6caa57379c4aec19c0a12a38b59b26487dcfe4b5",
-                "reference": "6caa57379c4aec19c0a12a38b59b26487dcfe4b5",
+                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
+                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.1"
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "1.28-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
+                    "dev-master": "4.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Php80\\": ""
-                },
                 "classmap": [
-                    "Resources/stubs"
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Ion Bazan",
-                    "email": "ion.bazan@gmail.com"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 },
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
+                    "name": "Jeff Welch",
+                    "email": "whatthejeff@gmail.com"
                 },
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Adam Harvey",
+                    "email": "aharvey@php.net"
                 }
             ],
-            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "compatibility",
-                "polyfill",
-                "portable",
-                "shim"
-            ],
+            "description": "Provides functionality to recursively process PHP variables",
+            "homepage": "https://github.com/sebastianbergmann/recursion-context",
             "support": {
-                "source": "https://github.com/symfony/polyfill-php80/tree/v1.28.0"
+                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
+                "source": "https://github.com/sebastianbergmann/recursion-context/tree/4.0.5"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-01-26T09:26:14+00:00"
+            "time": "2023-02-03T06:07:39+00:00"
         },
         {
-            "name": "symfony/polyfill-php81",
-            "version": "v1.28.0",
+            "name": "sebastian/resource-operations",
+            "version": "3.0.4",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/polyfill-php81.git",
-                "reference": "7581cd600fa9fd681b797d00b02f068e2f13263b"
+                "url": "https://github.com/sebastianbergmann/resource-operations.git",
+                "reference": "05d5692a7993ecccd56a03e40cd7e5b09b1d404e"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php81/zipball/7581cd600fa9fd681b797d00b02f068e2f13263b",
-                "reference": "7581cd600fa9fd681b797d00b02f068e2f13263b",
+                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/05d5692a7993ecccd56a03e40cd7e5b09b1d404e",
+                "reference": "05d5692a7993ecccd56a03e40cd7e5b09b1d404e",
                 "shasum": ""
             },
             "require": {
-                "php": ">=7.1"
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.0"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "1.28-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
+                    "dev-main": "3.0-dev"
                 }
             },
             "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Php81\\": ""
-                },
                 "classmap": [
-                    "Resources/stubs"
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
                 }
             ],
-            "description": "Symfony polyfill backporting some PHP 8.1+ features to lower PHP versions",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "compatibility",
-                "polyfill",
-                "portable",
-                "shim"
-            ],
+            "description": "Provides a list of PHP built-in functions that operate on resources",
+            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
             "support": {
-                "source": "https://github.com/symfony/polyfill-php81/tree/v1.28.0"
+                "source": "https://github.com/sebastianbergmann/resource-operations/tree/3.0.4"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-01-26T09:26:14+00:00"
+            "time": "2024-03-14T16:00:52+00:00"
         },
         {
-            "name": "symfony/process",
-            "version": "v6.3.4",
+            "name": "sebastian/type",
+            "version": "3.2.1",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/process.git",
-                "reference": "0b5c29118f2e980d455d2e34a5659f4579847c54"
+                "url": "https://github.com/sebastianbergmann/type.git",
+                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/process/zipball/0b5c29118f2e980d455d2e34a5659f4579847c54",
-                "reference": "0b5c29118f2e980d455d2e34a5659f4579847c54",
+                "url": "https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
+                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1"
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.5"
             },
             "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.2-dev"
+                }
+            },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\Process\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Executes commands in sub-processes",
-            "homepage": "https://symfony.com",
+            "description": "Collection of value objects that represent the types of the PHP type system",
+            "homepage": "https://github.com/sebastianbergmann/type",
             "support": {
-                "source": "https://github.com/symfony/process/tree/v6.3.4"
+                "issues": "https://github.com/sebastianbergmann/type/issues",
+                "source": "https://github.com/sebastianbergmann/type/tree/3.2.1"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-08-07T10:39:22+00:00"
+            "time": "2023-02-03T06:13:03+00:00"
         },
         {
-            "name": "symfony/service-contracts",
-            "version": "v3.3.0",
+            "name": "sebastian/version",
+            "version": "3.0.2",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/service-contracts.git",
-                "reference": "40da9cc13ec349d9e4966ce18b5fbcd724ab10a4"
+                "url": "https://github.com/sebastianbergmann/version.git",
+                "reference": "c6c1022351a901512170118436c764e473f6de8c"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/service-contracts/zipball/40da9cc13ec349d9e4966ce18b5fbcd724ab10a4",
-                "reference": "40da9cc13ec349d9e4966ce18b5fbcd724ab10a4",
+                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c",
+                "reference": "c6c1022351a901512170118436c764e473f6de8c",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "psr/container": "^2.0"
-            },
-            "conflict": {
-                "ext-psr": "<1.1|>=2"
+                "php": ">=7.3"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-main": "3.4-dev"
-                },
-                "thanks": {
-                    "name": "symfony/contracts",
-                    "url": "https://github.com/symfony/contracts"
+                    "dev-master": "3.0-dev"
                 }
             },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Contracts\\Service\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Test/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
                 }
             ],
-            "description": "Generic abstractions related to writing services",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "abstractions",
-                "contracts",
-                "decoupling",
-                "interfaces",
-                "interoperability",
-                "standards"
-            ],
+            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
+            "homepage": "https://github.com/sebastianbergmann/version",
             "support": {
-                "source": "https://github.com/symfony/service-contracts/tree/v3.3.0"
+                "issues": "https://github.com/sebastianbergmann/version/issues",
+                "source": "https://github.com/sebastianbergmann/version/tree/3.0.2"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/sebastianbergmann",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-05-23T14:45:45+00:00"
+            "time": "2020-09-28T06:39:44+00:00"
         },
         {
-            "name": "symfony/stopwatch",
-            "version": "v6.3.0",
+            "name": "squizlabs/php_codesniffer",
+            "version": "3.10.1",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/stopwatch.git",
-                "reference": "fc47f1015ec80927ff64ba9094dfe8b9d48fe9f2"
+                "url": "https://github.com/PHPCSStandards/PHP_CodeSniffer.git",
+                "reference": "8f90f7a53ce271935282967f53d0894f8f1ff877"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/stopwatch/zipball/fc47f1015ec80927ff64ba9094dfe8b9d48fe9f2",
-                "reference": "fc47f1015ec80927ff64ba9094dfe8b9d48fe9f2",
+                "url": "https://api.github.com/repos/PHPCSStandards/PHP_CodeSniffer/zipball/8f90f7a53ce271935282967f53d0894f8f1ff877",
+                "reference": "8f90f7a53ce271935282967f53d0894f8f1ff877",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "symfony/service-contracts": "^2.5|^3"
+                "ext-simplexml": "*",
+                "ext-tokenizer": "*",
+                "ext-xmlwriter": "*",
+                "php": ">=5.4.0"
             },
+            "require-dev": {
+                "phpunit/phpunit": "^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.3.4"
+            },
+            "bin": [
+                "bin/phpcbf",
+                "bin/phpcs"
+            ],
             "type": "library",
-            "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\Stopwatch\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
-                ]
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.x-dev"
+                }
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
+                    "name": "Greg Sherwood",
+                    "role": "Former lead"
+                },
+                {
+                    "name": "Juliette Reinders Folmer",
+                    "role": "Current lead"
                 },
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Contributors",
+                    "homepage": "https://github.com/PHPCSStandards/PHP_CodeSniffer/graphs/contributors"
                 }
             ],
-            "description": "Provides a way to profile code",
-            "homepage": "https://symfony.com",
+            "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.",
+            "homepage": "https://github.com/PHPCSStandards/PHP_CodeSniffer",
+            "keywords": [
+                "phpcs",
+                "standards",
+                "static analysis"
+            ],
             "support": {
-                "source": "https://github.com/symfony/stopwatch/tree/v6.3.0"
+                "issues": "https://github.com/PHPCSStandards/PHP_CodeSniffer/issues",
+                "security": "https://github.com/PHPCSStandards/PHP_CodeSniffer/security/policy",
+                "source": "https://github.com/PHPCSStandards/PHP_CodeSniffer",
+                "wiki": "https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
+                    "url": "https://github.com/PHPCSStandards",
+                    "type": "github"
                 },
                 {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/jrfnl",
                     "type": "github"
                 },
                 {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
+                    "url": "https://opencollective.com/php_codesniffer",
+                    "type": "open_collective"
                 }
             ],
-            "time": "2023-02-16T10:14:28+00:00"
+            "time": "2024-05-22T21:24:41+00:00"
         },
         {
-            "name": "symfony/string",
-            "version": "v6.3.2",
+            "name": "theseer/tokenizer",
+            "version": "1.2.3",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/string.git",
-                "reference": "53d1a83225002635bca3482fcbf963001313fb68"
+                "url": "https://github.com/theseer/tokenizer.git",
+                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/string/zipball/53d1a83225002635bca3482fcbf963001313fb68",
-                "reference": "53d1a83225002635bca3482fcbf963001313fb68",
+                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
+                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                 "shasum": ""
             },
             "require": {
-                "php": ">=8.1",
-                "symfony/polyfill-ctype": "~1.8",
-                "symfony/polyfill-intl-grapheme": "~1.0",
-                "symfony/polyfill-intl-normalizer": "~1.0",
-                "symfony/polyfill-mbstring": "~1.0"
-            },
-            "conflict": {
-                "symfony/translation-contracts": "<2.5"
-            },
-            "require-dev": {
-                "symfony/error-handler": "^5.4|^6.0",
-                "symfony/http-client": "^5.4|^6.0",
-                "symfony/intl": "^6.2",
-                "symfony/translation-contracts": "^2.5|^3.0",
-                "symfony/var-exporter": "^5.4|^6.0"
+                "ext-dom": "*",
+                "ext-tokenizer": "*",
+                "ext-xmlwriter": "*",
+                "php": "^7.2 || ^8.0"
             },
             "type": "library",
             "autoload": {
-                "files": [
-                    "Resources/functions.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Component\\String\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
                 }
             ],
-            "description": "Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "grapheme",
-                "i18n",
-                "string",
-                "unicode",
-                "utf-8",
-                "utf8"
-            ],
+            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
             "support": {
-                "source": "https://github.com/symfony/string/tree/v6.3.2"
+                "issues": "https://github.com/theseer/tokenizer/issues",
+                "source": "https://github.com/theseer/tokenizer/tree/1.2.3"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
+                    "url": "https://github.com/theseer",
                     "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
                 }
             ],
-            "time": "2023-07-05T08:41:27+00:00"
+            "time": "2024-03-03T12:36:25+00:00"
         },
         {
-            "name": "symfony/yaml",
-            "version": "v3.4.47",
+            "name": "yiisoft/yii2-coding-standards",
+            "version": "3.0.1",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/yaml.git",
-                "reference": "88289caa3c166321883f67fe5130188ebbb47094"
+                "url": "https://github.com/yiisoft/yii2-coding-standards.git",
+                "reference": "842ffdf6c31f46bb6f4b3f3c7dda4f570321ace7"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/yaml/zipball/88289caa3c166321883f67fe5130188ebbb47094",
-                "reference": "88289caa3c166321883f67fe5130188ebbb47094",
+                "url": "https://api.github.com/repos/yiisoft/yii2-coding-standards/zipball/842ffdf6c31f46bb6f4b3f3c7dda4f570321ace7",
+                "reference": "842ffdf6c31f46bb6f4b3f3c7dda4f570321ace7",
                 "shasum": ""
             },
             "require": {
-                "php": "^5.5.9|>=7.0.8",
-                "symfony/polyfill-ctype": "~1.8"
+                "php": ">=5.4.0",
+                "squizlabs/php_codesniffer": ">=3.2"
             },
-            "conflict": {
-                "symfony/console": "<3.4"
-            },
-            "require-dev": {
-                "symfony/console": "~3.4|~4.0"
-            },
-            "suggest": {
-                "symfony/console": "For validating YAML files using the lint command"
-            },
-            "type": "library",
+            "type": "phpcodesniffer-standard",
             "autoload": {
                 "psr-4": {
-                    "Symfony\\Component\\Yaml\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
-                ]
+                    "yii\\console\\controllers\\": "src/console/controllers/"
+                }
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
+                    "name": "Qiang Xue",
+                    "email": "qiang.xue@gmail.com",
+                    "homepage": "https://www.yiiframework.com/",
+                    "role": "Founder and project lead"
+                },
+                {
+                    "name": "Alexander Makarov",
+                    "email": "sam@rmcreative.ru",
+                    "homepage": "https://rmcreative.ru/",
+                    "role": "Core framework development"
+                },
+                {
+                    "name": "Maurizio Domba",
+                    "homepage": "https://mdomba.info/",
+                    "role": "Core framework development"
+                },
+                {
+                    "name": "Carsten Brandt",
+                    "email": "mail@cebe.cc",
+                    "homepage": "https://cebe.cc/",
+                    "role": "Core framework development"
+                },
+                {
+                    "name": "Timur Ruziev",
+                    "email": "resurtm@gmail.com",
+                    "homepage": "https://resurtm.com/",
+                    "role": "Core framework development"
                 },
                 {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Paul Klimov",
+                    "email": "klimov.paul@gmail.com",
+                    "role": "Core framework development"
                 }
             ],
-            "description": "Symfony Yaml Component",
-            "homepage": "https://symfony.com",
+            "description": "Yii PHP Framework Version 2 - Coding standard tools",
+            "homepage": "https://www.yiiframework.com/",
+            "keywords": [
+                "codesniffer",
+                "framework",
+                "yii"
+            ],
             "support": {
-                "source": "https://github.com/symfony/yaml/tree/v3.4.47"
+                "forum": "https://www.yiiframework.com/forum/",
+                "irc": "ircs://irc.libera.chat:6697/yii",
+                "issues": "https://github.com/yiisoft/yii2/issues?state=open",
+                "source": "https://github.com/yiisoft/yii2",
+                "wiki": "https://www.yiiframework.com/wiki/"
             },
             "funding": [
                 {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
-                    "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
+                    "url": "https://opencollective.com/yiisoft",
+                    "type": "open_collective"
                 }
             ],
-            "time": "2020-10-24T10:57:07+00:00"
+            "time": "2024-06-12T13:50:40+00:00"
         }
     ],
     "aliases": [],
@@ -3596,7 +2409,7 @@
     "prefer-stable": true,
     "prefer-lowest": false,
     "platform": {
-        "php": ">=5.4.0",
+        "php": ">=7.3.0",
         "ext-mbstring": "*",
         "ext-ctype": "*",
         "lib-pcre": "*"
diff --git a/cs/TODO.md b/cs/TODO.md
deleted file mode 100644
index 79862057096..00000000000
--- a/cs/TODO.md
+++ /dev/null
@@ -1 +0,0 @@
-This should be moved to separate package, like `yii\yii2-cs`.
diff --git a/cs/src/YiiConfig.php b/cs/src/YiiConfig.php
deleted file mode 100644
index 582ab283bf0..00000000000
--- a/cs/src/YiiConfig.php
+++ /dev/null
@@ -1,172 +0,0 @@
-<?php
-/**
- * @link https://www.yiiframework.com/
- * @copyright Copyright (c) 2008 Yii Software LLC
- * @license https://www.yiiframework.com/license/
- */
-
-namespace yii\cs;
-
-use PhpCsFixer\Config;
-use yii\helpers\ArrayHelper;
-
-/**
- * Basic rules used by Yii 2 ecosystem.
- *
- * @author Robert Korulczyk <robert@korulczyk.pl>
- * @since 2.0.0
- */
-class YiiConfig extends Config
-{
-    /**
-     * {@inheritdoc}
-     */
-    public function __construct($name = 'yii-cs-config')
-    {
-        parent::__construct($name);
-
-        $this->setRiskyAllowed(true);
-
-        $this->setRules([
-            '@PSR2' => true,
-            'array_syntax' => [
-                'syntax' => 'short',
-            ],
-            'binary_operator_spaces' => [
-                'align_double_arrow' => false,
-                'align_equals' => false,
-            ],
-            'blank_line_after_opening_tag' => true,
-            'cast_spaces' => true,
-            'concat_space' => [
-                'spacing' => 'one',
-            ],
-            'dir_constant' => true,
-            'ereg_to_preg' => true,
-            'function_typehint_space' => true,
-            'hash_to_slash_comment' => true,
-            'include' => true,
-            'heredoc_to_nowdoc' => true,
-            'is_null' => [
-                'use_yoda_style' => false,
-            ],
-            'linebreak_after_opening_tag' => true,
-            'lowercase_cast' => true,
-            'magic_constant_casing' => true,
-//            'mb_str_functions' => true, // needs more discussion
-//            'method_separation' => true, // conflicts with current Yii style with double line between properties and methods
-            'modernize_types_casting' => true,
-            'native_function_casing' => true,
-            'new_with_braces' => true,
-            'no_alias_functions' => true,
-            'no_blank_lines_after_class_opening' => true,
-            'no_blank_lines_after_phpdoc' => true,
-            'no_empty_comment' => true,
-            'no_empty_phpdoc' => true,
-            'no_empty_statement' => true,
-            'no_extra_consecutive_blank_lines' => [
-                'tokens' => [
-                    'break',
-                    'continue',
-//                    'extra', // conflicts with current Yii style with double line between properties and methods
-                    'return',
-                    'throw',
-                    'use',
-                    'use_trait',
-//                    'curly_brace_block', // breaks namespaces blocks
-                    'parenthesis_brace_block',
-                    'square_brace_block',
-                ],
-            ],
-            'no_leading_import_slash' => true,
-            'no_leading_namespace_whitespace' => true,
-            'no_mixed_echo_print' => true,
-            'no_multiline_whitespace_around_double_arrow' => true,
-            'no_multiline_whitespace_before_semicolons' => true,
-            'no_php4_constructor' => true,
-            'no_short_bool_cast' => true,
-            'no_singleline_whitespace_before_semicolons' => true,
-            'no_spaces_around_offset' => true,
-            'no_trailing_comma_in_list_call' => true,
-            'no_trailing_comma_in_singleline_array' => true,
-            'no_unneeded_control_parentheses' => true,
-            'no_unused_imports' => true,
-            'no_useless_else' => true,
-            'no_useless_return' => true,
-            'no_whitespace_before_comma_in_array' => true,
-            'no_whitespace_in_blank_line' => true,
-            'non_printable_character' => true,
-            'normalize_index_brace' => true,
-            'object_operator_without_whitespace' => true,
-//            'ordered_class_elements' => [ // needs more discussion
-//                'order' => [
-//                    'use_trait',
-//                    'constant_public',
-//                    'constant_protected',
-//                    'constant_private',
-//                    'property_public',
-//                    'property_protected',
-//                    'property_private',
-//                    'construct',
-//                    'destruct',
-//                    'magic',
-//                ],
-//            ],
-            'ordered_imports' => [
-                'sortAlgorithm' => 'alpha',
-                'importsOrder' => [
-                    'const',
-                    'function',
-                    'class',
-                ],
-            ],
-            'php_unit_construct' => true,
-            'php_unit_dedicate_assert' => true,
-            'php_unit_fqcn_annotation' => true,
-//            'php_unit_strict' => true, // needs more attention
-            'phpdoc_add_missing_param_annotation' => true,
-            'phpdoc_indent' => true,
-//            'phpdoc_inline_tag' => true, // see https://github.com/yiisoft/yii2/issues/11635
-            'phpdoc_no_access' => true,
-            'phpdoc_no_empty_return' => true,
-            'phpdoc_no_package' => true,
-            'phpdoc_no_useless_inheritdoc' => true,
-//            'phpdoc_order', // may be useful, but should be configurable: https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/1602
-            'phpdoc_return_self_reference' => true,
-            'phpdoc_scalar' => true,
-            'phpdoc_single_line_var_spacing' => true,
-            'phpdoc_summary' => true,
-//            'phpdoc_to_comment' => true, // breaks phpdoc for define('CONSTANT', $value);
-            'phpdoc_trim' => true,
-            'phpdoc_types' => true,
-            'phpdoc_var_without_name' => true,
-            'protected_to_private' => true,
-            'psr4' => true,
-            'self_accessor' => true,
-            'short_scalar_cast' => true,
-            'single_blank_line_before_namespace' => true,
-            'single_quote' => true,
-            'standardize_not_equals' => true,
-            'ternary_operator_spaces' => true,
-            'trailing_comma_in_multiline_array' => true,
-            'trim_array_spaces' => true,
-            'unary_operator_spaces' => true,
-            'whitespace_after_comma_in_array' => true,
-        ]);
-    }
-
-    /**
-     * Merge current rules' config with provided list of rules.
-     *
-     * @param array $rules
-     * @return $this
-     * @see setRules()
-     * @see ArrayHelper::merge()
-     */
-    public function mergeRules(array $rules)
-    {
-        $this->setRules(ArrayHelper::merge($this->getRules(), $rules));
-
-        return $this;
-    }
-}
diff --git a/cs/src/YiisoftConfig.php b/cs/src/YiisoftConfig.php
deleted file mode 100644
index 16dc6d6f871..00000000000
--- a/cs/src/YiisoftConfig.php
+++ /dev/null
@@ -1,39 +0,0 @@
-<?php
-/**
- * @link https://www.yiiframework.com/
- * @copyright Copyright (c) 2008 Yii Software LLC
- * @license https://www.yiiframework.com/license/
- */
-
-namespace yii\cs;
-
-/**
- * Basic rules used by Yii 2 official packages.
- *
- * @author Robert Korulczyk <robert@korulczyk.pl>
- * @since 2.0.0
- */
-final class YiisoftConfig extends YiiConfig
-{
-    /**
-     * {@inheritdoc}
-     */
-    public function __construct()
-    {
-        parent::__construct('yiisoft-cs-config');
-
-        $header = <<<'HEADER'
-@link https://www.yiiframework.com/
-@copyright Copyright (c) 2008 Yii Software LLC
-@license https://www.yiiframework.com/license/
-HEADER;
-
-        $this->mergeRules([
-            'header_comment' => [
-                'header' => $header,
-                'commentType' => 'PHPDoc',
-                'separate' => 'bottom',
-            ],
-        ]);
-    }
-}
diff --git a/docs/guide-ar/intro-yii.md b/docs/guide-ar/intro-yii.md
index bff073a5c4f..ae284244e2a 100644
--- a/docs/guide-ar/intro-yii.md
+++ b/docs/guide-ar/intro-yii.md
@@ -45,7 +45,7 @@ Yii هو إطار عام لبرمجة الويب ، مما يعني أنه يم
 # <div dir="rtl">المتطلبات الأساسية للعمل على إطار ال Yii</div>
 
 <ul dir="rtl">
-    <li>الإصدار PHP 5.4.0 أو أكثر</li>
+    <li>الإصدار PHP 7.3.0 أو أكثر</li>
     <li>المعرفة الأساسية بمفاهيم البرمجة كائنية التوجه OOP</li>
     <li>المعرفة بآخر وأحدث التقنيات الموجودة بال php مثل ال namespaces, traits، الفهم لهذه المفاهيم سيسهل عليك العمل كثيرا</li>
 </ul>
diff --git a/docs/guide-es/caching-data.md b/docs/guide-es/caching-data.md
index 1349865d064..7aa09cd71c0 100644
--- a/docs/guide-es/caching-data.md
+++ b/docs/guide-es/caching-data.md
@@ -191,6 +191,7 @@ Aquí abajo se muestra un sumario de las dependencias disponibles:
 - [[yii\caching\ChainedDependency]]: la dependencia cambia si cualquiera de las dependencias en la cadena cambia.
 - [[yii\caching\DbDependency]]: la dependencia cambia si el resultado de la consulta de la sentencia SQL especificada cambia.
 - [[yii\caching\ExpressionDependency]]: la dependencia cambia si el resultado de la expresión de PHP especificada cambia.
+- [[yii\caching\CallbackDependency]]: la dipendenza viene modificata se il risultato della callback PHP specificata cambia.
 - [[yii\caching\FileDependency]]:  la dependencia cambia si se modifica la última fecha de modificación del archivo.
 - [[yii\caching\TagDependency]]: marca un elemento de datos en caché con un nombre de grupo. Puedes invalidar los elementos de datos almacenados en caché
   con el mismo nombre del grupo a la vez llamando a [[yii\caching\TagDependency::invalidate()]].
diff --git a/docs/guide-es/intro-yii.md b/docs/guide-es/intro-yii.md
index 5c57a80a2c6..28f6e31182a 100644
--- a/docs/guide-es/intro-yii.md
+++ b/docs/guide-es/intro-yii.md
@@ -51,7 +51,7 @@ Esta guía está basada principalmente en la versión 2.0. del framework.
 Requisitos y Prerequisitos
 --------------------------
 
-Yii 2.0 requiere PHP 5.4.0 o una versión posterior y corre de mejor manera en la última versión de PHP. Se pueden encontrar requisitos más detallados de características individuales
+Yii 2.0 requiere PHP 7.3.0 o una versión posterior y corre de mejor manera en la última versión de PHP. Se pueden encontrar requisitos más detallados de características individuales
 ejecutando el script de comprobación incluido en cada lanzamiento de Yii.
 
 Para utilizar Yii se requieren conocimientos básicos de programación orientada a objetos (POO), porque el framework Yii se basa íntegramente en esta tecnología.
diff --git a/docs/guide-es/security-authentication.md b/docs/guide-es/security-authentication.md
new file mode 100644
index 00000000000..1a75e505788
--- /dev/null
+++ b/docs/guide-es/security-authentication.md
@@ -0,0 +1,167 @@
+Authentication
+==============
+
+La autenticación es el proceso de verificar la identidad de un usuario. Usualmente se usa un identificador (ej. un `username` o una dirección de correo electrónico) y una token secreto (ej. una contraseña o un token de acceso) para juzgar si el usuario es quien dice ser. La autenticación es la base de la función de inicio de sesión.
+
+Yii proporciona un marco de autenticación que conecta varios componentes para soportar el inicio de sesión. Para utilizar este marco, usted necesita principalmente hacer el siguiente trabajo:
+
+* Configurar el componente de la aplicación [[yii\web\User|user]];
+* Crear una clase que implemente la interfaz [[yii\web\IdentityInterface]].
+
+## Configurando [[yii\web\User]] <span id="configuring-user"></span>
+
+El componente [[yii\web\User|user]] gestiona el estado de autenticación del usuario. Requiere que especifiques una [[yii\web\User::identityClass|clase de identidad]] la cual contiene la lógica de autenticación. En la siguiente configuración de la aplicación, la [[yii\web\User::identityClass|clase identity]] para [[yii\web\User|user]] está configurada para ser `app\models\User` cuya implementación se explica en la siguiente subsección:
+
+```php
+return [
+    'components' => [
+        'user' => [
+            'identityClass' => 'app\models\User',
+        ],
+    ],
+];
+```
+
+## Implementando [[yii\web\IdentityInterface]] <span id="implementing-identity"></span>
+La [[yii\web\User::identityClass|clase identity]] debe implementar la [[yii\web\IdentityInterface]] que contiene los siguientes métodos:
+* [[yii\web\IdentityInterface::findIdentity()|findIdentity()]]: busca una instancia de la clase identidad usando el ID de usuario especificado. Este método se utiliza cuando se necesita mantener el estado de inicio de sesión (login) a través de la sesión.
+
+* [[yii\web\IdentityInterface::findIdentityByAccessToken()|findIdentityByAccessToken()]]: busca una instancia de la clase de identidad usando el token de acceso especificado. Este método se utiliza cuando se necesita autenticar a un usuario mediante un único token secreto (ej. en una aplicación RESTful sin estado).
+* [[yii\web\IdentityInterface::getId()|getId()]]: devuelve el ID del usuario representado por esta instancia de identidad.
+* [[yii\web\IdentityInterface::getAuthKey()|getAuthKey()]]: devuelve una clave utilizada para validar la sesión y el auto-login en caso de que esté habilitado.
+* [[yii\web\IdentityInterface::validateAuthKey()|validateAuthKey()]]: implementa la lógica para verificar la clave de autenticación.
+
+Si no se necesita un método en particular, se podría implementar con un cuerpo vacío, Por ejemplo, Si un método en particular no es necesario, puedes implementarlo con un cuerpo vacío. Por ejemplo, si tu aplicación es una aplicación RESTful pura sin estado, sólo necesitarás implementar [[yii\web\IdentityInterface::findIdentityByAccessToken()|findIdentityByAccessToken()]] y [[yii\web\IdentityInterface::getId()|getId()]] dejando el resto de métodos con un cuerpo vacío. O si tu aplicación utiliza autenticación sólo de sesión, necesitarías implementar todos los métodos excepto findIdentityByAccessToken().
+
+En el siguiente ejemplo, una clase [[yii\web\User::identityClass|identity]] es implementada como una clase [Active Record](db-active-record.md) asociada con la tabla de base de datos `user`.
+
+```php
+<?php
+
+use yii\db\ActiveRecord;
+use yii\web\IdentityInterface;
+
+class User extends ActiveRecord implements IdentityInterface
+{
+    public static function tableName()
+    {
+        return 'user';
+    }
+
+    /**
+     * Buscar una identidad por el ID dado.
+     *
+     * @param string|int $id ID que debe buscarse
+     * @return IdentityInterface|null objeto de identidad que coincide con el ID dado.
+     */
+    public static function findIdentity($id)
+    {
+        return static::findOne($id);
+    }
+
+    /**
+     * Buscar una identidad por el token dado..
+     *
+     * @param string $token token que debe buscarse
+     * @return IdentityInterface|null objeto de identidad que coincide con el token dado.
+     */
+    public static function findIdentityByAccessToken($token, $type = null)
+    {
+        return static::findOne(['access_token' => $token]);
+    }
+
+    /**
+     * @return int|string ID del usuario actual
+     */
+    public function getId()
+    {
+        return $this->id;
+    }
+
+    /**
+     * @return string|null llave de autenticación del usuario actual
+     */
+    public function getAuthKey()
+    {
+        return $this->auth_key;
+    }
+
+    /**
+     * @param string $authKey
+     * @return bool|null si la llave de autenticación es válida para el usuario actual
+     */
+    public function validateAuthKey($authKey)
+    {
+        return $this->getAuthKey() === $authKey;
+    }
+}
+```
+
+Puede utilizar el siguiente código para generar una clave de autenticación para cada usuario y almacenarla en la tabla `user`:
+
+```php
+class User extends ActiveRecord implements IdentityInterface
+{
+    ......
+
+    public function beforeSave($insert)
+    {
+        if (parent::beforeSave($insert)) {
+            if ($this->isNewRecord) {
+                $this->auth_key = \Yii::$app->security->generateRandomString();
+            }
+            return true;
+        }
+        return false;
+    }
+}
+```
+
+> Nota: No confundas la clase de identidad `User` con [[yii\web\User]]. La primera es la clase que implementa la lógica de autenticación. Suele implementarse como una clase [Active Record](db-active-record.md) asociada a algún almacenamiento persistente para guardar la información de las credenciales del usuario. Esta última es una clase de componente de aplicación responsable de gestionar el estado de autenticación del usuario.
+
+## Usando [[yii\web\User]] <span id="using-user"></span>
+Principalmente se usa [[yii\web\User]] en términos del componente de aplicación `user`.
+
+Puede detectar la identidad del usuario actual usando la expresión `Yii::$app->user->identity`. Devuelve una instancia de la clase [[yii\web\User::identityClass|identity]] que representa al usuario actualmente conectado, o `null` si el usuario actual no está autenticado (es decir, es un invitado). El siguiente código muestra como recuperar otra información relacionada con la autenticación desde [[yii\web\User]]:
+
+```php
+// El usuario actual identificado. `null` si el usuario no esta autenticado.
+$identity = Yii::$app->user->identity;
+
+// El ID del usuario actual. `null` si el usuario no esta autenticado.
+$id = Yii::$app->user->id;
+
+// si el usuario actual es un invitado (No autenticado)
+$isGuest = Yii::$app->user->isGuest;
+```
+
+Para acceder a un usuario, puede utilizar el siguiente código:
+
+```php
+// encontrar una identidad de usuario con el nombre de usuario especificado.
+// tenga en cuenta que es posible que desee comprobar la contraseña si es necesario
+$identity = User::findOne(['username' => $username]);
+
+// inicia la sesión del usuario.
+Yii::$app->user->login($identity);
+```
+
+El método [[yii\web\User::login()]] establece la identidad del usuario actual a [[yii\web\User]]. Si la sesión es [[yii\web\User::enableSession|habilitada]], mantendrá la identidad en la sesión para que el estado de autenticación del usuario se mantenga durante toda la sesión. Si el login basado en cookies (es decir, inicio de sesión "recordarme") está [[yii\web\User::enableAutoLogin|habilitado]], también guardará la identidad en una cookie para que el estado de autenticación del usuario pueda ser recuperado desde la cookie mientras la cookie permanezca válida.
+
+Para habilitar el login basado en cookies, necesita configurar [[yii\web\User::enableAutoLogin]] como `true` en la configuración de la aplicación. También necesita proporcionar un parámetro de tiempo de duración cuando llame al método [[yii\web\User::login()]].
+
+Para cerrar la sesión de un usuario, basta con llamar a:
+
+```php
+Yii::$app->user->logout();
+```
+
+Tenga en cuenta que cerrar la sesión de un usuario sólo tiene sentido cuando la sesión está activada. El método limpiará el estado de autenticación del usuario tanto de la memoria como de la sesión. Y por defecto, también destruirá *todos* los datos de sesión del usuario. Si desea mantener los datos de sesión, debe llamar a `Yii::$app->user->logout(false)`, en su lugar.
+
+## Eventos de Autenticación <span id="auth-events"></span>
+La clase [[yii\web\User]] genera algunos eventos durante los procesos de inicio y cierre de sesión.
+* [[yii\web\User::EVENT_BEFORE_LOGIN|EVENT_BEFORE_LOGIN]]: levantado al comienzo de [[yii\web\User::login()]]. Si el manejador del evento establece la propiedad [[yii\web\UserEvent::isValid|isValid]] del objeto evento a `false`, el proceso de inicio de sesión será cancelado.
+* [[yii\web\User::EVENT_AFTER_LOGIN|EVENT_AFTER_LOGIN]]: se produce después de un inicio de sesión exitoso.
+* [[yii\web\User::EVENT_BEFORE_LOGOUT|EVENT_BEFORE_LOGOUT]]: levantado al comienzo de [[yii\web\User::logout()]]. Si el manejador del evento establece la propiedad [[yii\web\UserEvent::isValid|isValid]] del objeto evento a `false`, el proceso de cierre de sesión será cancelado.
+* [[yii\web\User::EVENT_AFTER_LOGOUT|EVENT_AFTER_LOGOUT]]: se produce después de un cierre de sesión exitoso.
+Usted puede responder a estos eventos para implementar características como auditoria de inicio de sesión, estadísticas de usuarios en línea. Por ejemplo, en el manejador para [[yii\web\User::EVENT_AFTER_LOGIN|EVENT_AFTER_LOGIN]], puede registrar la hora de inicio de sesión y la dirección IP en la tabla `user`.
diff --git a/docs/guide-fr/caching-data.md b/docs/guide-fr/caching-data.md
index 01979d539b3..5f5cdcb8ae0 100644
--- a/docs/guide-fr/caching-data.md
+++ b/docs/guide-fr/caching-data.md
@@ -217,6 +217,7 @@ Ci-dessous nous présentons un résumé des dépendances de mise en cache dispon
 - [[yii\caching\ChainedDependency]]: la dépendance est modifiée si l'une des dépendances de la chaîne est modifiée.
 - [[yii\caching\DbDependency]]: la dépendance est modifiée si le résultat de le requête de l'instruction SQL spécifiée est modifié.
 - [[yii\caching\ExpressionDependency]]: la dépendance est modifiée si le résultat de l'expression PHP spécifiée est modifié.
+- [[yii\caching\CallbackDependency]]: la dépendance est modifiée si le résultat du rappel PHP spécifié est modifié.
 - [[yii\caching\FileDependency]]: la dépendance est modifiée si la date de dernière modification du fichier est modifiée.
 - [[yii\caching\TagDependency]]: associe une donnée mise en cache à une ou plusieurs balises. Vous pouvez invalider la donnée mise en cache associée à la balise spécifiée en appelant [[yii\caching\TagDependency::invalidate()]].
 
@@ -342,4 +343,3 @@ $result = $db->cache(function ($db) {
 La mise en cache de requêtes ne fonctionne pas avec des résultats de requêtes qui contiennent des gestionnaires de ressources. Par exemple, lorsque vous utilisez de type de colonne `BLOB` dans certains systèmes de gestion de bases de données (DBMS), la requête retourne un gestionnaire de ressources pour la donnée de la colonne.
 
 Quelques supports de stockage pour cache sont limités en taille. Par exemple, avec memcache, chaque entrée est limitée en taille à 1 MO. En conséquence, si le résultat d'une requête dépasse cette taille, la mise en cache échoue.
-
diff --git a/docs/guide-fr/intro-yii.md b/docs/guide-fr/intro-yii.md
index b378e366051..508d7608373 100644
--- a/docs/guide-fr/intro-yii.md
+++ b/docs/guide-fr/intro-yii.md
@@ -47,7 +47,7 @@ Ce guide est principalement pour la version 2.0.
 Configuration nécessaire
 ------------------------
 
-Yii 2.0 nécessite PHP 5.4.0 ou plus. Vous pouvez trouver plus de détails sur la configuration requise pour chaque fonctionnalité
+Yii 2.0 nécessite PHP 7.3.0 ou plus. Vous pouvez trouver plus de détails sur la configuration requise pour chaque fonctionnalité
 en utilisant le script de test de la configuration inclus dans chaque distribution de Yii.
 
 Utiliser Yii requiert des connaissances de base sur la programmation objet (OOP), en effet Yii est un framework basé sur ce type de programmation.
diff --git a/docs/guide-id/intro-yii.md b/docs/guide-id/intro-yii.md
index 2b1ae4c91cc..56620691ade 100644
--- a/docs/guide-id/intro-yii.md
+++ b/docs/guide-id/intro-yii.md
@@ -38,7 +38,7 @@ Panduan ini terutama tentang versi 2.0.
 
 ## Persyaratan dan Prasyarat
 
-Yii 2.0 memerlukan PHP 5.4.0 atau versi lebih tinggi. Anda dapat menemukan persyaratan yang lebih rinci untuk setiap fitur
+Yii 2.0 memerlukan PHP 7.3.0 atau versi lebih tinggi. Anda dapat menemukan persyaratan yang lebih rinci untuk setiap fitur
 dengan menjalankan pengecek persyaratan yang diikutsertakan dalam setiap rilis Yii.
 
 Menggunakan Yii memerlukan pengetahuan dasar tentang pemrograman berorientasi objek (OOP), mengingat Yii adalah framework berbasis OOP murni.
diff --git a/docs/guide-it/intro-yii.md b/docs/guide-it/intro-yii.md
index 056143be68b..f3cf8e7e4f6 100644
--- a/docs/guide-it/intro-yii.md
+++ b/docs/guide-it/intro-yii.md
@@ -50,7 +50,7 @@ Questa guida è focalizzata principalmente sulla versione 2.0.
 Richieste e requisiti di sistema
 ---------------------------------
 
-Yii 2.0 richiede PHP 5.4.0 o successivo. Puoi trovare maggiori dettagli sulle richieste delle singole funzionalità
+Yii 2.0 richiede PHP 7.3.0 o successivo. Puoi trovare maggiori dettagli sulle richieste delle singole funzionalità
 eseguendo lo script di verifica requisiti incluso in ogni versione di Yii.
 
 L'uso di Yii richiede una conoscenza base della programmazione ad oggetti (OOP), dato che Yii è un framework puramente OOP.
diff --git a/docs/guide-ja/README.md b/docs/guide-ja/README.md
index b86e3aaad98..c2c7997c695 100644
--- a/docs/guide-ja/README.md
+++ b/docs/guide-ja/README.md
@@ -135,6 +135,7 @@ RESTful ウェブ・サービス
 
 * [クイック・スタート](rest-quick-start.md)
 * [リソース](rest-resources.md)
+* [コレクションのフィルタリング](rest-filtering-collections.md)
 * [コントローラ](rest-controllers.md)
 * [ルーティング](rest-routing.md)
 * [レスポンス形式の設定](rest-response-formatting.md)
diff --git a/docs/guide-ja/caching-data.md b/docs/guide-ja/caching-data.md
index 513fdc59466..e0d82eda602 100644
--- a/docs/guide-ja/caching-data.md
+++ b/docs/guide-ja/caching-data.md
@@ -57,7 +57,7 @@ $data = $cache->getOrSet($key, function () use ($user_id) {
 
 キャッシュ・コンポーネントは通常グローバルに設定しアクセスできるように
 [アプリケーション・コンポーネント](structure-application-components.md) として登録されます。
-以下のコードは、二台のキャッシュ・サーバを用いる [Memcached](https://memcached.org/) を使うように
+以下のコードは、二台のキャッシュ・サーバを用いる [memcached](https://memcached.org/) を使うように
 `cache` アプリケーション・コンポーネントを構成する方法を示すものです。
 
 ```php
@@ -275,6 +275,7 @@ $data = $cache->get($key);
 - [[yii\caching\ChainedDependency]]: チェーン上のいずれかの依存が変更された場合に、依存が変更されます。
 - [[yii\caching\DbDependency]]: 指定された SQL 文のクエリ結果が変更された場合、依存が変更されます。
 - [[yii\caching\ExpressionDependency]]: 指定された PHP の式の結果が変更された場合、依存が変更されます。
+- [[yii\caching\CallbackDependency]]: 指定されたPHPコールバックの結果が変更された場合、依存関係は変更されます。
 - [[yii\caching\FileDependency]]: ファイルの最終更新日時が変更された場合、依存が変更されます。
 - [[yii\caching\TagDependency]]: キャッシュされるデータ・アイテムに一つまたは複数のタグを関連付けます。
   [[yii\caching\TagDependency::invalidate()]] を呼び出すことによって、指定されたタグ (複数可) を持つキャッシュされたデータ・アイテムを無効にすることができます。
@@ -431,4 +432,3 @@ $result = $db->cache(function ($db) {
 
 > Info: デフォルトでは、コンソール・アプリケーションは独立した構成情報ファイルを使用します。
 正しい結果を得るためには、ウェブとコンソールのアプリケーション構成で同じキャッシュ・コンポーネントを使用していることを確認してください。
-
diff --git a/docs/guide-ja/caching-fragment.md b/docs/guide-ja/caching-fragment.md
index 4648769f0aa..2e3bd038ab4 100644
--- a/docs/guide-ja/caching-fragment.md
+++ b/docs/guide-ja/caching-fragment.md
@@ -24,6 +24,11 @@ if ($this->beginCache($id)) {
 
 [データ・キャッシュ](caching-data.md) と同様に、キャッシュされるコンテントを識別するためにユニークな `$id` が必要になります。
 
+次のようにすると、フラグメント・キャッシュを削除することが出来ます。
+```php
+Yii::$app->cache->delete(['yii\widgets\FragmentCache', $id]);
+```
+
 
 ## キャッシュのオプション <span id="caching-options"></span>
 
diff --git a/docs/guide-ja/concept-behaviors.md b/docs/guide-ja/concept-behaviors.md
index a8583d92387..4389d7637ad 100644
--- a/docs/guide-ja/concept-behaviors.md
+++ b/docs/guide-ja/concept-behaviors.md
@@ -1,8 +1,8 @@
 ビヘイビア
 ==========
 
-ビヘイビアは [[yii\base\Behavior]] またその子クラスのインスタンスです。ビヘイビアは
-[ミックスイン](https://ja.wikipedia.org/wiki/Mixin) としても知られ、既存の [[yii\base\Component|component]] クラスの
+ビヘイビアは [[yii\base\Behavior]] またその子クラスのインスタンスです。
+ビヘイビアは [ミックスイン](https://ja.wikipedia.org/wiki/Mixin) としても知られ、既存の [[yii\base\Component|component]] クラスの
 機能を、クラスの継承を変更せずに拡張することができます。コンポーネントにビヘイビアをアタッチすると、その
 コンポーネントにはビヘイビアのメソッドとプロパティが "注入" され、それらのメソッドとプロパティは、
 コンポーネント・クラス自体に定義されているかのようにアクセスできるようになります。また、ビヘイビアは、
diff --git a/docs/guide-ja/concept-configurations.md b/docs/guide-ja/concept-configurations.md
index b62113647ad..6c664ea97a7 100644
--- a/docs/guide-ja/concept-configurations.md
+++ b/docs/guide-ja/concept-configurations.md
@@ -103,7 +103,7 @@ $config = [
             'class' => 'yii\caching\FileCache',
         ],
         'mailer' => [
-            'class' => 'yii\swiftmailer\Mailer',
+            'class' => 'yii\symfonymailer\Mailer',
         ],
         'log' => [
             'class' => 'yii\log\Dispatcher',
@@ -207,7 +207,7 @@ return [
         'class' => 'yii\caching\FileCache',
     ],
     'mailer' => [
-        'class' => 'yii\swiftmailer\Mailer',
+        'class' => 'yii\symfonymailer\Mailer',
     ],
     'log' => [
         'class' => 'yii\log\Dispatcher',
diff --git a/docs/guide-ja/concept-di-container.md b/docs/guide-ja/concept-di-container.md
index 9580d425118..c603b5cf615 100644
--- a/docs/guide-ja/concept-di-container.md
+++ b/docs/guide-ja/concept-di-container.md
@@ -541,7 +541,7 @@ $reader = $container->get('app\storage\DocumentsReader');
 
 依存注入と [サービス・ロケータ](concept-service-locator.md) はともに、疎結合でよりテストしやすい方法でのソフトウェア構築を可能にする、
 定番のデザインパターンです。
-依存注入とサービス・ロケータへのより深い理解を得るために、 [Martin の記事](https://martinfowler.com/articles/injection.html)
+依存注入とサービス・ロケータをより深く理解するために、 [Martin の記事](https://martinfowler.com/articles/injection.html)
 を読むことを強くお勧めします。
 
 Yii はその [サービス・ロケータ](concept-service-locator.md) を、依存注入 (DI) コンテナの上に実装しています。
diff --git a/docs/guide-ja/concept-properties.md b/docs/guide-ja/concept-properties.md
index 7692298683f..14464795ee7 100644
--- a/docs/guide-ja/concept-properties.md
+++ b/docs/guide-ja/concept-properties.md
@@ -80,7 +80,7 @@ getter と setter で定義されたプロパティには、いくつかの特
 * 通常の `property_exists()` の呼び出しでは、マジック・プロパティが存在するかどうかを知ることは出来ません。
   それぞれ、[[yii\base\BaseObject::canGetProperty()|canGetProperty()]] または [[yii\base\BaseObject::canSetProperty()|canSetProperty()]] を呼び出さなければなりません。
 
-このガイドの冒頭で説明した問題に戻ると、 `label` に値が代入されているあらゆる箇所で `trim()` を呼ぶのではなく、
-もう `setLabel()` という setter の内部だけで `trim()` を呼べば済むのです。
+このガイドの冒頭で説明した問題に戻ると、`label` に値が代入されているあらゆる箇所で `trim()` を呼ぶのではなく、
+`setLabel()` という setter の内部だけで `trim()` を呼べば済むようになります。
 さらに、新しい要求でラベルの先頭を大文字にする必要が発生しても、他のいっさいのコードに触れることなく、
 すぐに `setLabel()` メソッドを変更することができます。一箇所の変更は、すべての `label` への代入に普遍的に作用します。
diff --git a/docs/guide-ja/concept-service-locator.md b/docs/guide-ja/concept-service-locator.md
index e3082432de0..7cf325dac34 100644
--- a/docs/guide-ja/concept-service-locator.md
+++ b/docs/guide-ja/concept-service-locator.md
@@ -129,4 +129,4 @@ return [
 モジュールからサービスを引き出そうとする全てのリクエストは、そのモジュールが要求に応じられない場合は、すべてその親に渡されます。
 
 モジュール内のコンポーネントの構成情報は、親モジュール内のコンポーネントの構成情報とは決してマージされないことに注意して下さい。
-サービス・ロケータ・パターンによって私たちは名前の付いたサービスを定義することが出来ますが、同じ名前のサービスが同じ構成パラメータを使用すると想定することは出来ません。
+サービス・ロケータのパターンによって私たちは名前の付いたサービスを定義することが出来ますが、同じ名前のサービスが同じ構成パラメータを使用すると想定することは出来ません。
diff --git a/docs/guide-ja/db-active-record.md b/docs/guide-ja/db-active-record.md
index 2d149e531d8..6d3ff6cd935 100644
--- a/docs/guide-ja/db-active-record.md
+++ b/docs/guide-ja/db-active-record.md
@@ -650,6 +650,16 @@ Customer::deleteAll(['status' => Customer::STATUS_INACTIVE]);
 > - [[yii\db\ActiveRecord::updateCounters()]] 
 > - [[yii\db\ActiveRecord::updateAllCounters()]] 
 
+> Note: パフォーマンスを考慮して、DI(依存注入) はデフォルトではサポートされていません。必要であれば、
+> [[Yii::createObject()]] によってクラスのインスタンス生成をするように [[yii\db\ActiveRecord::instantiate()|instantiate()]] メソッドをオーバーライドして、サポートを追加することが出来ます。
+> 
+> ```php
+> public static function instantiate($row)
+> {
+>     return Yii::createObject(static::class);
+> }
+> ```
+
 ### データをリフレッシュする際のライフサイクル <span id="refreshing-data-life-cycle"></span>
 
 [[yii\db\ActiveRecord::refresh()|refresh()]] を呼んでアクティブ・レコード・インスタンスをリフレッシュする際は、リフレッシュが成功してメソッドが `true` を返すと
diff --git a/docs/guide-ja/db-dao.md b/docs/guide-ja/db-dao.md
index 26c3c6f3509..a9388ead827 100644
--- a/docs/guide-ja/db-dao.md
+++ b/docs/guide-ja/db-dao.md
@@ -682,5 +682,5 @@ $table = Yii::$app->db->getTableSchema('post');
 ```
 
 このメソッドは、テーブルのカラム、プライマリ・キー、外部キーなどの情報を含む [[yii\db\TableSchema]] オブジェクトを返します。
-これらの情報は、主として [クエリ・ビルダ](db-query-builder.md) や [アクティブ・レコード](db-active-record.md) によって利用されて、
+この情報は、主として [クエリ・ビルダ](db-query-builder.md) や [アクティブ・レコード](db-active-record.md) によって利用されて、
 特定のデータベースに依存しないコードを書くことを助けてくれています。
diff --git a/docs/guide-ja/db-migrations.md b/docs/guide-ja/db-migrations.md
index a0b489cb0cd..6fa39cfae34 100644
--- a/docs/guide-ja/db-migrations.md
+++ b/docs/guide-ja/db-migrations.md
@@ -685,7 +685,7 @@ class m150101_185401_create_news_table extends Migration
 `safeDown()` では、先に行を削除して、次にテーブルを削除しています。
 
 > Note: 全ての DBMS がトランザクションをサポートしている訳ではありません。また、トランザクションに入れることが出来ない DB クエリもあります。
-  いくつかの例を [暗黙のコミット](https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html) で見ることが出来ます。
+  そのいくつかの例を [暗黙のコミット](https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html) で見ることが出来ます。
   その場合には、代りに、`up()` と `down()` を実装しなければなりません。
 
 
diff --git a/docs/guide-ja/db-query-builder.md b/docs/guide-ja/db-query-builder.md
index 996b2a542f9..170e1aa2c89 100644
--- a/docs/guide-ja/db-query-builder.md
+++ b/docs/guide-ja/db-query-builder.md
@@ -299,7 +299,7 @@ $query->where([$column => $value]);
   値が自動的に一対のパーセント記号によって囲まれることに注意してください。
 
   > Note: PostgreSQL を使っている場合は、`like` の代りに、大文字と小文字を区別しない比較のための
-  > [`ilike`](https://www.postgresql.org/docs/8.3/functions-matching.html#FUNCTIONS-LIKE) を使うことも出来ます。
+  > [`ilike`](https://www.postgresql.org/docs/8.3/static/functions-matching.html#FUNCTIONS-LIKE) を使うことも出来ます。
 
 - `or like`: オペランド 2 が配列である場合に `LIKE` 述語が `OR` によって結合される以外は、
   `like` 演算子と同じです。
diff --git a/docs/guide-ja/input-tabular-input.md b/docs/guide-ja/input-tabular-input.md
index 252ca07a14b..48f2f7e986e 100644
--- a/docs/guide-ja/input-tabular-input.md
+++ b/docs/guide-ja/input-tabular-input.md
@@ -43,12 +43,14 @@ class SettingsController extends Controller
     {
         $settings = Setting::find()->indexBy('id')->all();
 
-        if (Model::loadMultiple($settings, Yii::$app->request->post()) && Model::validateMultiple($settings)) {
+        if ($this->request->isPost) {
+            if (Setting::loadMultiple($settings, $this->request->post()) && Setting::validateMultiple($settings)) {
             foreach ($settings as $setting) {
                 $setting->save(false);
             }
             return $this->redirect('index');
         }
+        }
 
         return $this->render('update', ['settings' => $settings]);
     }
@@ -71,10 +73,12 @@ use yii\widgets\ActiveForm;
 
 $form = ActiveForm::begin();
 
-foreach ($settings as $index => $setting) {
-    echo $form->field($setting, "[$index]value")->label($setting->name);
+foreach ($settings as $id => $setting) {
+    echo $form->field($setting, "[$id]value")->label($setting->name);
 }
 
+echo Html::submitButton('Save');
+
 ActiveForm::end();
 ```
 
@@ -88,20 +92,29 @@ ActiveForm::end();
 ```php
 public function actionCreate()
 {
-    $count = count(Yii::$app->request->post('Setting', []));
-    $settings = [new Setting()];
-    for($i = 1; $i < $count; $i++) {
-        $settings[] = new Setting();
+    $settings = [];
+    if ($this->request->isPost) {
+        $count = count($this->request->post($setting->tableName())) - 1;
+        for ($i = 0; $i < $count; $i++) {
+            $settings[$i] = new Setting();
+        }
+        if (Setting::loadMultiple($settings, $this->request->post()) && Setting::validateMultiple($settings)) {
+            foreach ($settings as $setting) {
+                $setting->save(false);
+            }
+            return $this->redirect('index');
     }
+    }
+    $settings[] = new Setting();
 
-    // ...
+    return $this->render('create', ['settings' => $settings]);
 }
 ```
 
 ここでは、デフォルトで一個のモデルを含む `$settings` 配列を初期値として作成し、少なくとも一個のテキスト・フィールドが常にビューに表示されるようにしています。
 そして、受信したインプットの行数に合せて、配列にモデルを追加しています。
 
-ビューでは javascript を使ってインプットの行を動的に追加することが出来ます。
+ビューでは JavaScript を使ってインプットの行を動的に追加することが出来ます。
 
 ### 更新、作成、削除を一つのページに組み合わせる
 
diff --git a/docs/guide-ja/input-validation.md b/docs/guide-ja/input-validation.md
index 420317c0f35..b8826135377 100644
--- a/docs/guide-ja/input-validation.md
+++ b/docs/guide-ja/input-validation.md
@@ -748,7 +748,7 @@ JS;
 
 ### Deferred 検証 <span id="deferred-validation"></span>
 
-非同期のクライアント・サイドの検証をサポートする必要がある場合は、[Defered オブジェクト](https://api.jquery.com/category/deferred-object/) を作成することが出来ます。
+非同期のクライアント・サイドの検証をサポートする必要がある場合は、[Deferred オブジェクト](https://api.jquery.com/category/deferred-object/) を作成することが出来ます。
 例えば、AJAX によるカスタム検証を実行するために、次のコードを使うことが出来ます。
 
 ```php
diff --git a/docs/guide-ja/intro-upgrade-from-v1.md b/docs/guide-ja/intro-upgrade-from-v1.md
index 53010f0da0e..b6dc75585d8 100644
--- a/docs/guide-ja/intro-upgrade-from-v1.md
+++ b/docs/guide-ja/intro-upgrade-from-v1.md
@@ -265,7 +265,7 @@ ActiveForm::end();
 テーマは、ソースのビュー・ファイル・パスをテーマのビュー・ファイル・パスにマップするパス・マッピング機構に基づくものになりました。
 例えば、あるテーマのパス・マップが `['/web/views' => '/web/themes/basic']` である場合、ビュー・ファイル `/web/views/site/index.php` のテーマ版は `/web/themes/basic/site/index.php` になります。
 この理由により、テーマはどのようなビュー・ファイルに対してでも適用することが出来るようになりました。
-コントローラやウィジェットのコンテキストの外で表示されるビューに対してすら、適用できます。
+コントローラやウィジェットのコンテキストの外で表示されるビューであっても適用できます。
 
 また、`CThemeManager` コンポーネントはもうありません。
 その代りに、`theme` は `view` アプリケーション・コンポーネントの構成可能なプロパティになりました。
diff --git a/docs/guide-ja/intro-yii.md b/docs/guide-ja/intro-yii.md
index f2995b3e761..a249a0bed00 100644
--- a/docs/guide-ja/intro-yii.md
+++ b/docs/guide-ja/intro-yii.md
@@ -50,7 +50,7 @@ Yii は現在、利用可能な二つのメジャー・バージョン、すな
 必要条件と前提条件
 ------------------
 
-Yii 2.0 は PHP 5.4.0 以上を必要とし、PHP の最新バージョンで最高の力を発揮します。
+Yii 2.0 は PHP 7.3.0 以上を必要とし、PHP の最新バージョンで最高の力を発揮します。
 個々の機能に対する詳細な必要条件は、全ての Yii リリースに含まれている必要条件チェッカを走らせることによって知ることが出来ます。
 
 Yii を使うためには、オブジェクト指向プログラミング (OOP) の基本的な知識が必要です。
diff --git a/docs/guide-ja/output-client-scripts.md b/docs/guide-ja/output-client-scripts.md
index 38ac328e2a4..2e307ab69ff 100644
--- a/docs/guide-ja/output-client-scripts.md
+++ b/docs/guide-ja/output-client-scripts.md
@@ -40,8 +40,8 @@ $this->registerJs(
 - [[yii\web\View::POS_LOAD|View::POS_LOAD]] - [ドキュメントの `load` イベント](https://learn.jquery.com/using-jquery-core/document-ready/) でコードを実行するための指定。
   上記と同じく、これを指定すると、[[yii\web\JqueryAsset|jQuery]] が自動的に登録されます。
 
-最後の引数は、スクリプトのコード・ブロックを一意に特定するために使われるスクリプトのユニークな ID です。同じ ID のスクリプトが既にある場合は、新しいものを追加するのでなく、
-それを置き換えます。ID を指定しない場合は、JS コードそれ自身が ID として扱われます。この ID によって、同じコードが複数回登録されるのを防止します。
+最後の引数は、スクリプトのコード・ブロックを一意に特定するために使われるスクリプトのユニークな ID です。同じ ID のスクリプトが既にある場合は、新しいものを追加するのでなく、それを置き換えます。
+ID を指定しない場合は、JS コードそれ自身が ID として扱われます。この ID によって、同じコードが複数回登録されるのを防止します。
 
 ### スクリプト・ファイルを登録する <span id="script-files"></span>
 
diff --git a/docs/guide-ja/output-data-providers.md b/docs/guide-ja/output-data-providers.md
index d15d313f457..0344016325d 100644
--- a/docs/guide-ja/output-data-providers.md
+++ b/docs/guide-ja/output-data-providers.md
@@ -354,13 +354,13 @@ $filter = new ActiveDataFilter([
 
 $filterCondition = null;
 
-// どのようなソースからでもフィルタをロードすることが出来ます。
-// 例えば、リクエスト・ボディの JSON からロードしたい場合は、
+// どのようなソースからでもフィルタをロードすることが出来ます。例えば、
+// リクエスト・ボディの JSON からロードしたい場合は、
 // 下記のように Yii::$app->request->getBodyParams() を使います。
 if ($filter->load(\Yii::$app->request->get())) { 
     $filterCondition = $filter->build();
     if ($filterCondition === false) {
-        // シリアライザがエラーを抽出するだろう
+        // シリアライザがフィルタの抽出でエラーを出すかもしれない
         return $filter;
     }
 }
diff --git a/docs/guide-ja/output-data-widgets.md b/docs/guide-ja/output-data-widgets.md
index 28946fe3393..b4dd7d4a05c 100644
--- a/docs/guide-ja/output-data-widgets.md
+++ b/docs/guide-ja/output-data-widgets.md
@@ -777,4 +777,4 @@ yii gii/crud --controllerClass="backend\\controllers\PostController" \
 さらに読むべき文書
 ------------------
 
-- Arno Slatius による [Rendering Data in Yii 2 with GridView and ListView](https://www.sitepoint.com/rendering-data-in-yii-2-with-gridview-and-listview/)。
+- Arno Slatius による [Rendering Data in Yii 2 with GridView and ListView](https://www.sitepoint.com/rendering-data-in-yii-2-with-gridview-and-listview/)
diff --git a/docs/guide-ja/output-formatting.md b/docs/guide-ja/output-formatting.md
index bcfaabc9d6c..4faf5c3c3ac 100644
--- a/docs/guide-ja/output-formatting.md
+++ b/docs/guide-ja/output-formatting.md
@@ -75,7 +75,7 @@ return [
 - [[yii\i18n\Formatter::asDate()|date]] - 値は日付としてフォーマットされます。例えば `January 01, 2014`。
 - [[yii\i18n\Formatter::asTime()|time]] - 値は時刻としてフォーマットされます。例えば `14:23`。
 - [[yii\i18n\Formatter::asDatetime()|datetime]] - 値は日付および時刻としてフォーマットされます。例えば `January 01, 2014 14:23`。
-- [[yii\i18n\Formatter::asTimestamp()|timestamp]] - 値は [unix タイムスタンプ](https://ja.wikipedia.org/wiki/UNIX%E6%99%82%E9%96%93) としてフォーマットされます。例えば `1412609982`。
+- [[yii\i18n\Formatter::asTimestamp()|timestamp]] - 値は [unix タイムスタンプ](https://ja.wikipedia.org/wiki/UNIX%E6%99%82%E9%96%93) としてフォーマットされます。例えば `1412609982`
 - [[yii\i18n\Formatter::asRelativeTime()|relativeTime]] - 値は、その日時と現在との間隔として、人間に分かりやすい言葉でフォーマットされます。
   例えば `1 hour ago`。
 - [[yii\i18n\Formatter::asDuration()|duration]] - 値は継続時間として、人間に分かりやすい言葉でフォーマットされます。例えば `1 day, 2 minutes`。
diff --git a/docs/guide-ja/output-sorting.md b/docs/guide-ja/output-sorting.md
index 945c331a0d2..ec18e82c952 100644
--- a/docs/guide-ja/output-sorting.md
+++ b/docs/guide-ja/output-sorting.md
@@ -65,7 +65,7 @@ $articles = Article::find()
   ラベルは HTML エンコードされないことに注意してください。
 
 > Info: [[yii\data\Sort::$orders|orders]] の値をデータベースのクエリに直接に供給して、
-  `ORDER BY` 句を構築することが出来ます。  データベースのクエリが認識できない合成的な属性が入っている場合があるため、
+  `ORDER BY` 句を構築することが出来ます。データベースのクエリが認識できない合成的な属性が入っている場合があるため、
   [[yii\data\Sort::$attributeOrders|attributeOrders]] を使ってはいけません。
 
 [[yii\data\Sort::link()]] を呼んでハイパーリンクを生成すれば、それをクリックして、指定した属性によるデータの並べ替えをリクエストすることが出来るようになります。
diff --git a/docs/guide-ja/rest-authentication.md b/docs/guide-ja/rest-authentication.md
index a811526f1a5..6a236cea835 100644
--- a/docs/guide-ja/rest-authentication.md
+++ b/docs/guide-ja/rest-authentication.md
@@ -12,7 +12,7 @@
 
 * [HTTP Basic 認証](https://ja.wikipedia.org/wiki/Basic%E8%AA%8D%E8%A8%BC): アクセス・トークンはユーザ名として送信されます。
   この方法は、アクセス・トークンを API コンシューマ側で安全に保存することが出来る場合、
-  例えば API コンシューマがサーバ上で走るプログラムである場合などにのみ使用されるべきです。
+  例えば API コンシューマがサーバ上で走るプログラムである場合などのみに使用されるべきです。
 * クエリ・パラメータ: アクセス・トークンは API の URL、例えば、`https://example.com/users?access-token=xxxxxxxx`
   でクエリ・パラメータとして送信されます。
   ほとんどのウェブ・サーバはクエリ・パラメータをサーバのログに記録するため、この手法は、
diff --git a/docs/guide-ja/rest-filtering-collections.md b/docs/guide-ja/rest-filtering-collections.md
new file mode 100644
index 00000000000..7eb809679e5
--- /dev/null
+++ b/docs/guide-ja/rest-filtering-collections.md
@@ -0,0 +1,190 @@
+コレクションのフィルタリング
+============================
+
+バージョン 2.0.13 以降、リソースのコレクションは [[yii\data\DataFilter]] コンポーネントを使ってフィルタにかけることが出来ます。
+このコンポーネントは、リクエスト経由で渡されるフィルタ条件の構築を可能にし、そして、拡張バージョンの [[yii\data\ActiveDataFilter]] の助力によって、
+[[yii\db\QueryInterface::where()]] にとって適切な形式でフィルタ条件を使う事を可能にします。
+
+
+## データ・プロバイダをフィルタリングのために構成する <span id="configuring-data-provider-for-filtering"></span>
+
+[コレクション](rest-resources.md#collections) のセクションで言及されているように、 
+[データ・プロバイダ](output-data-providers#data-providers) を使うと、並べ替えてページ付けしたリソースのリストを出力することが出来ます。
+また、データ・プロバイダを使って、そのリストをフィルタにかけることも出来ます。
+
+```php
+$filter = new ActiveDataFilter([
+    'searchModel' => 'app\models\PostSearch',
+]);
+
+$filterCondition = null;
+// どのようなソースからでもフィルタをロードすることが出来ます。例えば、
+// リクエスト・ボディの JSON からロードしたい場合は、
+// 下記のように Yii::$app->request->getBodyParams() を使います。
+if ($filter->load(Yii::$app->request->get())) { 
+    $filterCondition = $filter->build();
+    if ($filterCondition === false) {
+        // シリアライザがフィルタの抽出でエラーを出すかもしれない
+        return $filter;
+    }
+}
+
+$query = Post::find();
+if ($filterCondition !== null) {
+    $query->andWhere($filterCondition);
+}
+
+return new ActiveDataProvider([
+    'query' => $query,
+]);
+```
+
+`PostSearch` モデルが、どのプロパティと値がフィルタリングのために許容されるかを定義する役目を担います。
+
+```php
+use yii\base\Model;
+
+class PostSearch extends Model 
+{
+    public $id;
+    public $title;
+    
+    public function rules()
+    {
+        return [
+            ['id', 'integer'],
+            ['title', 'string', 'min' => 2, 'max' => 200],            
+        ];
+    }
+}
+```
+
+そこで特別なビジネス・ロジックが必要でない場合には、検索ルールのためのスタンドアロンなモデルを準備する代わりに、
+[[yii\base\DynamicModel]] を使うことが出来ます。
+
+```php
+$filter = new ActiveDataFilter([
+    'searchModel' => (new DynamicModel(['id', 'title']))
+        ->addRule(['id'], 'integer')
+        ->addRule(['title'], 'string', ['min' => 2, 'max' => 200]),
+]);
+```
+
+`searchModel` を定義することは、エンド・ユーザに許容するフィルタ条件を制御するために欠かすことが出来ません。
+
+
+## リクエストのフィルタリング <span id="filtering-request"></span>
+
+通常、エンド・ユーザは許容された一つ以上のメソッド（これらはAPIドキュメントに明示的に記述されるべきものです）を使ってフィルタリング条件をリクエストで提供するものと期待されます。
+例えば、フィルタリングが JSON を使って POST メソッドで操作される場合は、
+下記と似たようなものになります。
+
+```json
+{
+    "filter": {
+        "id": {"in": [2, 5, 9]},
+        "title": {"like": "cheese"}
+    }
+}
+```
+
+上記の条件は、次のように解釈されます :
+- `id` は、2, 5, または 9 でなければならず、**かつD**
+- `title` は `cheese` という語を含まなければならない。
+
+同一の条件が GET クエリの一部として送信される場合は、次のようになります :
+
+```
+?filter[id][in][]=2&filter[id][in][]=5&filter[id][in][]=9&filter[title][like]=cheese
+```
+
+デフォルトの `filter` キー・ワードは、[[yii\data\DataFilter::$filterAttributeName]] を設定して変更することが出来ます。
+
+
+## フィルタ制御キーワード <span id="filter-control-keywords"></span>
+
+許容されているフィルタ制御キーワードは下記の通りです :
+
+| キーワード     |     意味      |
+|:--------------:|:-------------:|
+|     `and`      |     `AND`     |
+|      `or`      |     `OR`      |
+|     `not`      |     `NOT`     |
+|      `lt`      |      `<`      |
+|      `gt`      |      `>`      |
+|     `lte`      |     `<=`      |
+|     `gte`      |     `>=`      |
+|      `eq`      |      `=`      |
+|     `neq`      |     `!=`      |
+|      `in`      |     `IN`      |
+|     `nin`      |   `NOT IN`    |
+|     `like`     |    `LIKE`     |
+
+オプションの [[yii\data\DataFilter::$filterControls]] を拡張して、上記のリストを拡張することが出来ます。
+例えば、下記のように、同一のフィルタ構築キーにいくつかのキーワードを与えて、複数のエイリアスを作成することが出来ます :
+
+```php
+[
+    'eq' => '=',
+    '=' => '=',
+    '==' => '=',
+    '===' => '=',
+    // ...
+]
+```
+
+未定義のキーワードは、すべて、フィルタ制御とは認識されず、属性名として扱われることに注意して下さい。
+制御キーワードと属性名の衝突は避けなければなりません。
+（例えば、制御キーワードとしての 'like' と属性名としての 'like' が存在する場合、そのような属性に対して条件を指定することは不可能です。）
+
+> Note: フィルタ制御を指定する時に、あなたのAPIが使用する実際のデータ交換形式に留意しましょう。
+  すべての指定された制御キーワードがその形式にとって妥当なものであることを確認して下さい。
+  例えば、XML ではタグ名は Letter クラスの文字でしか開始出来ませんから、`>`, `=`, `$gt` 等は XML スキーマに違反することになります。
+
+> Note: 新しいフィルタ制御キーワードを追加する時は、演算子の結合規則および所期の動作に基づいて、期待されるクエリ結果を得るためには
+  [[yii\data\DataFilter::$conditionValidators]] および/または [[yii\data\DataFilter::$operatorTypes]] をも
+  更新する必要があるかどうか、必ず確認して下さい。
+
+
+## Null 値の扱い <span id="handling-the-null-values"></span>
+
+JSON の式野中では `null` を使う事は容易ですが、文字通りの 'null' を文字列としての "null" と混乱させずに GET クエリを使ってを送信することは不可能です。
+バージョン 2.0.40 以降では、[[yii\data\DataFilter::$nullValue]] オプションを使って、文字通りの `null` に置換される単語(デフォルトでは、"NULL")を構成することが出来ます。
+
+
+## 属性のエイリアス <span id="aliasing-attributes"></span>
+
+属性を別の名前で呼びたい場合や、結合された DB テーブルでフィルタをかけたい場合に、
+[[yii\data\DataFilter::$attributeMap]] を使ってエイリアスのマップを設定することが出来ます。
+
+```php
+[
+    'carPart' => 'car_part', // car_part 属性でフィルタするために carPart が使われる
+    'authorName' => '{{author}}.[[name]]', // 結合された author テーブルの name 属性でフィルタするために authorName が使われる
+]
+```
+
+## `ActiveController` のためにフィルタを構成する <span id="configuring-filters-for-activecontroller"></span>
+
+[[yii\rest\ActiveController]] には一般的な一揃いの REST アクションが失踪されていますが、
+[[yii\rest\IndexAction::$dataFilter]] プロパティによってフィルタを使うことも簡単に出来ます。
+可能な方法のうちの一つは [[yii\rest\ActiveController::actions()]] を使ってそうすることです :
+
+```php
+public function actions()
+{
+    $actions = parent::actions();
+    
+    $actions['index']['dataFilter'] = [
+        'class' => \yii\data\ActiveDataFilter::class,
+        'attributeMap' => [
+            'clockIn' => 'clock_in',
+        ],
+        'searchModel' => (new DynamicModel(['id', 'clockIn']))->addRule(['id', 'clockIn'], 'integer', ['min' => 1]),
+    ];
+    
+    return $actions;
+}
+```
+
+これで(`index` アクションによってアクセス可能な)コレクションを `id` と `clockIn` プロパティによってフィルタすることが出来ます。
diff --git a/docs/guide-ja/rest-resources.md b/docs/guide-ja/rest-resources.md
index 09020bca275..07f71703825 100644
--- a/docs/guide-ja/rest-resources.md
+++ b/docs/guide-ja/rest-resources.md
@@ -251,11 +251,3 @@ class PostController extends Controller
 REST API におけるコレクションはデータ・プロバイダであるため、データ・プロバイダの全ての機能、すなわち、ページネーションやソーティングを共有しています。
 
 その一例を [クイック・スタート](rest-quick-start.md#trying-it-out) のセクションで見ることが出来ます。
-
-### コレクションをフィルタリングする <span id="filtering-collections"></span>
-
-バージョン 2.0.13 以降、Yii はコレクションをフィルタリングする便利な機能を提供しています。
-その一例を [クイック・スタート](rest-quick-start.md#trying-it-out) のガイドに見ることが出来ます。
-エンド・ボイントをあなた自身が実装しようとしている場合、フィルタリングは
-データ・プロバイダのガイドの [データ・フィルタを使ってデータ・プロバイダをフィルタリングする](output-data-providers.md#filtering-data-providers-using-data-filters
- のセクションで述べられている方法で行うことが出来ます。
diff --git a/docs/guide-ja/rest-response-formatting.md b/docs/guide-ja/rest-response-formatting.md
index f30433f0170..502d5707a08 100644
--- a/docs/guide-ja/rest-response-formatting.md
+++ b/docs/guide-ja/rest-response-formatting.md
@@ -3,7 +3,7 @@
 
 RESTful API のリクエストを処理するとき、アプリケーションは、通常、レスポンス形式の設定に関して次のステップを踏みます。
 
-1. レスポンス形式に影響するさまざまな要因、例えば、メディア・タイプ、言語、バージョンなどを決定します。
+1. レスポンス形式に影響しうるさまざまな要因、例えば、メディア・タイプ、言語、バージョンなどを決定します。
    このプロセスは [コンテント・ネゴシエーション](https://en.wikipedia.org/wiki/Content_negotiation) としても知られるものです。
 2. リソース・オブジェクトを配列に変換します。
    [リソース](rest-resources.md) のセクションで説明したように、この作業は [[yii\rest\Serializer]] によって実行されます。
diff --git a/docs/guide-ja/rest-versioning.md b/docs/guide-ja/rest-versioning.md
index f9b73f9006c..6b89c8e07ae 100644
--- a/docs/guide-ja/rest-versioning.md
+++ b/docs/guide-ja/rest-versioning.md
@@ -5,7 +5,7 @@
 クライアント・サイドとサーバ・サイドの両方のコードを完全に制御できるウェブ・アプリケーションとは違って、API はあなたの制御が及ばないクライアントによって使用されることを想定したものです。このため、API の後方互換性 (BC) は、可能な限り保たれなければなりません。
 BC を損なうかも知れない変更が必要な場合は、それを API の新しいバージョンにおいて導入し、バージョン番号を上げるべきです。そうすれば、既存のクライアントは、API の古いけれども動作するバージョンを使い続けることが出来ますし、新しいまたはアップグレードされたクライアントは、新しい API バージョンで新しい機能を使うことが出来ます。
 
-> Tip: API のバージョン番号の設計に関する詳細情報は
+> Tip: API のバージョン番号の設計についての詳細な情報は
   [Semantic Versioning](https://semver.org/) を参照してください。
 
 API のバージョン管理を実装する方法としてよく使われるのは、バージョン番号を API の URL に埋め込む方法です。
diff --git a/docs/guide-ja/runtime-requests.md b/docs/guide-ja/runtime-requests.md
index 94257ad13a6..fde78a39a99 100644
--- a/docs/guide-ja/runtime-requests.md
+++ b/docs/guide-ja/runtime-requests.md
@@ -152,8 +152,9 @@ Yii アプリケーションに渡されるからです。
 信頼できるプロキシの情報を構成することが出来るようになっています。
 [[yii\web\Request::trustedHosts|trustedHosts]]、
 [[yii\web\Request::secureHeaders|secureHeaders]]、 
-[[yii\web\Request::ipHeaders|ipHeaders]] および
-[[yii\web\Request::secureProtocolHeaders|secureProtocolHeaders]]
+[[yii\web\Request::ipHeaders|ipHeaders]] 
+[[yii\web\Request::secureProtocolHeaders|secureProtocolHeaders]] および
+[[yii\web\Request::portHeaders|portHeaders]] (2.0.46 以降)
 
 以下は、リバース・プロキシ・アレイの背後で動作するアプリケーションのための、request の構成例です
 (リバース・プロキシ・アレイは `10.0.2.0/24` のネットワークに設置されているとします)。
diff --git a/docs/guide-ja/runtime-sessions-cookies.md b/docs/guide-ja/runtime-sessions-cookies.md
index 92eefef8b51..ae09ec64a5c 100644
--- a/docs/guide-ja/runtime-sessions-cookies.md
+++ b/docs/guide-ja/runtime-sessions-cookies.md
@@ -389,7 +389,8 @@ Yii 2.0.21 以降、[[yii\web\Cookie::sameSite]] 設定がサポートされて
 ブラウザが `sameSite` 設定をサポートしている場合、指定されたポリシー ('Lax' または 'Strict') に従うクッキーだけが送信されます。
 詳細については [SameSite の wiki 記事](https://owasp.org/www-community/SameSite) を参照して下さい。
 更なるセキュリティ強化のために、`sameSite` がサポートされていない PHP のバージョンで使われた場合には例外が投げられます。
-この機能を PHP のバージョンに関わりなく使用する場合は、最初にバージョンをチェックして下さい。例えば、
+この機能を PHP のバージョンに関わりなく使用する場合は、最初にバージョンをチェックして下さい。例えば
+
 ```php
 [
     'sameSite' => PHP_VERSION_ID >= 70300 ? yii\web\Cookie::SAME_SITE_LAX : null,
diff --git a/docs/guide-ja/security-authorization.md b/docs/guide-ja/security-authorization.md
index 6375122461f..8b22f1591a8 100644
--- a/docs/guide-ja/security-authorization.md
+++ b/docs/guide-ja/security-authorization.md
@@ -157,7 +157,7 @@ class SiteController extends Controller
 
 ロール・ベース・アクセス制御 (RBAC) は、単純でありながら強力な集中型のアクセス制御を提供します。
 RBAC と他のもっと伝統的なアクセス制御スキーマとの比較に関する詳細については、
-[Wiki 記事](https://ja.wikipedia.org/wiki/%E3%83%AD%E3%83%BC%E3%83%AB%E3%83%99%E3%83%BC%E3%82%B9%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E5%88%B6%E5%BE%A1) を参照してください。
+[Wikipedia](https://ja.wikipedia.org/wiki/%E3%83%AD%E3%83%BC%E3%83%AB%E3%83%99%E3%83%BC%E3%82%B9%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E5%88%B6%E5%BE%A1) を参照してください。
 
 Yii は、[NIST RBAC モデル](https://csrc.nist.gov/CSRC/media/Publications/conference-paper/1992/10/13/role-based-access-controls/documents/ferraiolo-kuhn-92.pdf) に従って、一般的階層型 RBAC を実装しています。
 RBAC の機能は、[[yii\rbac\ManagerInterface|authManager]] [アプリケーション・コンポーネント](structure-application-components.md) を通じて提供されます。
diff --git a/docs/guide-ja/security-best-practices.md b/docs/guide-ja/security-best-practices.md
index 5e39114c63f..d38e18faab9 100644
--- a/docs/guide-ja/security-best-practices.md
+++ b/docs/guide-ja/security-best-practices.md
@@ -333,8 +333,8 @@ H5BP プロジェクトが提供する構成例を参考にすることも出来
 - Apache 2: <https://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports>
 - Nginx: <https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/>
 
-サーバの構成にアクセスする権限がない場合は、このような攻撃に対して防御するために、[[yii\filters\HostControl]]
-フィルタを設定することが出来ます。
+サーバの構成にアクセスする権限がない場合は、このような攻撃に対して防御するために、
+[[yii\filters\HostControl]] フィルタを設定することが出来ます。
 
 ```php
 // ウェブ・アプリケーション構成ファイル
diff --git a/docs/guide-ja/start-databases.md b/docs/guide-ja/start-databases.md
index b1393aaf545..933696b1757 100644
--- a/docs/guide-ja/start-databases.md
+++ b/docs/guide-ja/start-databases.md
@@ -106,8 +106,8 @@ class Country extends ActiveRecord
 }
 ```
 
-`Country` クラスは [[yii\db\ActiveRecord]] を拡張しています。この中には一つもコードを書く必要はありません。
-単に上記のコードだけで、Yii は関連付けられたテーブル名をクラス名から推測します。
+`Country` クラスは [[yii\db\ActiveRecord]] を拡張しています。ここにコードを追加する必要は全くありません。
+上記のコードだけで、Yii は関連付けられたテーブル名をクラス名から推測します。
 
 > Info: クラス名とテーブル名を直接に合致させることが出来ない場合は、[[yii\db\ActiveRecord::tableName()]]
 メソッドをオーバーライドして、関連づけられたテーブル名を明示的に指定することが出来ます。
diff --git a/docs/guide-ja/start-prerequisites.md b/docs/guide-ja/start-prerequisites.md
index 8aeac1fb64a..bce70b98d0c 100644
--- a/docs/guide-ja/start-prerequisites.md
+++ b/docs/guide-ja/start-prerequisites.md
@@ -5,7 +5,7 @@ Yii の学習曲線は他の PHP フレームワークほど急峻ではあり
 ## PHP
 
 Yii は PHP フレームワークですから、必ず [言語リファレンスを読んで理解する](https://www.php.net/manual/ja/langref.php) ようにして下さい。
-Yii を使って開発するときはオブジェクト指向の流儀でコードを書くことになりますから、必ず、[クラスとオブジェクト](https://www.php.net/manual/ja/language.oop5.basic.php) および [名前空間](https://www.php.net/manual/ja/language.namespaces.php) には慣れ親しんでおいて下さい。
+Yii を使って開発するときはオブジェクト指向の流儀でコードを書くことになりますから、必ず、[クラスとオブジェクト](https://www.php.net/manual/ja/language.oop5.basic.php) および [名前空間](https://www.php.net/manual/ja/language.namespaces.php) に慣れ親しんでおいて下さい。
 
 ## オブジェクト指向プログラミング
 
diff --git a/docs/guide-ja/structure-application-components.md b/docs/guide-ja/structure-application-components.md
index a75554af1af..7575f172ca1 100644
--- a/docs/guide-ja/structure-application-components.md
+++ b/docs/guide-ja/structure-application-components.md
@@ -58,7 +58,7 @@
 けれども、場合によっては、明示的にアクセスされないときでも、リクエストごとにアプリケーション・コンポーネントのインスタンスを作成したいことがあります。
 そうするために、アプリケーションの [[yii\base\Application::bootstrap|bootstrap]] プロパティのリストにそのコンポーネントの ID を挙げることが出来ます。
 
-また、カスタマイズしたコンポーネントをブートストラップするためにクロージャを用いることも出来ます。インスタンス化されたコンポーネントを返すことは要求されません。
+また、カスタマイズされたコンポーネントをブートストラップするためにクロージャを用いることも出来ます。インスタンス化されたコンポーネントを返すことは要求されません。
 単に [[yii\base\Application]] のインスタンス化の後にコードを走らせるだけのためにクロージャを使うことも出来ます。
 
 例えば、次のアプリケーション構成情報は、`log` コンポーネントが常にロードされることを保証するものです。
diff --git a/docs/guide-ja/structure-applications.md b/docs/guide-ja/structure-applications.md
index 5ec671f5eb7..c3c44b8ba9f 100644
--- a/docs/guide-ja/structure-applications.md
+++ b/docs/guide-ja/structure-applications.md
@@ -276,7 +276,7 @@ if (YII_ENV_DEV) {
 このプロパティを使用して決定します。
 
 言語を指定するのには、[IETF 言語タグ](https://ja.wikipedia.org/wiki/IETF%E8%A8%80%E8%AA%9E%E3%82%BF%E3%82%B0) に従うことが推奨されます。
-例えば、`en` は英語を意味し、`en-US` はアメリカ合衆国の英語を意味します。
+例えば、`en` は英語を意味しますが、`en-US` はアメリカ合衆国の英語を意味します。
 
 このプロパティに関する詳細は [国際化](tutorial-i18n.md) のセクションで読むことが出来ます。
 
@@ -348,7 +348,7 @@ $width = \Yii::$app->params['thumbnail.size'][0];
 
 [language](#language) プロパティと同様に、このプロパティは
 [IETF 言語タグ](https://ja.wikipedia.org/wiki/IETF%E8%A8%80%E8%AA%9E%E3%82%BF%E3%82%B0) に従って構成しなければなりません。
-例えば、`en` は英語を意味し、`en-US` はアメリカ合衆国の英語を意味します。
+例えば、`en` は英語を意味しますが、`en-US` はアメリカ合衆国の英語を意味します。
 
 このプロパティに関する詳細は [国際化](tutorial-i18n.md) のセクションで読むことが出来ます。
 
diff --git a/docs/guide-ja/structure-assets.md b/docs/guide-ja/structure-assets.md
index 4d42f5faf8e..d9ad0a52915 100644
--- a/docs/guide-ja/structure-assets.md
+++ b/docs/guide-ja/structure-assets.md
@@ -208,7 +208,7 @@ class FontAwesomeAsset extends AssetBundle
 ### Bower と NPM のアセットのインストール <span id="bower-npm-assets"></span>
 
 ほとんどの JavaScript/CSS パッケージは、[Bower](https://bower.io/) および/または [NPM](https://www.npmjs.com/) によって管理されています。
-PHP の世界には PHP の依存を管理する Composer がありますが、PHP のパッケージと全く同じように
+PHP の世界には Composer があって、PHP の依存を管理していますが、PHP のパッケージと全く同じように
 `composer.json` を使って Bower のパッケージも NPM のパッケージもロードすることが可能です。
 
 このことを達成するために Composer の構成を少し修正しなければなりません。二つの方法があります。
diff --git a/docs/guide-ja/structure-controllers.md b/docs/guide-ja/structure-controllers.md
index a0cac8d8ed7..d67367d42bf 100644
--- a/docs/guide-ja/structure-controllers.md
+++ b/docs/guide-ja/structure-controllers.md
@@ -1,7 +1,7 @@
 コントローラ
 ============
 
-コントローラは [MVC](https://ja.wikipedia.org/wiki/Model_View_Controller) アーキテクチャの一部を成すものです。
+コントローラは [MVC](https://ja.wikipedia.org/wiki/Model_View_Controller) アーキテクチャの一部を構成するものです。
 それは [[yii\base\Controller]] を拡張したクラスのオブジェクトであり、リクエストの処理とレスポンスの生成について責任を負います。
 具体的には、コントローラは、[アプリケーション](structure-applications.md) から制御を引き継いだ後、
 入ってきたリクエストのデータを分析し、それを [モデル](structure-models.md) に引き渡して、
diff --git a/docs/guide-ja/structure-extensions.md b/docs/guide-ja/structure-extensions.md
index 66f47e30090..f2122ec43e0 100644
--- a/docs/guide-ja/structure-extensions.md
+++ b/docs/guide-ja/structure-extensions.md
@@ -75,7 +75,7 @@ Image::thumbnail('@webroot/img/test-image.jpg', 120, 120)
 2. もし有れば、エクステンションによって提供されているクラス・オートローダをインストールする。
 3. 指示に従って、依存するエクステンションを全てダウンロードしインストールする。
 
-エクステンションがクラス・オートローダを持っていなくても、[PSR-4 標準](https://www.php-fig.org/psr/psr-4/) に従っている場合は、Yii によって提供されているクラス・オートローダを使ってエクステンションのクラスをオートロードすることが出来ます。
+エクステンションがクラス・オートローダを持っていなくても、[PSR-4 標準](https://www.php-fig.org/psr/psr-4/) に従っている場合は、Yii が提供しているクラス・オートローダを使ってエクステンションのクラスをオートロードすることが出来ます。
 必要なことは、エクステンションのルート・ディレクトリのための [ルート・エイリアス](concept-aliases.md#defining-aliases) を宣言することだけです。
 例えば、エクステンションを `vendor/mycompany/myext` というディレクトリにインストールしたと仮定します。
 そして、エクステンションのクラスは `myext` 名前空間の下にあるとします。
@@ -184,7 +184,7 @@ Yii のアプリケーションは、このファイルによって、どんな
 それぞれの依存パッケージについて、適切なバージョン制約 (例えば `1.*` や `@stable`) を指定することも忘れてはなりません。
 あなたのエクステンションを安定バージョンとしてリリースする場合は、安定した依存パッケージを使ってください。
 
-たいていの JavaScript/CSS パッケージは、Composer ではなく、[Bower](https://bower.io/) および/または [NPM](https://www.npmjs.com/) を使って管理されています。
+たいていの JavaScript/CSS パッケージは、Composer の代りに、[Bower](https://bower.io/) および/または [NPM](https://www.npmjs.com/) を使って管理されています。
 Yii は [Composer アセット・プラグイン](https://github.com/fxpio/composer-asset-plugin) を使って、この種のパッケージを Composer によって管理することを可能にしています。
 あなたのエクステンションが Bower パッケージに依存している場合でも、次のように、
 `composer.json` に依存パッケージをリストアップすることが簡単に出来ます。
diff --git a/docs/guide-ja/structure-filters.md b/docs/guide-ja/structure-filters.md
index dd7e097648f..701765ae8a8 100644
--- a/docs/guide-ja/structure-filters.md
+++ b/docs/guide-ja/structure-filters.md
@@ -142,7 +142,7 @@ public function behaviors()
 ### 認証メソッド・フィルタ <span id="auth-method-filters"></span>
 
 認証メソッド・フィルタは、[HTTP Basic 認証](https://ja.wikipedia.org/wiki/Basic%E8%AA%8D%E8%A8%BC)、
-[OAuth 2](https://oauth.net/2/) など、様々なメソッドを使ってユーザを認証するために使われるものです。
+[OAuth 2](https://oauth.net/2/) などの様々なメソッドを使ってユーザを認証するために使われるものです。
 これらのフィルタ・クラスはすべて `yii\filters\auth` 名前空間の下にあります。
 
 次の例は、[[yii\filters\auth\HttpBasicAuth]] の使い方を示すもので、HTTP Basic 認証に基づくアクセス・トークンを使ってユーザを認証しています。
diff --git a/docs/guide-ja/structure-models.md b/docs/guide-ja/structure-models.md
index dcbc102ead9..80e65d07afa 100644
--- a/docs/guide-ja/structure-models.md
+++ b/docs/guide-ja/structure-models.md
@@ -293,6 +293,8 @@ public function rules()
 
         // "login" シナリオでは、username と password が必須
         [['username', 'password'], 'required', 'on' => self::SCENARIO_LOGIN],
+        
+        [['username'], 'string'], // username は文字列でなければならない。この規則は全てのシナリオに適用される
     ];
 }
 ```
diff --git a/docs/guide-ja/test-fixtures.md b/docs/guide-ja/test-fixtures.md
index 953b7974787..9a8bc4ed6d8 100644
--- a/docs/guide-ja/test-fixtures.md
+++ b/docs/guide-ja/test-fixtures.md
@@ -107,8 +107,8 @@ DB と関係しないフィクスチャ (例えば、何らかのファイルや
 
 ## フィクスチャを使用する
 
-[Codeception](https://codeception.com/) を使ってコードをテストしている場合は、フィクスチャのローディングとアクセスについては、
-内蔵されているサポートを使用することが出来ます。
+[Codeception](https://codeception.com/) を使ってコードをテストしている場合は、
+フィクスチャのローディングとアクセスについて、内蔵されているサポートを使用することが出来ます。
 
 その他のテスト・フレームワークを使っている場合は、テスト・ケースで [[yii\test\FixtureTrait]]
 を使って同じ目的を達することが出来ます。
diff --git a/docs/guide-ja/test-functional.md b/docs/guide-ja/test-functional.md
index 8a6274e9065..9a08f90653c 100644
--- a/docs/guide-ja/test-functional.md
+++ b/docs/guide-ja/test-functional.md
@@ -9,7 +9,7 @@ POST や GET のパラメータなどの環境変数を設定しておいてか
 経験則から言うと、特別なウェブ・サーバ設定や JavaScript による複雑な UI を持たない場合は、
 機能テストの方を選ぶべきです。
 
-機能テストは Codeception フレームワークの助けを借りて実装されています。これにつては、優れたドキュメントがあります。
+機能テストは Codeception フレームワークの助けを借りて実装されています。これについては、優れたドキュメントがあります。
 
 - [Codeception for Yii framework](https://codeception.com/for/yii)
 - [Codeception Functional Tests](https://codeception.com/docs/04-FunctionalTests)
diff --git a/docs/guide-ja/test-overview.md b/docs/guide-ja/test-overview.md
index 41b75812154..89f82ce8c25 100644
--- a/docs/guide-ja/test-overview.md
+++ b/docs/guide-ja/test-overview.md
@@ -61,7 +61,7 @@
 
 どんな形式の自動化テストもやりすぎになる、という場合もあるでしょう。
 
-- プロジェクトは単純で、この先も、複雑になる心配はない。
+- プロジェクトが単純で、この先も、複雑になる心配はない。
 - これ以上かかわることはない一度限りのプロジェクトである。
 
 ただ、このような場合であっても、時間に余裕があれば、テストを自動化することは良いことです。
diff --git a/docs/guide-ja/test-unit.md b/docs/guide-ja/test-unit.md
index 77e596b8f84..2f6caca5cb1 100644
--- a/docs/guide-ja/test-unit.md
+++ b/docs/guide-ja/test-unit.md
@@ -9,7 +9,7 @@ Yii における単体テストは、PHPUnit と Codeception (こちらはオプ
 
 - [Codeception for Yii framework](https://codeception.com/for/yii)
 - [Codeception Unit Tests](https://codeception.com/docs/05-UnitTests)
-- [PHPUnit のドキュメントの第2章以降](https://phpunit.readthedocs.io/en/9.5/writing-tests-for-phpunit.html).
+- [第2章から始まる PHPUnit のドキュメント](https://phpunit.readthedocs.io/en/9.5/writing-tests-for-phpunit.html)
 
 ## ベーシック・テンプレート、アドバンスト・テンプレートのテストを実行する
 
diff --git a/docs/guide-ja/tutorial-console.md b/docs/guide-ja/tutorial-console.md
index 74c3401412f..1c39707307b 100644
--- a/docs/guide-ja/tutorial-console.md
+++ b/docs/guide-ja/tutorial-console.md
@@ -113,11 +113,11 @@ exit($exitCode);
 --------------------------
 
 シェルで作業をしている場合、コマンド引数の自動補完は便利なものです。
-2.0.11 以降、`./yii` コマンドは、内蔵で Bash および ZSH のために補完をサポートしています。
+2.0.11 以降、`./yii` コマンドは、Bash および ZSH のための自動補完を内蔵でサポートしています。
 
 ### Bash の補完
 
-bash completion がインストールされていることを確認して下さい。ほとんどの bash のインストレーションでは、デフォルトで利用可能になっています。
+bash completion がインストールされていることを確認して下さい。ほとんどのインストレーションでは、デフォルトで利用可能になっています。
 
 補完スクリプトを `/etc/bash_completion.d/` に置いて下さい。
 
diff --git a/docs/guide-ja/tutorial-core-validators.md b/docs/guide-ja/tutorial-core-validators.md
index 8379daf470b..b51a5a7827e 100644
--- a/docs/guide-ja/tutorial-core-validators.md
+++ b/docs/guide-ja/tutorial-core-validators.md
@@ -53,7 +53,7 @@ public function rules()
 このバリデータは、通常、[[yii\captcha\CaptchaAction]] および [[yii\captcha\Captcha]] と一緒に使われ、
 入力値が [[yii\captcha\Captcha|CAPTCHA]] ウィジェットによって表示された検証コードと同じであることを確認します。
 
-- `caseSensitive`: 検証コードの比較で大文字と小文字を区別するかどうか。デフォルト値は `false`。
+- `caseSensitive`: 検証コードの比較で大文字と小文字を区別するか否か。デフォルト値は `false`。
 - `captchaAction`: CAPTCHA 画像を表示する [[yii\captcha\CaptchaAction|CAPTCHA アクション]] に対応する
   [ルート](structure-controllers.md#routes)。デフォルト値は `'site/captcha'`。
 - `skipOnEmpty`: 入力値が空のときに検証をスキップできるかどうか。デフォルト値は `false` で、
@@ -113,8 +113,8 @@ compare バリデータは、文字列や数値を比較するためにしか使
 ['fromDate', 'compare', 'compareAttribute' => 'toDate', 'operator' => '<', 'enableClientValidation' => false],
 ```
 
-バリデータは指定された順序に従って実行されますので、まず最初に、`fromDate` と `toDate` に入力された値が有効な日付であることが確認されます。
-そして、有効な日付であった場合は、機械が読める形式に変換されます。
+バリデータは指定された順序に従って実行されますので、まず最初に、`fromDate` と `toDate` に入力された値が
+有効な日付であることが確認され、有効な日付であった場合は、機械が読める形式に変換されます。
 その後に、これらの二つの値が compare バリデータによって比較されます。
 現在、date バリデータはクライアント・サイドのバリデーションを提供していませんので、これはサーバ・サイドでのみ動作します。
 そのため、compare バリデータについても、[[yii\validators\CompareValidator::$enableClientValidation|$enableClientValidation]] は
@@ -289,7 +289,7 @@ function foo($model, $attribute) {
     // 以下と同義
     ['a1', 'exist', 'targetAttribute' => ['a2' => 'a2']],
 
-    // a1 と a2 の両方が存在する必要がある。両者はともにエラー・メッセージを受け取る
+    // a1 と a2 の両方が存在する必要がある。エラーの無い最初の属性がエラー・メッセージを受け取る
     // すなわち、a1 = 3, a2 = 4 は、"a1" カラムに 3, "a2" カラムに 4 が存在する場合に有効
     [['a1', 'a2'], 'exist', 'targetAttribute' => ['a1', 'a2']],
     // 以下と同義
@@ -328,6 +328,8 @@ function foo($model, $attribute) {
 
 このバリデータは、一つまたは複数のカラムに対する検証に使用することが出来ます
 (複数のカラムに対する検証の場合は、それらの属性の組み合せが存在しなければならないことを意味します)。
+同時に複数のカラムをチェックして（例えば `['a1', 'a2']`）バリデーションが失敗したときに、`skipOnError` が `true` に設定されている場合は、
+先行するエラーが無い最初の属性だけが新しいエラー・メッセージを受け取ります。
 
 - `targetClass`: 検証される入力値を探すために使用される [アクティブ・レコード](db-active-record.md) クラスの名前。
   設定されていない場合は、現在検証されているモデルのクラスが使用されます。
@@ -418,8 +420,8 @@ function foo($model, $attribute) {
 - `filter`: フィルタを定義する PHP コールバック。これには、グローバル関数の名前、無名関数などを指定することが出来ます。
   関数のシグニチャは ``function ($value) { return $newValue; }` でなければなりません。このプロパティは必須項目です。
 - `skipOnArray`: 入力値が配列である場合にフィルタをスキップするか否か。デフォルト値は `false`。
-  フィルタが配列の入力を処理できない場合は、このプロパティを `true` に設定しなければなりません。
-  そうしないと、何らかの PHP エラーが生じ得ます。
+  フィルタが配列の入力を処理できない場合は、このプロパティを `true` に設定しなければなりません。そうしないと、
+  何らかの PHP エラーが生じ得ます。
 
 > Tip: 入力値をトリムしたい場合は、[trim](#trim) バリデータを直接使うことが出来ます。
 
@@ -679,7 +681,7 @@ IPv4 アドレス `192.168.10.128` も、制約の前にリストされている
     ['a1', 'unique', 'targetAttribute' => 'a1'],
     ['a1', 'unique', 'targetAttribute' => ['a1' => 'a1']],
 
-    // a1 の入力値が a2 のカラムにおいてユニークである必要がある
+    // a1 の入力値がユニークである必要がある。ただし a2 のカラムが a1 の入力値のユニークネスのチェックに用いられる
     // すなわち、a1 = 2 は、"a2" カラムに 2 の値が存在しない場合に有効
     ['a1', 'unique', 'targetAttribute' => 'a2'],
     // 以下と同義
@@ -704,9 +706,10 @@ IPv4 アドレス `192.168.10.128` も、制約の前にリストされている
 ]
 ```
 
-このバリデータは、入力値がテーブルのカラムにおいてユニークであるかどうかをチェックします。
-[アクティブ・レコード](db-active-record.md) モデルの属性に対してのみ働きます。
+このバリデータは、入力値がテーブルのカラムにおいてユニークであるかどうかをチェックします。このバリデータは [アクティブ・レコード](db-active-record.md) モデルの属性に対してのみ働きます。
 一つのカラムに対する検証か、複数のカラムに対する検証か、どちらかをサポートします。
+同時に複数のカラムをチェックするバリデーション（例えば上記の `['a1', 'a2']` ）が失敗したときに、
+`skipOnError` が `true` に設定されている場合は、先行するエラーが無い最初の属性のみが新しいエラー・メッセージを受け取ります。
 
 - `targetClass`: 検証される入力値を探すために使用される [アクティブ・レコード](db-active-record.md) クラスの名前。
   設定されていない場合は、現在検証されているモデルのクラスが使用されます。
diff --git a/docs/guide-ja/tutorial-docker.md b/docs/guide-ja/tutorial-docker.md
index 53864ab6144..d52d1a0793f 100644
--- a/docs/guide-ja/tutorial-docker.md
+++ b/docs/guide-ja/tutorial-docker.md
@@ -24,7 +24,7 @@ CONTAINER ID   IMAGE   COMMAND   CREATED   STATUS   PORTS
 
 これは Docker デーモンが起動して走っていることを意味します。
 
-これに加えて `docker-compose version` を実行すると、出力は次のようになるはずです。
+さらに、`docker-compose version` を実行すると、出力は次のようになるはずです。
 
 ```
 docker-compose version 1.20.0, build unknown
diff --git a/docs/guide-ja/tutorial-i18n.md b/docs/guide-ja/tutorial-i18n.md
index 43a43f14200..50ba4bf163a 100644
--- a/docs/guide-ja/tutorial-i18n.md
+++ b/docs/guide-ja/tutorial-i18n.md
@@ -156,8 +156,8 @@ return [
 
 #####  他のストレージ・タイプ
 
-翻訳メッセージを格納するのには、PHP ファイル以外に、
-次のメッセージ・ソースを使うことも可能です。
+翻訳メッセージを格納するのには、PHP ファイル以外に、次のメッセージ・ソースを
+使うことも可能です。
 
 - [[yii\i18n\GettextMessageSource]] - 翻訳メッセージを保持するのに GNU Gettext の MO ファイルまたは PO ファイルを使用する
 - [[yii\i18n\DbMessageSource]] - 翻訳メッセージを保存するのにデータベース・テーブルを使用する
@@ -743,7 +743,7 @@ class TranslationEventHandler
 
 翻訳は [[yii\i18n\PhpMessageSource|php ファイル]]、[[yii\i18n\GettextMessageSource|.po ファイル]]、または [[yii\i18n\DbMessageSource|database]] に保存することが出来ます。追加のオプションについてはそれぞれのクラスを参照してください。
 
-まず最初に、構成情報ファイルを作成する必要があります。
+最初に、構成情報ファイルを作成する必要があります。
 どこに保存したいかを決めて、次のコマンドを発行してください。
 
 ```bash
diff --git a/docs/guide-ja/tutorial-mailing.md b/docs/guide-ja/tutorial-mailing.md
index 5c8e9dd8d4a..1f7ec10f362 100644
--- a/docs/guide-ja/tutorial-mailing.md
+++ b/docs/guide-ja/tutorial-mailing.md
@@ -8,7 +8,7 @@ Yii は電子メールの作成と送信をサポートしています。
 実際のメール送信メカニズムはエクステンションによって提供されなければなりません。
 と言うのは、メール送信はプロジェクトが異なるごとに異なる実装が必要とされるでしょうし、通常、外部のサービスやライブラリに依存するものだからです。
 
-ごく一般的な場合であれば、[yii2-swiftmailer](https://www.yiiframework.com/extension/yiisoft/yii2-swiftmailer) 公式エクステンションを使用することが出来ます。
+ごく一般的な場合であれば、yii2-symfonymailer](https://www.yiiframework.com/extension/yiisoft/yii2-symfonymailer) 公式エクステンションを使用することが出来ます。
 
 
 構成
@@ -22,16 +22,11 @@ return [
     //....
     'components' => [
         'mailer' => [
-            'class' => 'yii\swiftmailer\Mailer',
+            'class' => 'yii\symfonymailer\Mailer',
             'useFileTransport' => false,
             'transport' => [
-                'class' => 'Swift_SmtpTransport',
-                'encryption' => 'tls',
-                'host' => 'your_mail_server_host',
-                'port' => 'your_smtp_port',
-                'username' => 'your_username',
-                'password' => 'your_password',
-            ],             
+                'dsn' => 'smtp://user:pass@smtp.example.com:465',
+            ],
         ],
     ],
 ];
diff --git a/docs/guide-ja/tutorial-template-engines.md b/docs/guide-ja/tutorial-template-engines.md
index 8791d5bff05..39518d13ad1 100644
--- a/docs/guide-ja/tutorial-template-engines.md
+++ b/docs/guide-ja/tutorial-template-engines.md
@@ -34,8 +34,8 @@
 ]
 ```
 
-上記のコードにおいては、Smarty と Twig の両者がビュー・ファイルによって使用可能なものとして構成されています。
-しかし、これらのエクステンションをプロジェクトで使うためには、`composer.json` ファイルも修正して、これらのエクステンションを含める必要があります。
+上記のコードにおいては、Smarty と Twig の両者がビュー・ファイルによって使用可能なものとして構成されています。しかし、
+これらのエクステンションをプロジェクトで使うためには、`composer.json` ファイルも修正して、これらのエクステンションを含める必要があります。
 
 ```
 "yiisoft/yii2-smarty": "~2.0.0",
diff --git a/docs/guide-pl/intro-yii.md b/docs/guide-pl/intro-yii.md
index a70e448fcff..b80de97d935 100644
--- a/docs/guide-pl/intro-yii.md
+++ b/docs/guide-pl/intro-yii.md
@@ -52,7 +52,7 @@ Ten przewodnik opisuje wersję 2.0.
 Wymagania i zależności
 ----------------------
 
-Yii 2.0 wymaga PHP w wersji 5.4.0 lub nowszej i pracuje najwydajniej na najnowszej wersji PHP. Aby otrzymać więcej 
+Yii 2.0 wymaga PHP w wersji 7.3.0 lub nowszej i pracuje najwydajniej na najnowszej wersji PHP. Aby otrzymać więcej 
 informacji na temat wymagań i indywidualnych funkcjonalności, uruchom specjalny skrypt testujący system dołączony w każdym wydaniu Yii.
 
 Używanie Yii wymaga podstawowej wiedzy o programowaniu obiektowym w PHP (OOP), ponieważ Yii
diff --git a/docs/guide-pt-BR/caching-data.md b/docs/guide-pt-BR/caching-data.md
index 3801b355a1e..3ac696c8208 100644
--- a/docs/guide-pt-BR/caching-data.md
+++ b/docs/guide-pt-BR/caching-data.md
@@ -229,6 +229,7 @@ Abaixo um sumário das dependências de cache disponíveis:
 - [[yii\caching\DbDependency]]: a dependência muda caso o resultado da consulta especificada pela instrução SQL seja
   alterado.
 - [[yii\caching\ExpressionDependency]]: a dependência muda se o resultado da expressão PHP especificada for alterado.
+- [[yii\caching\CallbackDependency]]: a dependência é alterada se o resultado do callback PHP especificado for alterado..
 - [[yii\caching\FileDependency]]: A dependência muda se a data da última alteração do arquivo for alterada.
 - [[yii\caching\TagDependency]]: associa um registro em cache com uma ou múltiplas tags. Você pode invalidar os
   registros em cache com a tag especificada ao chamar [[yii\caching\TagDependency::invalidate()]].
@@ -352,4 +353,3 @@ O cache de consulta não funciona com resultados de consulta que contêm <i>mani
 Por exemplo, ao usar o tipo de coluna `BLOB` em alguns SGBDs, o resultado da consulta retornará um <i>manipulador de recurso</i> (resource handler) para o registro na coluna.
 
 Alguns armazenamentos em cache têm limitações de tamanho. Por exemplo, memcache limita o uso máximo de espaço de 1MB para cada registro. Então, se o tamanho do resultado de uma consulta exceder este limite, o cache falhará. 
-
diff --git a/docs/guide-pt-BR/intro-yii.md b/docs/guide-pt-BR/intro-yii.md
index 5ba072351c9..bc2126c75fd 100644
--- a/docs/guide-pt-BR/intro-yii.md
+++ b/docs/guide-pt-BR/intro-yii.md
@@ -59,7 +59,7 @@ desenvolvimento nos próximos anos. Este guia trata principalmente da versão 2.
 Requisitos e Pré-requisitos
 ---------------------------
 
-Yii 2.0 requer PHP 5.4.0 ou superior. Você pode encontrar requisitos mais
+Yii 2.0 requer PHP 7.3.0 ou superior. Você pode encontrar requisitos mais
 detalhados para recursos específicos executando o verificador de requisitos
 (requirement checker) incluído em cada lançamento do Yii.
 
diff --git a/docs/guide-pt-BR/start-installation.md b/docs/guide-pt-BR/start-installation.md
index a5228fb9b6d..1fcc2d07c4b 100644
--- a/docs/guide-pt-BR/start-installation.md
+++ b/docs/guide-pt-BR/start-installation.md
@@ -49,7 +49,7 @@ Você pode atualizar o Composer executando o comando `composer self-update`.
 > A quantidade de solicitações depende do número de dependências que sua aplicação possui e pode extrapolar a
 > **taxa limite da API do Github**. Se você atingir esse limite, o Composer pode pedir a você suas credenciais de login para obter um
 > token de acesso à API Github. Em conexões rápidas você pode atingir esse limite antes que o Composer consiga lidar com a situação, então, recomendamos
-> configurar um toke de acesso antes de instalar o Yii.
+> configurar um token de acesso antes de instalar o Yii.
 > Por favor, consulte a [documentação do Composer sobre tokens da API Github](https://getcomposer.org/doc/articles/troubleshooting.md#api-rate-limit-and-oauth-tokens)
 > para instruções de como fazer isso.
 
diff --git a/docs/guide-ru/caching-data.md b/docs/guide-ru/caching-data.md
index 7b1a3052e29..d68bbfdb178 100644
--- a/docs/guide-ru/caching-data.md
+++ b/docs/guide-ru/caching-data.md
@@ -221,6 +221,7 @@ $data = $cache->get($key);
 - [[yii\caching\ChainedDependency]]: зависимость меняется, если любая зависимость в цепочке изменяется;
 - [[yii\caching\DbDependency]]: зависимость меняется, если результат некоторого определенного SQL запроса изменён;
 - [[yii\caching\ExpressionDependency]]: зависимость меняется, если результат определенного PHP выражения изменён;
+- [[yii\caching\CallbackDependency]]: зависимость меняется, если результат коллбэк функции изменён;
 - [[yii\caching\FileDependency]]: зависимость меняется, если изменилось время последней модификации файла;
 - [[yii\caching\TagDependency]]: Связывает кэшированные данные элемента с одним или несколькими тегами. Вы можете аннулировать кэширование данных элементов с заданным тегом(тегами) по вызову. [[yii\caching\TagDependency::invalidate()]];
 
diff --git a/docs/guide-ru/db-active-record.md b/docs/guide-ru/db-active-record.md
index 33479f3bce5..348dde0305b 100644
--- a/docs/guide-ru/db-active-record.md
+++ b/docs/guide-ru/db-active-record.md
@@ -537,7 +537,7 @@ $customer->loadDefaultValues();
 Можно также использовать условия для столбцов JSON:
 
 ```php
-$query->andWhere(['=', 'json', new ArrayExpression(['foo' => 'bar'])
+$query->andWhere(['=', 'json', new ArrayExpression(['foo' => 'bar'])])
 ```
 Дополнительные сведения о системе построения выражений см. [Query Builder – добавление пользовательских условий и выражений](db-query-builder.md#adding-custom-conditions-and-expressions)
 
diff --git a/docs/guide-ru/intro-yii.md b/docs/guide-ru/intro-yii.md
index 353ecaeac05..4ec5d66b1c4 100644
--- a/docs/guide-ru/intro-yii.md
+++ b/docs/guide-ru/intro-yii.md
@@ -42,7 +42,7 @@ Yii — не проект одного человека. Он поддержив
 Требования к ПО и знаниям
 -------------------------
 
-Yii 2.0 требует PHP 5.4.0 и выше и наилучшим образом работает на последней версии PHP. Чтобы узнать требования для отдельных возможностей, вы можете запустить скрипт проверки
+Yii 2.0 требует PHP 7.3.0 и выше и наилучшим образом работает на последней версии PHP. Чтобы узнать требования для отдельных возможностей, вы можете запустить скрипт проверки
 требований, который поставляется с каждым релизом фреймворка.
 
 Для разработки на Yii потребуется общее понимание ООП, так как фреймворк полностью следует этой парадигме. Также стоит
diff --git a/docs/guide-tr/intro-yii.md b/docs/guide-tr/intro-yii.md
index 069f690f91d..f05107f19ee 100644
--- a/docs/guide-tr/intro-yii.md
+++ b/docs/guide-tr/intro-yii.md
@@ -32,6 +32,6 @@ Bu kılavuz esas olarak sürüm 2.0 ile ilgilidir.
 Gereksinimler ve Önkoşullar
 ------------------------------
 
-Yii 2.0, PHP 5.4.0 veya üstü sürüm gerektirir ve PHP 'nin en son sürümü ile en iyi şekilde çalışır. Her bir Yii sürümünde yer alan gereksinim denetleyicisini çalıştırarak, daha ayrıntılı gereksinimleri ayrı ayrı özellikler için bulabilirsiniz.
+Yii 2.0, PHP 7.3.0 veya üstü sürüm gerektirir ve PHP 'nin en son sürümü ile en iyi şekilde çalışır. Her bir Yii sürümünde yer alan gereksinim denetleyicisini çalıştırarak, daha ayrıntılı gereksinimleri ayrı ayrı özellikler için bulabilirsiniz.
 
 Yii OOP temelli bir kütüphane olduğu için Yii'yi kullanmak, nesne yönelimli programlama (OOP) hakkında temel bilgi gerektirir. Yii 2.0 ayrıca PHP'nin [namespaceler](https://www.php.net/manual/en/language.namespaces.php) ve [traitler](https://www.php.net/manual/en/language.oop5.traits.php) gibi son özelliklerinden de yararlanır. Bu kavramları anlamak, Yii 2.0'ı daha kolay anlamanıza yardımcı olacaktır.
diff --git a/docs/guide-uk/intro-yii.md b/docs/guide-uk/intro-yii.md
index 93b0efb9998..cca32875a54 100644
--- a/docs/guide-uk/intro-yii.md
+++ b/docs/guide-uk/intro-yii.md
@@ -46,7 +46,7 @@ Yii — не проект однієї людини. Він підтримуєт
 Вимоги до ПЗ і знань
 --------------------
 
-Yii 2.0 потребує PHP 5.4.0 та вище. Щоб дізнатися вимоги для окремих можливостей ви можете запустити скрипт перевірки вимог,
+Yii 2.0 потребує PHP 7.3.0 та вище. Щоб дізнатися вимоги для окремих можливостей ви можете запустити скрипт перевірки вимог,
 який поставляється із кожним релізом фреймворку.
 
 Для розробки на Yii необхідне загальне розуміння ООП, оскільки фреймворк повністю слідує цій парадигмі.
diff --git a/docs/guide-uz/intro-yii.md b/docs/guide-uz/intro-yii.md
index 4e9f1d6de52..be66bdc7cde 100644
--- a/docs/guide-uz/intro-yii.md
+++ b/docs/guide-uz/intro-yii.md
@@ -32,6 +32,6 @@ Ayni vaqtda Yii ning ikkita yo'nalishi mavjud: 1.1 va 2.0. 1.1 yo'nalishi avvalg
 DT va bilimlarga talablar
 -------------------------
 
-Yii 2.0 PHP 5.4.0 va undan yuqorisini talab qiladi. Boshqa imkoniyatlar uchun talablarni bilish uchun har bir alohida yo'lga qo'yilgan freymvork bilan birga mos o'rnatilgan talablar tekshiruv skriptini ishga tushirishingiz mumkin.
+Yii 2.0 PHP 7.3.0 va undan yuqorisini talab qiladi. Boshqa imkoniyatlar uchun talablarni bilish uchun har bir alohida yo'lga qo'yilgan freymvork bilan birga mos o'rnatilgan talablar tekshiruv skriptini ishga tushirishingiz mumkin.
 
 Freymvork to'liq obektga mo'ljallangan dasturlashga (OMD) asoslanganligi bois Yii da ishlash uchun OMD ni umumiy tushunish talab etiladi. Shuningdek, PHP ning zamonaviy imkoniyatlari bo'lmish [nomlar soxasi](https://www.php.net/manual/ru/language.namespaces.php) va [treytlar](https://www.php.net/manual/ru/language.oop5.traits.php) ni o'rganish talab etiladi.
diff --git a/docs/guide-vi/intro-yii.md b/docs/guide-vi/intro-yii.md
index 6548c58ed28..f7e51d52113 100644
--- a/docs/guide-vi/intro-yii.md
+++ b/docs/guide-vi/intro-yii.md
@@ -47,7 +47,7 @@ Hướng dẫn này chủ yếu là về phiên bản 2.0.
 Yêu cầu hệ thống và các điều kiện cần thiết
 ------------------------------
 
-Yii 2.0 đòi hỏi phiên bản PHP 5.4.0 hoặc cao hơn. Bạn có thể chạy bất kỳ gói Yii đi kèm với các yêu cầu hệ thống. 
+Yii 2.0 đòi hỏi phiên bản PHP 7.3.0 hoặc cao hơn. Bạn có thể chạy bất kỳ gói Yii đi kèm với các yêu cầu hệ thống. 
 kiểm tra xem những gì các đặc điểm cụ thể của từng cấu hình PHP.
 
 Để tìm hiểu Yii, bạn cần có kiến thức cơ bản về lập trình hướng đối tượng (OOP), vì Yii là một framework hướng đối tượng
diff --git a/docs/guide-zh-CN/caching-data.md b/docs/guide-zh-CN/caching-data.md
index 046c85f4124..2fd3e3cfa51 100644
--- a/docs/guide-zh-CN/caching-data.md
+++ b/docs/guide-zh-CN/caching-data.md
@@ -275,6 +275,7 @@ $data = $cache->get($key);
 - [[yii\caching\ChainedDependency]]：如果依赖链上任何一个依赖产生变化，则依赖改变。
 - [[yii\caching\DbDependency]]：如果指定 SQL 语句的查询结果发生了变化，则依赖改变。
 - [[yii\caching\ExpressionDependency]]：如果指定的 PHP 表达式执行结果发生变化，则依赖改变。
+- [[yii\caching\CallbackDependency]]：如果指定的PHP回调结果发生变化，依赖性将改变。
 - [[yii\caching\FileDependency]]：如果文件的最后修改时间发生变化，则依赖改变。
 - [[yii\caching\TagDependency]]：将缓存的数据项与一个或多个标签相关联。 您可以通过调用
   [[yii\caching\TagDependency::invalidate()]] 来检查指定标签的缓存数据项是否有效。
@@ -431,4 +432,3 @@ $result = $db->cache(function ($db) {
 
 > Info: 默认情况下，控制台应用使用独立的配置文件。
 所以，为了上述命令发挥作用，请确保 Web 应用和控制台应用配置相同的缓存组件。
-
diff --git a/docs/guide-zh-CN/intro-yii.md b/docs/guide-zh-CN/intro-yii.md
index d03e5ad9a14..af91110c2e3 100644
--- a/docs/guide-zh-CN/intro-yii.md
+++ b/docs/guide-zh-CN/intro-yii.md
@@ -50,7 +50,7 @@ Yii 当前有两个主要版本：1.1 和 2.0。 1.1 版是上代的老版本，
 系统要求和先决条件
 ------------------------------
 
-Yii 2.0 需要 PHP 5.4.0 或以上版本支持。你可以通过运行任何
+Yii 2.0 需要 PHP 7.3.0 或以上版本支持。你可以通过运行任何
 Yii 发行包中附带的系统要求检查器查看每个具体特性所需的 PHP 配置。
 
 使用 Yii 需要对面向对象编程（OOP）有基本了解，因为 Yii 是一个纯面向对象的框架。Yii 2.0 还使用了 PHP 的最新特性，
diff --git a/docs/guide/caching-data.md b/docs/guide/caching-data.md
index 1c712e801d0..2666e544d4f 100644
--- a/docs/guide/caching-data.md
+++ b/docs/guide/caching-data.md
@@ -277,6 +277,7 @@ Below is a summary of the available cache dependencies:
 - [[yii\caching\ChainedDependency]]: the dependency is changed if any of the dependencies on the chain is changed.
 - [[yii\caching\DbDependency]]: the dependency is changed if the query result of the specified SQL statement is changed.
 - [[yii\caching\ExpressionDependency]]: the dependency is changed if the result of the specified PHP expression is changed.
+- [[yii\caching\CallbackDependency]]: the dependency is changed if the result of the specified PHP callback is changed.
 - [[yii\caching\FileDependency]]: the dependency is changed if the file's last modification time is changed.
 - [[yii\caching\TagDependency]]: associates a cached data item with one or multiple tags. You may invalidate
   the cached data items with the specified tag(s) by calling [[yii\caching\TagDependency::invalidate()]].
@@ -433,4 +434,3 @@ You can flush the cache from the console by calling `yii cache/flush` as well.
 
 > Info: Console application uses a separate configuration file by default. Ensure, that you have the same caching
 components in your web and console application configs to reach the proper effect.
-
diff --git a/docs/guide/db-active-record.md b/docs/guide/db-active-record.md
index e87727469bb..e77317214e5 100644
--- a/docs/guide/db-active-record.md
+++ b/docs/guide/db-active-record.md
@@ -650,6 +650,17 @@ life cycle will happen:
 > - [[yii\db\ActiveRecord::updateCounters()]] 
 > - [[yii\db\ActiveRecord::updateAllCounters()]] 
 
+> Note: DI is not supported by default due to performance concerns. You can add support if needed by overriding
+> the [[yii\db\ActiveRecord::instantiate()|instantiate()]] method to instantiate the class via [[Yii::createObject()]]:
+> 
+> ```php
+> public static function instantiate($row)
+> {
+>     return Yii::createObject(static::class);
+> }
+> ```
+
+
 ### Refreshing Data Life Cycle <span id="refreshing-data-life-cycle"></span>
 
 When calling [[yii\db\ActiveRecord::refresh()|refresh()]] to refresh an Active Record instance, the
diff --git a/docs/guide/input-tabular-input.md b/docs/guide/input-tabular-input.md
index 44c9ffea1d5..f5aa95b57af 100644
--- a/docs/guide/input-tabular-input.md
+++ b/docs/guide/input-tabular-input.md
@@ -1,4 +1,4 @@
-Collecting tabular input
+Collecting Tabular Input
 ========================
 
 Sometimes you need to handle multiple models of the same kind in a single form. For example, multiple settings, where
diff --git a/docs/guide/intro-yii.md b/docs/guide/intro-yii.md
index ea493cf2b8d..17a3242663f 100644
--- a/docs/guide/intro-yii.md
+++ b/docs/guide/intro-yii.md
@@ -50,7 +50,7 @@ This guide is mainly about version 2.0.
 Requirements and Prerequisites
 ------------------------------
 
-Yii 2.0 requires PHP 5.4.0 or above and runs best with the latest version of PHP. You can find more detailed
+Yii 2.0 requires PHP 7.3.0 or above and runs best with the latest version of PHP. You can find more detailed
 requirements for individual features by running the requirement checker included in every Yii release.
 
 Using Yii requires basic knowledge of object-oriented programming (OOP), as Yii is a pure OOP-based framework.
diff --git a/docs/internals/git-workflow.md b/docs/internals/git-workflow.md
index 11e8a499a6c..b3ede5011a0 100644
--- a/docs/internals/git-workflow.md
+++ b/docs/internals/git-workflow.md
@@ -111,7 +111,7 @@ review your suggestion, and provide appropriate feedback along the way.
 ### 2. Pull the latest code from the main Yii branch
 
 ```
-git pull upstream
+git pull upstream master
 ```
 
 You should start at this point for every new contribution to make sure you are working on the latest code.
diff --git a/framework/BaseYii.php b/framework/BaseYii.php
index 496f6aa121a..c659651a02e 100644
--- a/framework/BaseYii.php
+++ b/framework/BaseYii.php
@@ -93,7 +93,7 @@ class BaseYii
      */
     public static function getVersion()
     {
-        return '2.0.50-dev';
+        return '2.0.52-dev';
     }
 
     /**
@@ -502,8 +502,7 @@ public static function endProfile($token, $category = 'application')
     public static function powered()
     {
         return \Yii::t('yii', 'Powered by {yii}', [
-            'yii' => '<a href="https://www.yiiframework.com/" rel="external">' . \Yii::t('yii',
-                    'Yii Framework') . '</a>',
+            'yii' => '<a href="https://www.yiiframework.com/" rel="external">' . \Yii::t('yii', 'Yii Framework') . '</a>',
         ]);
     }
 
diff --git a/framework/CHANGELOG.md b/framework/CHANGELOG.md
index 3867382321c..c100209e75a 100644
--- a/framework/CHANGELOG.md
+++ b/framework/CHANGELOG.md
@@ -1,19 +1,56 @@
 Yii Framework 2 Change Log
 ==========================
 
-2.0.50 under development
+2.0.52 under development
 ------------------------
-- Bug #20040: Fix type `boolean` in `MSSQL` (terabytesoftw)
-- Bug #20005: Fix `yii\console\controllers\ServeController` to specify the router script (terabytesoftw)
-- Bug #19060: Fix `yii\widgets\Menu` bug when using Closure for active item and adding additional tests in `tests\framework\widgets\MenuTest` (atrandafir)
+
+- Bug #20232: Fix regression introduced in `GHSA-cjcc-p67m-7qxm` while attaching behavior defined by `__class` array key (erickskrauch)
+- Bug #20231: Fix regression introduced in #20167 in `yii\validators\FileValidator` (bizley)
+
+2.0.51 July 18, 2024
+--------------------
+
+- Bug #16116: Codeception: oci does not support enabling/disabling integrity check (@terabytesoftw)
+- Bug #20147: Fix error handler compatibility with PHP 8.3 (samdark)
+- Bug #20191: Fix `ActiveRecord::getDirtyAttributes()` for JSON columns with multi-dimensional array values (brandonkelly)
+- Bug #20195: Do not set non abstract values into `ColumnSchema->type` on MSSQL version less then 2017 (axeltomasson)
+- Bug #20211: Add acceptable parameters to `MaskedInput::init()` method (alxlnk)
+- Bug #20226: Revert all PR for "Data providers perform unnecessary COUNT queries that negatively affect performance" (@terabytesoftw)
+- Bug #20230: Fix getting ID in `\yii\filters\Cors::actions()` when attached to a module (timkelty)
+
+
+2.0.50 May 30, 2024
+-------------------
+
 - Bug #13920: Fixed erroneous validation for specific cases (tim-fischer-maschinensucher)
+- Bug #17181: Improved `BaseUrl::isRelative($url)` performance (sammousa, bizley, rob006)
+- Bug #17191: Fixed `BaseUrl::isRelative($url)` method in `yii\helpers\BaseUrl` (ggh2e3)
+- Bug #18469: Fixed `Link::serialize(array $links)` method in `yii\web\Link` (ggh2e3)
+- Bug #19060: Fix `yii\widgets\Menu` bug when using Closure for active item and adding additional tests in `tests\framework\widgets\MenuTest` (atrandafir)
+- Bug #19691: Allow using custom class to style error summary (skepticspriggan)
+- Bug #19817: Add MySQL Query `addCheck()` and `dropCheck()` (@bobonov)
+- Bug #19855: Fixed `yii\validators\FileValidator` to not limit some of its rules only to array attribute (bizley)
 - Bug #19927: Fixed `console\controllers\MessageController` when saving translations to database: fixed FK error when adding new string and language at the same time, checking/regenerating all missing messages and dropping messages for unused languages (atrandafir)
 - Bug #20002: Fixed superfluous query on HEAD request in serializer (xicond)
+- Bug #20005: Fix `yii\console\controllers\ServeController` to specify the router script (terabytesoftw)
+- Bug #20040: Fix type `boolean` in `MSSQL` (terabytesoftw)
+- Bug #20055: Fix Response header X-Pagination-Total-Count is always 0 (lav45, xicond)
+- Bug #20083: Fix deprecated warning implicit conversion from float (skepticspriggan)
+- Bug #20122: Fixed parsing of boolean keywords (e.g. used in SQLite) in `\yii\db\ColumnSchema::typecast()` (rhertogh)
+- Bug #20141: Update `ezyang/htmlpurifier` dependency to version `4.17` (@terabytesoftw)
+- Bug #20165: Adjust pretty name of closures for PHP 8.4 compatibility (@staabm)
+- Bug: CVE-2024-32877, Fix Reflected XSS in Debug mode (Antiphishing)
+- Bug: CVE-2024-4990, Fix Unsafe Reflection in base Component class (@mtangoo)
 - Enh #12743: Added new methods `BaseActiveRecord::loadRelations()` and `BaseActiveRecord::loadRelationsFor()` to eager load related models for existing primary model instances (PowerGamer1)
 - Enh #20030: Improve performance of handling `ErrorHandler::$memoryReserveSize` (antonshevelev, rob006)
-- Enh #20042: Add empty array check to `ActiveQueryTrait::findWith()` (renkas)
 - Enh #20032: Added `yii\helpers\BaseStringHelper::mask()` method for string masking with multibyte support (salehhashemi1992)
 - Enh #20034: Added `yii\helpers\BaseStringHelper::findBetween()` to retrieve a substring that lies between two strings (salehhashemi1992)
+- Enh #20042: Add empty array check to `ActiveQueryTrait::findWith()` (renkas)
+- Enh #20087: Add custom attributes to script tags (skepticspriggan)
+- Enh #20121: Added `yiisoft/yii2-coding-standards` to composer `require-dev` and lint code to comply with PSR12 (razvanphp)
+- Enh #20134: Raise minimum `PHP` version to `7.3` (@terabytesoftw)
+- Enh #20171: Support JSON columns for MariaDB 10.4 or higher (@terabytesoftw)
+- New #20137: Added `yii\caching\CallbackDependency` to allow using a callback to determine if a cache dependency is still valid (laxity7)
 
 
 2.0.49.2 October 12, 2023
diff --git a/framework/UPGRADE.md b/framework/UPGRADE.md
index 3a9569a9822..f75f025301c 100644
--- a/framework/UPGRADE.md
+++ b/framework/UPGRADE.md
@@ -51,6 +51,114 @@ if you want to upgrade from version A to version C and there is
 version B between A and C, you need to follow the instructions
 for both A and B.
 
+Upgrade from Yii 2.0.50
+-----------------------
+
+* Correcting the behavior for `JSON` column type in `MariaDb`.
+
+Example usage of `JSON` column type in `db`:
+
+```php
+<?php
+
+use yii\db\Schema;
+
+$db = Yii::$app->db;
+$command = $db->createCommand();
+
+// Create a table with a JSON column
+$command->createTable(
+    'products',
+    [
+        'id' => Schema::TYPE_PK,
+        'details' => Schema::TYPE_JSON,
+    ],
+)->execute();
+
+// Insert a new product
+$command->insert(
+    'products',
+    [
+        'details' => [
+            'name' => 'apple',
+            'price' => 100,
+            'color' => 'blue',
+            'size' => 'small',
+        ],
+    ],
+)->execute();
+
+// Read all products
+$records = $db->createCommand('SELECT * FROM products')->queryAll();
+```
+
+Example usage of `JSON` column type in `ActiveRecord`:
+
+```php
+<?php
+
+namespace app\model;
+
+use yii\db\ActiveRecord;
+
+class ProductModel extends ActiveRecord
+{
+    public static function tableName()
+    {
+        return 'products';
+    }
+
+    public function rules()
+    {
+        return [
+            [['details'], 'safe'],
+        ];
+    }
+}
+```
+
+```php
+<?php
+
+use app\model\ProductModel;
+
+// Create a new product
+$product = new ProductModel();
+
+// Set the product details
+$product->details = [
+    'name' => 'windows',
+    'color' => 'red',
+    'price' => 200,
+    'size' => 'large',
+];
+
+// Save the product
+$product->save();
+
+// Read the first product
+$product = ProductModel::findOne(1);
+
+// Get the product details
+$details = $product->details;
+
+echo 'Name: ' . $details['name'];
+echo 'Color: ' . $details['color'];
+echo 'Size: ' . $details['size'];
+
+// Read all products with color red
+$products = ProductModel::find()
+    ->where(new \yii\db\Expression('JSON_EXTRACT(details, "$.color") = :color', [':color' => 'red']))
+    ->all();
+
+// Loop through all products
+foreach ($products as $product) {
+    $details = $product->details;
+    echo 'Name: ' . $details['name'];
+    echo 'Color: ' . $details['color'];
+    echo 'Size: ' . $details['size'];
+}
+```
 
 Upgrade from Yii 2.0.48
 -----------------------
diff --git a/framework/Yii.php b/framework/Yii.php
index d02b95a231a..ee9a1b5dc69 100644
--- a/framework/Yii.php
+++ b/framework/Yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
@@ -15,6 +16,8 @@
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
+ * @phpcs:disable PSR1.Files.SideEffects.FoundWithSymbols
+ * @phpcs:disable PSR1.Classes.ClassDeclaration.MissingNamespace
  */
 class Yii extends \yii\BaseYii
 {
diff --git a/framework/assets/yii.activeForm.js b/framework/assets/yii.activeForm.js
index 5b9ce4aaec2..045cfebcaa1 100644
--- a/framework/assets/yii.activeForm.js
+++ b/framework/assets/yii.activeForm.js
@@ -330,7 +330,7 @@
                 this.$form = $form;
                 var $input = findInput($form, this);
 
-                var disabled = $input.toArray().reduce(function(result, next) {
+                var disabled = $input.toArray().reduce(function (result, next) {
                     return result && $(next).is(':disabled');
                 }, true);
                 if (disabled) {
@@ -733,8 +733,7 @@
 
         var errorAttributes = [], $input;
         $.each(data.attributes, function () {
-            var hasError = (submitting && updateInput($form, this, messages)) || (!submitting && attrHasError($form,
-                this, messages));
+            var hasError = (submitting && updateInput($form, this, messages)) || (!submitting && attrHasError($form, this, messages));
             $input = findInput($form, this);
 
             if (!$input.is(':disabled') && !this.cancelled && hasError) {
diff --git a/framework/assets/yii.gridView.js b/framework/assets/yii.gridView.js
index f02d4d95e94..cdcb3731960 100644
--- a/framework/assets/yii.gridView.js
+++ b/framework/assets/yii.gridView.js
@@ -198,7 +198,7 @@
                 $grid.find(checkAllInput + (all ? ":not(:checked)" : ":checked")).prop('checked', all).change();
             };
             initEventHandler($grid, 'checkRow', 'click.yiiGridView', "#" + id + " " + inputs, handler);
-            if($grid.find(inputs).length) {
+            if ($grid.find(inputs).length) {
                 handler(); // Ensure "check all" checkbox is checked on page load if all data row checkboxes are initially checked.
             }
         },
@@ -245,7 +245,8 @@
      * @param {string} selector jQuery selector
      * @param {function} callback The actual function to be executed with this event
      */
-    function initEventHandler($gridView, type, event, selector, callback) {
+    function initEventHandler($gridView, type, event, selector, callback)
+    {
         var id = $gridView.attr('id');
         var prevHandler = gridEventHandlers[id];
         if (prevHandler !== undefined && prevHandler[type] !== undefined) {
diff --git a/framework/assets/yii.js b/framework/assets/yii.js
index 6384d07d172..e7a61f75456 100644
--- a/framework/assets/yii.js
+++ b/framework/assets/yii.js
@@ -353,7 +353,8 @@ window.yii = (function ($) {
         }
     };
 
-    function initCsrfHandler() {
+    function initCsrfHandler()
+    {
         // automatically send CSRF token for all AJAX requests
         $.ajaxPrefilter(function (options, originalOptions, xhr) {
             if (!options.crossDomain && pub.getCsrfParam()) {
@@ -363,7 +364,8 @@ window.yii = (function ($) {
         pub.refreshCsrfToken();
     }
 
-    function initRedirectHandler() {
+    function initRedirectHandler()
+    {
         // handle AJAX redirection
         $(document).ajaxComplete(function (event, xhr) {
             var url = xhr && xhr.getResponseHeader('X-Redirect');
@@ -373,7 +375,8 @@ window.yii = (function ($) {
         });
     }
 
-    function initAssetFilters() {
+    function initAssetFilters()
+    {
         /**
          * Used for storing loaded scripts and information about loading each script if it's in the process of loading.
          * A single script can have one of the following values:
@@ -472,7 +475,8 @@ window.yii = (function ($) {
         });
     }
 
-    function initDataMethods() {
+    function initDataMethods()
+    {
         var handler = function (event) {
             var $this = $(this),
                 method = $this.data('method'),
@@ -499,7 +503,8 @@ window.yii = (function ($) {
             .on('change.yii', pub.changeableSelector, handler);
     }
 
-    function isReloadableAsset(url) {
+    function isReloadableAsset(url)
+    {
         for (var i = 0; i < pub.reloadableScripts.length; i++) {
             var rule = getAbsoluteUrl(pub.reloadableScripts[i]);
             var match = new RegExp("^" + escapeRegExp(rule).split('\\*').join('.+') + "$").test(url);
@@ -512,7 +517,8 @@ window.yii = (function ($) {
     }
 
     // https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex/6969486#6969486
-    function escapeRegExp(str) {
+    function escapeRegExp(str)
+    {
         return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
     }
 
@@ -521,7 +527,8 @@ window.yii = (function ($) {
      * @param {string} url Initial URL
      * @returns {string}
      */
-    function getAbsoluteUrl(url) {
+    function getAbsoluteUrl(url)
+    {
         return url.charAt(0) === '/' ? pub.getBaseCurrentUrl() + url : url;
     }
 
diff --git a/framework/assets/yii.validation.js b/framework/assets/yii.validation.js
index 2cae037e3c1..af80bb80493 100644
--- a/framework/assets/yii.validation.js
+++ b/framework/assets/yii.validation.js
@@ -95,7 +95,7 @@ yii.validation = (function ($) {
         },
 
         validateImage: function (file, messages, options, deferred, fileReader, image) {
-            image.onload = function() {
+            image.onload = function () {
                 validateImageSize(file, image, messages, options);
                 deferred.resolve();
             };
@@ -379,7 +379,8 @@ yii.validation = (function ($) {
         }
     };
 
-    function getUploadedFiles(attribute, messages, options) {
+    function getUploadedFiles(attribute, messages, options)
+    {
         // Skip validation if File API is not available
         if (typeof File === "undefined") {
             return [];
@@ -415,12 +416,13 @@ yii.validation = (function ($) {
         return files;
     }
 
-    function validateFile(file, messages, options) {
+    function validateFile(file, messages, options)
+    {
         if (options.extensions && options.extensions.length > 0) {
             var found = false;
             var filename = file.name.toLowerCase();
 
-            for (var index=0; index < options.extensions.length; index++) {
+            for (var index = 0; index < options.extensions.length; index++) {
                 var ext = options.extensions[index].toLowerCase();
                 if ((ext === '' && filename.indexOf('.') === -1) || (filename.substr(filename.length - options.extensions[index].length - 1) === ('.' + ext))) {
                     found = true;
@@ -448,7 +450,8 @@ yii.validation = (function ($) {
         }
     }
 
-    function validateMimeType(mimeTypes, fileType) {
+    function validateMimeType(mimeTypes, fileType)
+    {
         for (var i = 0, len = mimeTypes.length; i < len; i++) {
             if (new RegExp(mimeTypes[i]).test(fileType)) {
                 return true;
@@ -458,7 +461,8 @@ yii.validation = (function ($) {
         return false;
     }
 
-    function validateImageSize(file, image, messages, options) {
+    function validateImageSize(file, image, messages, options)
+    {
         if (options.minWidth && image.width < options.minWidth) {
             messages.push(options.underWidth.replace(/\{file\}/g, file.name));
         }
@@ -479,7 +483,8 @@ yii.validation = (function ($) {
     /**
      * PHP: `trim($path, ' /')`, JS: `yii.helpers.trim(path, {chars: ' /'})`
      */
-    function trimString(value, options = {skipOnEmpty: true, chars: null}) {
+    function trimString(value, options = {skipOnEmpty: true, chars: null})
+    {
         if (options.skipOnEmpty !== false && pub.isEmpty(value)) {
             return value;
         }
diff --git a/framework/base/Action.php b/framework/base/Action.php
index 45d95c59cbf..bee453fc755 100644
--- a/framework/base/Action.php
+++ b/framework/base/Action.php
@@ -85,7 +85,7 @@ public function runWithParams($params)
             throw new InvalidConfigException(get_class($this) . ' must define a "run()" method.');
         }
         $args = $this->controller->bindActionParams($this, $params);
-        Yii::debug('Running action: ' . get_class($this) . '::run(), invoked by '  . get_class($this->controller), __METHOD__);
+        Yii::debug('Running action: ' . get_class($this) . '::run(), invoked by ' . get_class($this->controller), __METHOD__);
         if (Yii::$app->requestedParams === null) {
             Yii::$app->requestedParams = $args;
         }
diff --git a/framework/base/Component.php b/framework/base/Component.php
index d6121705fa4..7cee3b0720d 100644
--- a/framework/base/Component.php
+++ b/framework/base/Component.php
@@ -188,7 +188,15 @@ public function __set($name, $value)
         } elseif (strncmp($name, 'as ', 3) === 0) {
             // as behavior: attach behavior
             $name = trim(substr($name, 3));
-            $this->attachBehavior($name, $value instanceof Behavior ? $value : Yii::createObject($value));
+            if ($value instanceof Behavior) {
+                $this->attachBehavior($name, $value);
+            } elseif ((isset($value['class']) && is_subclass_of($value['class'], Behavior::class)) || (isset($value['__class']) && is_subclass_of($value['__class'], Behavior::class))) {
+                $this->attachBehavior($name, Yii::createObject($value));
+            } elseif (is_string($value) && is_subclass_of($value, Behavior::class, true)) {
+                $this->attachBehavior($name, Yii::createObject($value));
+            } else {
+                throw new InvalidConfigException('Class is not of type ' . Behavior::class . ' or its subclasses');
+            }
 
             return;
         }
@@ -604,7 +612,7 @@ public function off($name, $handler = null)
      * @param string $name the event name
      * @param Event|null $event the event instance. If not set, a default [[Event]] object will be created.
      */
-    public function trigger($name, Event $event = null)
+    public function trigger($name, ?Event $event = null)
     {
         $this->ensureBehaviors();
 
diff --git a/framework/base/Controller.php b/framework/base/Controller.php
index 2205712fb28..b810e5982dc 100644
--- a/framework/base/Controller.php
+++ b/framework/base/Controller.php
@@ -564,7 +564,7 @@ final protected function bindInjectedParams(\ReflectionType $type, $name, &$args
         $typeName = $type->getName();
         if (($component = $this->module->get($name, false)) instanceof $typeName) {
             $args[] = $component;
-            $requestedParams[$name] = "Component: " . get_class($component) . " \$$name";
+            $requestedParams[$name] = 'Component: ' . get_class($component) . " \$$name";
         } elseif ($this->module->has($typeName) && ($service = $this->module->get($typeName)) instanceof $typeName) {
             $args[] = $service;
             $requestedParams[$name] = 'Module ' . get_class($this->module) . " DI: $typeName \$$name";
diff --git a/framework/base/ErrorException.php b/framework/base/ErrorException.php
index 8f051a57e1c..f9c388a5453 100644
--- a/framework/base/ErrorException.php
+++ b/framework/base/ErrorException.php
@@ -7,8 +7,6 @@
 
 namespace yii\base;
 
-use Yii;
-
 /**
  * ErrorException represents a PHP error.
  *
diff --git a/framework/base/ErrorHandler.php b/framework/base/ErrorHandler.php
index 393438ede57..c31cd058bcc 100644
--- a/framework/base/ErrorHandler.php
+++ b/framework/base/ErrorHandler.php
@@ -279,13 +279,13 @@ public function handleError($code, $message, $file, $line)
      */
     public function handleFatalError()
     {
-        unset($this->_memoryReserve);
+        $this->_memoryReserve = null;
 
-        if (isset($this->_workingDirectory)) {
+        if (!empty($this->_workingDirectory)) {
             // fix working directory for some Web servers e.g. Apache
             chdir($this->_workingDirectory);
             // flush memory
-            unset($this->_workingDirectory);
+            $this->_workingDirectory = null;
         }
 
         $error = error_get_last();
diff --git a/framework/base/Module.php b/framework/base/Module.php
index 06671edc087..391219939fe 100644
--- a/framework/base/Module.php
+++ b/framework/base/Module.php
@@ -656,7 +656,7 @@ public function createControllerByID($id)
 
         $className = preg_replace_callback('%-([a-z0-9_])%i', function ($matches) {
                 return ucfirst($matches[1]);
-            }, ucfirst($className)) . 'Controller';
+        }, ucfirst($className)) . 'Controller';
         $className = ltrim($this->controllerNamespace . '\\' . str_replace('/', '\\', $prefix) . $className, '\\');
         if (strpos($className, '-') !== false || !class_exists($className)) {
             return null;
diff --git a/framework/base/Object.php b/framework/base/Object.php
deleted file mode 100644
index 20b68f16958..00000000000
--- a/framework/base/Object.php
+++ /dev/null
@@ -1,30 +0,0 @@
-<?php
-/**
- * @link https://www.yiiframework.com/
- * @copyright Copyright (c) 2008 Yii Software LLC
- * @license https://www.yiiframework.com/license/
- */
-
-namespace yii\base;
-
-use Yii;
-
-/**
- * Object is the base class that implements the *property* feature.
- *
- * It has been replaced by [[BaseObject]] in version 2.0.13 because `object` has become a reserved word which can not be
- * used as class name in PHP 7.2.
- *
- * Please refer to [[BaseObject]] for detailed documentation and to the
- * [UPGRADE notes](https://github.com/yiisoft/yii2/blob/2.0.13/framework/UPGRADE.md#upgrade-from-yii-2012)
- * on how to migrate your application to use [[BaseObject]] class to make your application compatible with PHP 7.2.
- *
- * @author Qiang Xue <qiang.xue@gmail.com>
- * @since 2.0
- * @deprecated since 2.0.13, the class name `Object` is invalid since PHP 7.2, use [[BaseObject]] instead.
- * @see https://wiki.php.net/rfc/object-typehint
- * @see https://github.com/yiisoft/yii2/issues/7936#issuecomment-315384669
- */
-class Object extends BaseObject
-{
-}
diff --git a/framework/base/Security.php b/framework/base/Security.php
index e8281b2a6c8..85faf50e59f 100644
--- a/framework/base/Security.php
+++ b/framework/base/Security.php
@@ -7,7 +7,6 @@
 
 namespace yii\base;
 
-use Yii;
 use yii\helpers\StringHelper;
 
 /**
@@ -576,7 +575,8 @@ public function validatePassword($password, $hash)
             throw new InvalidArgumentException('Password must be a string and cannot be empty.');
         }
 
-        if (!preg_match('/^\$2[axy]\$(\d\d)\$[\.\/0-9A-Za-z]{22}/', $hash, $matches)
+        if (
+            !preg_match('/^\$2[axy]\$(\d\d)\$[\.\/0-9A-Za-z]{22}/', $hash, $matches)
             || $matches[1] < 4
             || $matches[1] > 30
         ) {
diff --git a/framework/base/View.php b/framework/base/View.php
index 159b2dbe2e0..574954fc6a6 100644
--- a/framework/base/View.php
+++ b/framework/base/View.php
@@ -20,6 +20,7 @@
  *
  * For more details and usage information on View, see the [guide article on views](guide:structure-views).
  *
+ * @property-read DynamicContentAwareInterface[] $dynamicContents Class instances supporting dynamic contents.
  * @property-read string|bool $viewFile The view file currently being rendered. False if no view file is being
  * rendered.
  *
@@ -420,7 +421,7 @@ public function addDynamicPlaceholder($placeholder, $statements)
             }
         }
         $this->dynamicPlaceholders[$placeholder] = $statements;
-}
+    }
 
     /**
      * Evaluates the given PHP statements.
diff --git a/framework/base/package.json b/framework/base/package.json
new file mode 100644
index 00000000000..63d00e462c9
--- /dev/null
+++ b/framework/base/package.json
@@ -0,0 +1,6 @@
+{
+    "name": "base",
+    "version": "1.0.0",
+    "dependencies": {
+    }
+}
diff --git a/framework/behaviors/AttributeBehavior.php b/framework/behaviors/AttributeBehavior.php
index 8cad0edf74d..36b360658a7 100644
--- a/framework/behaviors/AttributeBehavior.php
+++ b/framework/behaviors/AttributeBehavior.php
@@ -109,7 +109,8 @@ public function events()
      */
     public function evaluateAttributes($event)
     {
-        if ($this->skipUpdateOnClean
+        if (
+            $this->skipUpdateOnClean
             && $event->name == ActiveRecord::EVENT_BEFORE_UPDATE
             && empty($this->owner->dirtyAttributes)
         ) {
diff --git a/framework/behaviors/AttributeTypecastBehavior.php b/framework/behaviors/AttributeTypecastBehavior.php
index a418b15de25..b313cac1b61 100644
--- a/framework/behaviors/AttributeTypecastBehavior.php
+++ b/framework/behaviors/AttributeTypecastBehavior.php
@@ -184,7 +184,7 @@ class AttributeTypecastBehavior extends Behavior
      * @var array internal static cache for auto detected [[attributeTypes]] values
      * in format: ownerClassName => attributeTypes
      */
-    private static $autoDetectedAttributeTypes = [];
+    private static $_autoDetectedAttributeTypes = [];
 
 
     /**
@@ -193,7 +193,7 @@ class AttributeTypecastBehavior extends Behavior
      */
     public static function clearAutoDetectedAttributeTypes()
     {
-        self::$autoDetectedAttributeTypes = [];
+        self::$_autoDetectedAttributeTypes = [];
     }
 
     /**
@@ -205,10 +205,10 @@ public function attach($owner)
 
         if ($this->attributeTypes === null) {
             $ownerClass = get_class($this->owner);
-            if (!isset(self::$autoDetectedAttributeTypes[$ownerClass])) {
-                self::$autoDetectedAttributeTypes[$ownerClass] = $this->detectAttributeTypes();
+            if (!isset(self::$_autoDetectedAttributeTypes[$ownerClass])) {
+                self::$_autoDetectedAttributeTypes[$ownerClass] = $this->detectAttributeTypes();
             }
-            $this->attributeTypes = self::$autoDetectedAttributeTypes[$ownerClass];
+            $this->attributeTypes = self::$_autoDetectedAttributeTypes[$ownerClass];
         }
     }
 
diff --git a/framework/behaviors/AttributesBehavior.php b/framework/behaviors/AttributesBehavior.php
index df093864a34..529c72db1f0 100644
--- a/framework/behaviors/AttributesBehavior.php
+++ b/framework/behaviors/AttributesBehavior.php
@@ -140,7 +140,8 @@ public function events()
      */
     public function evaluateAttributes($event)
     {
-        if ($this->skipUpdateOnClean
+        if (
+            $this->skipUpdateOnClean
             && $event->name === ActiveRecord::EVENT_BEFORE_UPDATE
             && empty($this->owner->dirtyAttributes)
         ) {
@@ -152,7 +153,8 @@ public function evaluateAttributes($event)
         if (!empty($this->order[$event->name])) {
             $attributes = array_merge(
                 array_intersect((array) $this->order[$event->name], $attributes),
-                array_diff($attributes, (array) $this->order[$event->name]));
+                array_diff($attributes, (array) $this->order[$event->name])
+            );
         }
         foreach ($attributes as $attribute) {
             if ($this->preserveNonEmptyValues && !empty($this->owner->$attribute)) {
diff --git a/framework/caching/CallbackDependency.php b/framework/caching/CallbackDependency.php
new file mode 100644
index 00000000000..9387ea85bae
--- /dev/null
+++ b/framework/caching/CallbackDependency.php
@@ -0,0 +1,38 @@
+<?php
+/**
+ * @link https://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license https://www.yiiframework.com/license/
+ */
+
+namespace yii\caching;
+
+/**
+ * CallbackDependency represents a dependency based on the result of a callback function.
+ *
+ * Callback function should return a value that serves as the dependency data.
+ *
+ * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).
+ *
+ * @author Vlad Varlamov <vlad@varlamov.dev>
+ * @since 2.0.50
+ */
+class CallbackDependency extends Dependency
+{
+    /**
+     * @var callable the PHP callback that will be called to determine if the dependency has been changed.
+     */
+    public $callback;
+
+
+    /**
+     * Generates the data needed to determine if dependency has been changed.
+     * This method returns the result of the callback function.
+     * @param CacheInterface $cache the cache component that is currently evaluating this dependency
+     * @return mixed the data needed to determine if dependency has been changed.
+     */
+    protected function generateDependencyData($cache)
+    {
+        return ($this->callback)();
+    }
+}
diff --git a/framework/caching/FileDependency.php b/framework/caching/FileDependency.php
index 7b9cfb66432..77052aaf1a6 100644
--- a/framework/caching/FileDependency.php
+++ b/framework/caching/FileDependency.php
@@ -44,6 +44,7 @@ protected function generateDependencyData($cache)
         }
 
         $fileName = Yii::getAlias($this->fileName);
+
         clearstatcache(false, $fileName);
         return @filemtime($fileName);
     }
diff --git a/framework/caching/migrations/m150909_153426_cache_init.php b/framework/caching/migrations/m150909_153426_cache_init.php
index 714178cd89b..28cff779b86 100644
--- a/framework/caching/migrations/m150909_153426_cache_init.php
+++ b/framework/caching/migrations/m150909_153426_cache_init.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/classes.php b/framework/classes.php
index 46741e3180d..78efe0f506d 100644
--- a/framework/classes.php
+++ b/framework/classes.php
@@ -43,7 +43,6 @@
   'yii\base\ModelEvent' => YII2_PATH . '/base/ModelEvent.php',
   'yii\base\Module' => YII2_PATH . '/base/Module.php',
   'yii\base\NotSupportedException' => YII2_PATH . '/base/NotSupportedException.php',
-  'yii\base\Object' => YII2_PATH . '/base/Object.php',
   'yii\base\Request' => YII2_PATH . '/base/Request.php',
   'yii\base\Response' => YII2_PATH . '/base/Response.php',
   'yii\base\Security' => YII2_PATH . '/base/Security.php',
@@ -73,6 +72,7 @@
   'yii\caching\ArrayCache' => YII2_PATH . '/caching/ArrayCache.php',
   'yii\caching\Cache' => YII2_PATH . '/caching/Cache.php',
   'yii\caching\CacheInterface' => YII2_PATH . '/caching/CacheInterface.php',
+  'yii\caching\CallbackDependency' => YII2_PATH . '/caching/CallbackDependency.php',
   'yii\caching\ChainedDependency' => YII2_PATH . '/caching/ChainedDependency.php',
   'yii\caching\DbCache' => YII2_PATH . '/caching/DbCache.php',
   'yii\caching\DbDependency' => YII2_PATH . '/caching/DbDependency.php',
diff --git a/framework/composer.json b/framework/composer.json
index ff36473707c..d24703fb442 100644
--- a/framework/composer.json
+++ b/framework/composer.json
@@ -63,12 +63,12 @@
         "source": "https://github.com/yiisoft/yii2"
     },
     "require": {
-        "php": ">=5.4.0",
+        "php": ">=7.3.0",
         "ext-mbstring": "*",
         "ext-ctype": "*",
         "lib-pcre": "*",
         "yiisoft/yii2-composer": "~2.0.4",
-        "ezyang/htmlpurifier": "^4.6",
+        "ezyang/htmlpurifier": "^4.17",
         "cebe/markdown": "~1.0.0 | ~1.1.0 | ~1.2.0",
         "bower-asset/jquery": "3.7.*@stable | 3.6.*@stable | 3.5.*@stable | 3.4.*@stable | 3.3.*@stable | 3.2.*@stable | 3.1.*@stable | 2.2.*@stable | 2.1.*@stable | 1.11.*@stable | 1.12.*@stable",
         "bower-asset/inputmask": "^5.0.8 ",
diff --git a/framework/console/Controller.php b/framework/console/Controller.php
index 579b5977830..908e50fcdb4 100644
--- a/framework/console/Controller.php
+++ b/framework/console/Controller.php
@@ -28,8 +28,8 @@
  * where `<route>` is a route to a controller action and the params will be populated as properties of a command.
  * See [[options()]] for details.
  *
- * @property-read string $help
- * @property-read string $helpSummary
+ * @property-read string $help The help information for this controller.
+ * @property-read string $helpSummary The one-line short summary describing this controller.
  * @property-read array $passedOptionValues The properties corresponding to the passed options.
  * @property-read array $passedOptions The names of the options passed during execution.
  *
diff --git a/framework/console/ErrorHandler.php b/framework/console/ErrorHandler.php
index c2a976d0429..c02cbb3d011 100644
--- a/framework/console/ErrorHandler.php
+++ b/framework/console/ErrorHandler.php
@@ -90,8 +90,10 @@ protected function formatMessage($message, $format = [Console::FG_RED, Console::
     {
         $stream = (PHP_SAPI === 'cli') ? \STDERR : \STDOUT;
         // try controller first to allow check for --color switch
-        if (Yii::$app->controller instanceof \yii\console\Controller && Yii::$app->controller->isColorEnabled($stream)
-            || Yii::$app instanceof \yii\console\Application && Console::streamSupportsAnsiColors($stream)) {
+        if (
+            Yii::$app->controller instanceof \yii\console\Controller && Yii::$app->controller->isColorEnabled($stream)
+            || Yii::$app instanceof \yii\console\Application && Console::streamSupportsAnsiColors($stream)
+        ) {
             $message = Console::ansiFormat($message, $format);
         }
 
diff --git a/framework/console/controllers/HelpController.php b/framework/console/controllers/HelpController.php
index b7d5db7a936..c620f26cd42 100644
--- a/framework/console/controllers/HelpController.php
+++ b/framework/console/controllers/HelpController.php
@@ -113,13 +113,13 @@ public function actionListActionOptions($action)
         }
 
         foreach ($controller->getActionArgsHelp($action) as $argument => $help) {
-            $description = preg_replace("~\R~", '', addcslashes($help['comment'], ':')) ?: $argument;
+            $description = preg_replace('~\R~', '', addcslashes($help['comment'], ':')) ?: $argument;
             $this->stdout($argument . ':' . $description . "\n");
         }
 
         $this->stdout("\n");
         foreach ($controller->getActionOptionsHelp($action) as $argument => $help) {
-            $description = preg_replace("~\R~", '', addcslashes($help['comment'], ':'));
+            $description = preg_replace('~\R~', '', addcslashes($help['comment'], ':'));
             $this->stdout('--' . $argument . ($description ? ':' . $description : '') . "\n");
         }
     }
@@ -440,11 +440,12 @@ protected function getSubCommandHelp($controller, $actionID)
         if (!empty($args)) {
             foreach ($args as $name => $arg) {
                 $this->stdout($this->formatOptionHelp(
-                        '- ' . $this->ansiFormat($name, Console::FG_CYAN),
-                        $arg['required'],
-                        $arg['type'],
-                        $arg['default'],
-                        $arg['comment']) . "\n\n");
+                    '- ' . $this->ansiFormat($name, Console::FG_CYAN),
+                    $arg['required'],
+                    $arg['type'],
+                    $arg['default'],
+                    $arg['comment']
+                ) . "\n\n");
             }
         }
 
@@ -452,12 +453,16 @@ protected function getSubCommandHelp($controller, $actionID)
             $this->stdout("\nOPTIONS\n\n", Console::BOLD);
             foreach ($options as $name => $option) {
                 $this->stdout($this->formatOptionHelp(
-                        $this->ansiFormat('--' . $name . $this->formatOptionAliases($controller, $name),
-                            Console::FG_RED, empty($option['required']) ? Console::FG_RED : Console::BOLD),
-                        !empty($option['required']),
-                        $option['type'],
-                        $option['default'],
-                        $option['comment']) . "\n\n");
+                    $this->ansiFormat(
+                        '--' . $name . $this->formatOptionAliases($controller, $name),
+                        Console::FG_RED,
+                        empty($option['required']) ? Console::FG_RED : Console::BOLD
+                    ),
+                    !empty($option['required']),
+                    $option['type'],
+                    $option['default'],
+                    $option['comment']
+                ) . "\n\n");
             }
         }
     }
diff --git a/framework/console/controllers/MessageController.php b/framework/console/controllers/MessageController.php
index 6d5a7d6448f..63d3aa10bc6 100644
--- a/framework/console/controllers/MessageController.php
+++ b/framework/console/controllers/MessageController.php
@@ -353,7 +353,7 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
         foreach ($rows as $row) {
             $currentMessages[$row['category']][$row['id']] = $row['message'];
         }
-        
+
         $new = [];
         $obsolete = [];
 
@@ -368,7 +368,7 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
                 $new[$category] = $msgs;
             }
         }
-        
+
         // obsolete categories
         foreach (array_diff(array_keys($currentMessages), array_keys($messages)) as $category) {
             $obsolete += $currentMessages[$category];
@@ -381,8 +381,8 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
                     unset($obsolete[$pk]);
                 }
             }
-        }        
-        
+        }
+
         $this->stdout('Inserting new messages...');
         $insertCount = 0;
 
@@ -392,9 +392,9 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
                 $db->schema->insert($sourceMessageTable, ['category' => $category, 'message' => $msg]);
             }
         }
-        
+
         $this->stdout($insertCount ? "{$insertCount} saved.\n" : "Nothing to save.\n");
-        
+
         $this->stdout($removeUnused ? 'Deleting obsoleted messages...' : 'Updating obsoleted messages...');
 
         if (empty($obsolete)) {
@@ -408,13 +408,13 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
                    ->execute();
                 $this->stdout("{$affected} deleted.\n");
             } elseif ($markUnused) {
-                $marked=0;
+                $marked = 0;
                 $rows = (new Query())
                     ->select(['id', 'message'])
                     ->from($sourceMessageTable)
                     ->where(['in', 'id', array_keys($obsolete)])
                     ->all($db);
-    
+
                 foreach ($rows as $row) {
                     $marked++;
                     $db->createCommand()->update(
@@ -428,64 +428,64 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
                 $this->stdout("kept untouched.\n");
             }
         }
-        
+
         // get fresh message id list
         $freshMessagesIds = [];
         $rows = (new Query())->select(['id'])->from($sourceMessageTable)->all($db);
         foreach ($rows as $row) {
             $freshMessagesIds[] = $row['id'];
         }
-            
-        $this->stdout("Generating missing rows...");
+
+        $this->stdout('Generating missing rows...');
         $generatedMissingRows = [];
-        
+
         foreach ($languages as $language) {
-          $count = 0;
-          
-          // get list of ids of translations for this language
-          $msgRowsIds = [];
-          $msgRows = (new Query())->select(['id'])->from($messageTable)->where([
-              'language'=>$language,
-          ])->all($db);
-          foreach ($msgRows as $row) {
-              $msgRowsIds[] = $row['id'];
-          }
-          
-          // insert missing
-          foreach ($freshMessagesIds as $id) {
-            if (!in_array($id, $msgRowsIds)) {
-              $db->createCommand()
-                 ->insert($messageTable, ['id' => $id, 'language' => $language])
-                 ->execute();
-              $count++;
+            $count = 0;
+
+            // get list of ids of translations for this language
+            $msgRowsIds = [];
+            $msgRows = (new Query())->select(['id'])->from($messageTable)->where([
+                'language' => $language,
+            ])->all($db);
+            foreach ($msgRows as $row) {
+                $msgRowsIds[] = $row['id'];
+            }
+
+            // insert missing
+            foreach ($freshMessagesIds as $id) {
+                if (!in_array($id, $msgRowsIds)) {
+                    $db->createCommand()
+                       ->insert($messageTable, ['id' => $id, 'language' => $language])
+                       ->execute();
+                    $count++;
+                }
+            }
+            if ($count) {
+                $generatedMissingRows[] = "{$count} for {$language}";
             }
-          }
-          if ($count) {
-            $generatedMissingRows[] = "{$count} for {$language}";
-          }
-        }
-        
-        $this->stdout($generatedMissingRows ? implode(", ", $generatedMissingRows).".\n" : "Nothing to do.\n");
-        
-        $this->stdout("Dropping unused languages...");
-        $droppedLanguages=[];
-        
+        }
+
+        $this->stdout($generatedMissingRows ? implode(', ', $generatedMissingRows) . ".\n" : "Nothing to do.\n");
+
+        $this->stdout('Dropping unused languages...');
+        $droppedLanguages = [];
+
         $currentLanguages = [];
         $rows = (new Query())->select(['language'])->from($messageTable)->groupBy('language')->all($db);
         foreach ($rows as $row) {
             $currentLanguages[] = $row['language'];
         }
-        
+
         foreach ($currentLanguages as $currentLanguage) {
-          if (!in_array($currentLanguage, $languages)) {
-            $deleted=$db->createCommand()->delete($messageTable, "language=:language", [
-                'language'=>$currentLanguage,
-            ])->execute();
-            $droppedLanguages[] = "removed {$deleted} rows for $currentLanguage";
-          }
-        }
-        
-        $this->stdout($droppedLanguages ? implode(", ", $droppedLanguages).".\n" : "Nothing to do.\n");
+            if (!in_array($currentLanguage, $languages)) {
+                $deleted = $db->createCommand()->delete($messageTable, 'language=:language', [
+                    'language' => $currentLanguage,
+                ])->execute();
+                $droppedLanguages[] = "removed {$deleted} rows for $currentLanguage";
+            }
+        }
+
+        $this->stdout($droppedLanguages ? implode(', ', $droppedLanguages) . ".\n" : "Nothing to do.\n");
     }
 
     /**
diff --git a/framework/console/controllers/MigrateController.php b/framework/console/controllers/MigrateController.php
index 17b6a76389a..315440f3bb5 100644
--- a/framework/console/controllers/MigrateController.php
+++ b/framework/console/controllers/MigrateController.php
@@ -411,11 +411,7 @@ protected function generateMigrationSourceCode($params)
 
         $templateFile = $this->templateFile;
         $table = null;
-        if (preg_match(
-            '/^create_?junction_?(?:table)?_?(?:for)?(.+)_?and(.+)_?tables?$/i',
-            $name,
-            $matches
-        )) {
+        if (preg_match('/^create_?junction_?(?:table)?_?(?:for)?(.+)_?and(.+)_?tables?$/i', $name, $matches)) {
             $templateFile = $this->generatorTemplateFiles['create_junction'];
             $firstTable = $this->normalizeTableName($matches[1]);
             $secondTable = $this->normalizeTableName($matches[2]);
diff --git a/framework/console/widgets/Table.php b/framework/console/widgets/Table.php
index c0ece4d4d89..be223f1a23b 100644
--- a/framework/console/widgets/Table.php
+++ b/framework/console/widgets/Table.php
@@ -134,8 +134,8 @@ public function setHeaders(array $headers)
      */
     public function setRows(array $rows)
     {
-        $this->rows = array_map(function($row) {
-            return array_map(function($value) {
+        $this->rows = array_map(function ($row) {
+            return array_map(function ($value) {
                 return empty($value) && !is_numeric($value)
                     ? ' '
                     :  (is_array($value)
@@ -198,7 +198,8 @@ public function run()
         );
         // Header
         if ($headerCount > 0) {
-            $buffer .= $this->renderRow($this->headers,
+            $buffer .= $this->renderRow(
+                $this->headers,
                 $this->chars[self::CHAR_LEFT],
                 $this->chars[self::CHAR_MIDDLE],
                 $this->chars[self::CHAR_RIGHT]
@@ -215,10 +216,12 @@ public function run()
                     $this->chars[self::CHAR_RIGHT_MID]
                 );
             }
-            $buffer .= $this->renderRow($row,
+            $buffer .= $this->renderRow(
+                $row,
                 $this->chars[self::CHAR_LEFT],
                 $this->chars[self::CHAR_MIDDLE],
-                $this->chars[self::CHAR_RIGHT]);
+                $this->chars[self::CHAR_RIGHT]
+            );
         }
 
         $buffer .= $this->renderSeparator(
diff --git a/framework/data/BaseDataProvider.php b/framework/data/BaseDataProvider.php
index 82af0aa7c47..9339972c532 100644
--- a/framework/data/BaseDataProvider.php
+++ b/framework/data/BaseDataProvider.php
@@ -29,6 +29,7 @@
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 abstract class BaseDataProvider extends Component implements DataProviderInterface
 {
@@ -168,7 +169,6 @@ public function getTotalCount()
         } elseif ($this->_totalCount === null) {
             $this->_totalCount = $this->prepareTotalCount();
         }
-
         return $this->_totalCount;
     }
 
diff --git a/framework/data/SqlDataProvider.php b/framework/data/SqlDataProvider.php
index 5a8f9631de5..a0fe4bc29a3 100644
--- a/framework/data/SqlDataProvider.php
+++ b/framework/data/SqlDataProvider.php
@@ -7,7 +7,6 @@
 
 namespace yii\data;
 
-use Yii;
 use yii\base\InvalidConfigException;
 use yii\db\Connection;
 use yii\db\Expression;
diff --git a/framework/db/ActiveQuery.php b/framework/db/ActiveQuery.php
index 413255fcfeb..400918f1c4b 100644
--- a/framework/db/ActiveQuery.php
+++ b/framework/db/ActiveQuery.php
@@ -784,7 +784,7 @@ public function orOnCondition($condition, $params = [])
      * @throws InvalidConfigException when query is not initialized properly
      * @see via()
      */
-    public function viaTable($tableName, $link, callable $callable = null)
+    public function viaTable($tableName, $link, ?callable $callable = null)
     {
         $modelClass = $this->primaryModel ? get_class($this->primaryModel) : $this->modelClass;
         $relation = new self($modelClass, [
diff --git a/framework/db/ActiveQueryInterface.php b/framework/db/ActiveQueryInterface.php
index c424a4919cb..55e648cd4e7 100644
--- a/framework/db/ActiveQueryInterface.php
+++ b/framework/db/ActiveQueryInterface.php
@@ -96,7 +96,7 @@ public function with();
      * Its signature should be `function($query)`, where `$query` is the query to be customized.
      * @return $this the relation object itself.
      */
-    public function via($relationName, callable $callable = null);
+    public function via($relationName, ?callable $callable = null);
 
     /**
      * Finds the related records for the specified primary record.
diff --git a/framework/db/ActiveRelationTrait.php b/framework/db/ActiveRelationTrait.php
index 42d02ad9666..73b935fdb94 100644
--- a/framework/db/ActiveRelationTrait.php
+++ b/framework/db/ActiveRelationTrait.php
@@ -16,6 +16,7 @@
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @author Carsten Brandt <mail@cebe.cc>
  * @since 2.0
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  *
  * @method ActiveRecordInterface|array|null one($db = null) See [[ActiveQueryInterface::one()]] for more info.
  * @method ActiveRecordInterface[] all($db = null) See [[ActiveQueryInterface::all()]] for more info.
@@ -102,7 +103,7 @@ public function __clone()
      * Its signature should be `function($query)`, where `$query` is the query to be customized.
      * @return $this the relation object itself.
      */
-    public function via($relationName, callable $callable = null)
+    public function via($relationName, ?callable $callable = null)
     {
         $relation = $this->primaryModel->getRelation($relationName);
         $callableUsed = $callable !== null;
@@ -453,7 +454,8 @@ private function buildBuckets($models, $link, $viaModels = null, $viaQuery = nul
      * @param array $viaMap
      * @return array
      */
-    private function mapVia($map, $viaMap) {
+    private function mapVia($map, $viaMap)
+    {
         $resultMap = [];
         foreach ($map as $key => $linkKeys) {
             $resultMap[$key] = [];
diff --git a/framework/db/ArrayExpression.php b/framework/db/ArrayExpression.php
index c4ba9d6f0c4..935f979dd6b 100644
--- a/framework/db/ArrayExpression.php
+++ b/framework/db/ArrayExpression.php
@@ -24,6 +24,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class ArrayExpression implements ExpressionInterface, \ArrayAccess, \Countable, \IteratorAggregate
 {
diff --git a/framework/db/BaseActiveRecord.php b/framework/db/BaseActiveRecord.php
index ab5414416c5..10021e362cc 100644
--- a/framework/db/BaseActiveRecord.php
+++ b/framework/db/BaseActiveRecord.php
@@ -680,6 +680,7 @@ public function getDirtyAttributes($names = null)
      * @param array|null $attributeNames list of attribute names that need to be saved. Defaults to null,
      * meaning all attributes that are loaded from DB will be saved.
      * @return bool whether the saving succeeded (i.e. no validation errors occurred).
+     * @throws Exception in case update or insert failed.
      */
     public function save($runValidation = true, $attributeNames = null)
     {
@@ -1780,9 +1781,15 @@ private function setRelationDependencies($name, $relation, $viaRelationName = nu
      */
     private function isValueDifferent($newValue, $oldValue)
     {
-        if (is_array($newValue) && is_array($oldValue) && ArrayHelper::isAssociative($oldValue)) {
-            $newValue = ArrayHelper::recursiveSort($newValue);
-            $oldValue = ArrayHelper::recursiveSort($oldValue);
+        if (is_array($newValue) && is_array($oldValue)) {
+            // Only sort associative arrays
+            $sorter = function(&$array) {
+                if (ArrayHelper::isAssociative($array)) {
+                    ksort($array);
+                }
+            };
+            $newValue = ArrayHelper::recursiveSort($newValue, $sorter);
+            $oldValue = ArrayHelper::recursiveSort($oldValue, $sorter);
         }
 
         return $newValue !== $oldValue;
@@ -1806,7 +1813,7 @@ private function isValueDifferent($newValue, $oldValue)
      * - active record instance represented by array (i.e. active record was loaded using [[ActiveQuery::asArray()]]).
      * @param string|array $relationNames the names of the relations of primary models to be loaded from database. See [[ActiveQueryInterface::with()]] on how to specify this argument.
      * @param bool $asArray whether to load each related model as an array or an object (if the relation itself does not specify that).
-     * @since 2.0.49
+     * @since 2.0.50
      */
     public static function loadRelationsFor(&$models, $relationNames, $asArray = false)
     {
@@ -1833,7 +1840,7 @@ public static function loadRelationsFor(&$models, $relationNames, $asArray = fal
      *
      * @param string|array $relationNames the names of the relations of this model to be loaded from database. See [[ActiveQueryInterface::with()]] on how to specify this argument.
      * @param bool $asArray whether to load each relation as an array or an object (if the relation itself does not specify that).
-     * @since 2.0.49
+     * @since 2.0.50
      */
     public function loadRelations($relationNames, $asArray = false)
     {
diff --git a/framework/db/BatchQueryResult.php b/framework/db/BatchQueryResult.php
index db8e8c28946..a188d10b710 100644
--- a/framework/db/BatchQueryResult.php
+++ b/framework/db/BatchQueryResult.php
@@ -41,6 +41,11 @@ class BatchQueryResult extends Component implements \Iterator
      * @since 2.0.41
      */
     const EVENT_FINISH = 'finish';
+    /**
+     * MSSQL error code for exception that is thrown when last batch is size less than specified batch size
+     * @see https://github.com/yiisoft/yii2/issues/10023
+     */
+    const MSSQL_NO_MORE_ROWS_ERROR_CODE = -13;
 
     /**
      * @var Connection|null the DB connection to be used when performing batch query.
@@ -78,11 +83,6 @@ class BatchQueryResult extends Component implements \Iterator
      * @var string|int the key for the current iteration
      */
     private $_key;
-    /**
-     * @var int MSSQL error code for exception that is thrown when last batch is size less than specified batch size
-     * @see https://github.com/yiisoft/yii2/issues/10023
-     */
-    private $mssqlNoMoreRowsErrorCode = -13;
 
 
     /**
@@ -186,7 +186,7 @@ protected function getRows()
             }
         } catch (\PDOException $e) {
             $errorCode = isset($e->errorInfo[1]) ? $e->errorInfo[1] : null;
-            if ($this->getDbDriverName() !== 'sqlsrv' || $errorCode !== $this->mssqlNoMoreRowsErrorCode) {
+            if ($this->getDbDriverName() !== 'sqlsrv' || $errorCode !== self::MSSQL_NO_MORE_ROWS_ERROR_CODE) {
                 throw $e;
             }
         }
diff --git a/framework/db/ColumnSchema.php b/framework/db/ColumnSchema.php
index 74e1ddea84b..ef3c9b06d4d 100644
--- a/framework/db/ColumnSchema.php
+++ b/framework/db/ColumnSchema.php
@@ -114,7 +114,8 @@ public function dbTypecast($value)
      */
     protected function typecast($value)
     {
-        if ($value === ''
+        if (
+            $value === ''
             && !in_array(
                 $this->type,
                 [
@@ -123,12 +124,14 @@ protected function typecast($value)
                     Schema::TYPE_BINARY,
                     Schema::TYPE_CHAR
                 ],
-                true)
+                true
+            )
         ) {
             return null;
         }
 
-        if ($value === null
+        if (
+            $value === null
             || gettype($value) === $this->phpType
             || $value instanceof ExpressionInterface
             || $value instanceof Query
@@ -136,7 +139,8 @@ protected function typecast($value)
             return $value;
         }
 
-        if (is_array($value)
+        if (
+            is_array($value)
             && count($value) === 2
             && isset($value[1])
             && in_array($value[1], $this->getPdoParamTypes(), true)
@@ -154,7 +158,8 @@ protected function typecast($value)
                     // ensure type cast always has . as decimal separator in all locales
                     return StringHelper::floatToString($value);
                 }
-                if (is_numeric($value)
+                if (
+                    is_numeric($value)
                     && ColumnSchemaBuilder::CATEGORY_NUMERIC === ColumnSchemaBuilder::$typeCategoryMap[$this->type]
                 ) {
                     // https://github.com/yiisoft/yii2/issues/14663
@@ -174,7 +179,7 @@ protected function typecast($value)
             case 'boolean':
                 // treating a 0 bit value as false too
                 // https://github.com/yiisoft/yii2/issues/9006
-                return (bool) $value && $value !== "\0";
+                return (bool) $value && $value !== "\0" && strtolower($value) !== 'false';
             case 'double':
                 return (float) $value;
         }
diff --git a/framework/db/ColumnSchemaBuilder.php b/framework/db/ColumnSchemaBuilder.php
index 756b4b8aa8b..02ca9f2fee9 100644
--- a/framework/db/ColumnSchemaBuilder.php
+++ b/framework/db/ColumnSchemaBuilder.php
@@ -7,7 +7,6 @@
 
 namespace yii\db;
 
-use Yii;
 use yii\base\BaseObject;
 use yii\helpers\StringHelper;
 
diff --git a/framework/db/Command.php b/framework/db/Command.php
index 72eda72e4e1..fb32071d21c 100644
--- a/framework/db/Command.php
+++ b/framework/db/Command.php
@@ -218,7 +218,7 @@ public function getRawSql()
             }
         }
         if (!isset($params[1])) {
-            return preg_replace_callback('#(:\w+)#', function($matches) use ($params) {
+            return preg_replace_callback('#(:\w+)#', function ($matches) use ($params) {
                 $m = $matches[1];
                 return isset($params[$m]) ? $params[$m] : $m;
             }, $this->_sql);
diff --git a/framework/db/Connection.php b/framework/db/Connection.php
index 4df8f3af62f..0c3eca41c29 100644
--- a/framework/db/Connection.php
+++ b/framework/db/Connection.php
@@ -1232,7 +1232,6 @@ protected function openFromPoolSequentially(array $pool, array $sharedConfig)
             // ignore the cache and try to connect anyway
             // $pool now only contains servers we did not already try in the loop above
             foreach ($pool as $config) {
-
                 /* @var $db Connection */
                 $db = Yii::createObject($config);
                 try {
diff --git a/framework/db/Migration.php b/framework/db/Migration.php
index c4bf99981af..e9af02dcc55 100644
--- a/framework/db/Migration.php
+++ b/framework/db/Migration.php
@@ -519,6 +519,35 @@ public function dropIndex($name, $table)
         $this->endCommand($time);
     }
 
+    /**
+     * Creates a SQL command for adding a check constraint to an existing table.
+     * @param string $name the name of the check constraint.
+     * The name will be properly quoted by the method.
+     * @param string $table the table that the check constraint will be added to.
+     * The name will be properly quoted by the method.
+     * @param string $expression the SQL of the `CHECK` constraint.
+     */
+    public function addCheck($name, $table, $expression)
+    {
+        $time = $this->beginCommand("add check $name in table $table");
+        $this->db->createCommand()->addCheck($name, $table, $expression)->execute();
+        $this->endCommand($time);
+    }
+
+    /**
+     * Creates a SQL command for dropping a check constraint.
+     * @param string $name the name of the check constraint to be dropped.
+     * The name will be properly quoted by the method.
+     * @param string $table the table whose check constraint is to be dropped.
+     * The name will be properly quoted by the method.
+     */
+    public function dropCheck($name, $table)
+    {
+        $time = $this->beginCommand("drop check $name in table $table");
+        $this->db->createCommand()->dropCheck($name, $table)->execute();
+        $this->endCommand($time);
+    }
+
     /**
      * Builds and execute a SQL statement for adding comment to column.
      *
diff --git a/framework/db/PdoValue.php b/framework/db/PdoValue.php
index b5b80ebb80a..0713774c0a1 100644
--- a/framework/db/PdoValue.php
+++ b/framework/db/PdoValue.php
@@ -21,6 +21,7 @@
  * @see https://www.php.net/manual/en/pdostatement.bindparam.php
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 final class PdoValue implements ExpressionInterface
 {
diff --git a/framework/db/QueryBuilder.php b/framework/db/QueryBuilder.php
index 114116e67c5..9d243abe122 100644
--- a/framework/db/QueryBuilder.php
+++ b/framework/db/QueryBuilder.php
@@ -648,7 +648,6 @@ protected function prepareUpdateSets($table, $columns, $params = [])
         $columnSchemas = $tableSchema !== null ? $tableSchema->columns : [];
         $sets = [];
         foreach ($columns as $name => $value) {
-
             $value = isset($columnSchemas[$name]) ? $columnSchemas[$name]->dbTypecast($value) : $value;
             if ($value instanceof ExpressionInterface) {
                 $placeholder = $this->buildExpression($value, $params);
@@ -1527,7 +1526,7 @@ public function buildWithQueries($withs, &$params)
             $result[] = $with['alias'] . ' AS (' . $with['query'] . ')';
         }
 
-        return 'WITH ' . ($recursive ? 'RECURSIVE ' : '') . implode (', ', $result);
+        return 'WITH ' . ($recursive ? 'RECURSIVE ' : '') . implode(', ', $result);
     }
 
     /**
diff --git a/framework/db/conditions/BetweenColumnsCondition.php b/framework/db/conditions/BetweenColumnsCondition.php
index 93a61d1d110..47ffd275aba 100644
--- a/framework/db/conditions/BetweenColumnsCondition.php
+++ b/framework/db/conditions/BetweenColumnsCondition.php
@@ -37,6 +37,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class BetweenColumnsCondition implements ConditionInterface
 {
diff --git a/framework/db/conditions/BetweenCondition.php b/framework/db/conditions/BetweenCondition.php
index ae12c43b9a4..6d27692c904 100644
--- a/framework/db/conditions/BetweenCondition.php
+++ b/framework/db/conditions/BetweenCondition.php
@@ -14,6 +14,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class BetweenCondition implements ConditionInterface
 {
diff --git a/framework/db/conditions/ExistsCondition.php b/framework/db/conditions/ExistsCondition.php
index 344bf0f9604..9631cc75566 100644
--- a/framework/db/conditions/ExistsCondition.php
+++ b/framework/db/conditions/ExistsCondition.php
@@ -15,6 +15,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class ExistsCondition implements ConditionInterface
 {
diff --git a/framework/db/conditions/HashCondition.php b/framework/db/conditions/HashCondition.php
index 55747c048a4..f70cc6c3b65 100644
--- a/framework/db/conditions/HashCondition.php
+++ b/framework/db/conditions/HashCondition.php
@@ -12,6 +12,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class HashCondition implements ConditionInterface
 {
diff --git a/framework/db/conditions/InCondition.php b/framework/db/conditions/InCondition.php
index 78598c4e481..9d4f0728e8c 100644
--- a/framework/db/conditions/InCondition.php
+++ b/framework/db/conditions/InCondition.php
@@ -15,6 +15,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class InCondition implements ConditionInterface
 {
diff --git a/framework/db/conditions/InConditionBuilder.php b/framework/db/conditions/InConditionBuilder.php
index 3717c226b1f..b4c83b14390 100644
--- a/framework/db/conditions/InConditionBuilder.php
+++ b/framework/db/conditions/InConditionBuilder.php
@@ -235,7 +235,8 @@ protected function buildCompositeInCondition($operator, $columns, $values, &$par
      * @return string is null or is not null condition
      * @since 2.0.31
      */
-    protected function getNullCondition($operator, $column) {
+    protected function getNullCondition($operator, $column)
+    {
         $column = $this->queryBuilder->db->quoteColumnName($column);
         if ($operator === 'IN') {
             return sprintf('%s IS NULL', $column);
diff --git a/framework/db/conditions/NotCondition.php b/framework/db/conditions/NotCondition.php
index c06530187af..ac38ed3371d 100644
--- a/framework/db/conditions/NotCondition.php
+++ b/framework/db/conditions/NotCondition.php
@@ -14,6 +14,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class NotCondition implements ConditionInterface
 {
diff --git a/framework/db/conditions/SimpleCondition.php b/framework/db/conditions/SimpleCondition.php
index f785d4f5ce9..bfc9b60df31 100644
--- a/framework/db/conditions/SimpleCondition.php
+++ b/framework/db/conditions/SimpleCondition.php
@@ -14,6 +14,7 @@
  *
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class SimpleCondition implements ConditionInterface
 {
diff --git a/framework/db/cubrid/Schema.php b/framework/db/cubrid/Schema.php
index 65b6c11b9d4..b50206d4d3d 100644
--- a/framework/db/cubrid/Schema.php
+++ b/framework/db/cubrid/Schema.php
@@ -308,7 +308,8 @@ protected function loadColumnSchema($info)
             return $column;
         }
 
-        if ($column->type === 'timestamp' && $info['Default'] === 'SYS_TIMESTAMP' ||
+        if (
+            $column->type === 'timestamp' && $info['Default'] === 'SYS_TIMESTAMP' ||
             $column->type === 'datetime' && $info['Default'] === 'SYS_DATETIME' ||
             $column->type === 'date' && $info['Default'] === 'SYS_DATE' ||
             $column->type === 'time' && $info['Default'] === 'SYS_TIME'
diff --git a/framework/db/mssql/QueryBuilder.php b/framework/db/mssql/QueryBuilder.php
index 1225c466cc6..b1780617ccc 100644
--- a/framework/db/mssql/QueryBuilder.php
+++ b/framework/db/mssql/QueryBuilder.php
@@ -94,7 +94,7 @@ protected function newBuildOrderByAndLimit($sql, $orderBy, $limit, $offset)
         }
         $sql .= $this->separator . $orderBy;
 
-        // http://technet.microsoft.com/en-us/library/gg699618.aspx
+        // https://technet.microsoft.com/en-us/library/gg699618.aspx
         $offset = $this->hasOffset($offset) ? $offset : '0';
         $sql .= $this->separator . "OFFSET $offset ROWS";
         if ($this->hasLimit($limit)) {
@@ -124,7 +124,7 @@ protected function oldBuildOrderByAndLimit($sql, $orderBy, $limit, $offset)
 
         if ($this->hasLimit($limit)) {
             if ($limit instanceof Expression) {
-                $limit = '('. (string)$limit . ')';
+                $limit = '(' . (string)$limit . ')';
             }
             $sql = "SELECT TOP $limit * FROM ($sql) sub";
         } else {
@@ -199,7 +199,7 @@ public function alterColumn($table, $column, $type)
             if ($checkValue !== null) {
                 $sqlAfter[] = "ALTER TABLE {$tableName} ADD CONSTRAINT " .
                     $this->db->quoteColumnName("CK_{$constraintBase}") .
-                    " CHECK (" . ($defaultValue instanceof Expression ?  $checkValue : new Expression($checkValue)) . ")";
+                    ' CHECK (' . ($defaultValue instanceof Expression ?  $checkValue : new Expression($checkValue)) . ')';
             }
 
             if ($type->isUnique()) {
@@ -307,10 +307,10 @@ protected function buildAddCommentSql($comment, $table, $column = null)
             throw new InvalidArgumentException("Table not found: $table");
         }
 
-        $schemaName = $tableSchema->schemaName ? "N'" . $tableSchema->schemaName . "'": 'SCHEMA_NAME()';
-        $tableName = "N" . $this->db->quoteValue($tableSchema->name);
-        $columnName = $column ? "N" . $this->db->quoteValue($column) : null;
-        $comment = "N" . $this->db->quoteValue($comment);
+        $schemaName = $tableSchema->schemaName ? "N'" . $tableSchema->schemaName . "'" : 'SCHEMA_NAME()';
+        $tableName = 'N' . $this->db->quoteValue($tableSchema->name);
+        $columnName = $column ? 'N' . $this->db->quoteValue($column) : null;
+        $comment = 'N' . $this->db->quoteValue($comment);
 
         $functionParams = "
             @name = N'MS_description',
@@ -373,9 +373,9 @@ protected function buildRemoveCommentSql($table, $column = null)
             throw new InvalidArgumentException("Table not found: $table");
         }
 
-        $schemaName = $tableSchema->schemaName ? "N'" . $tableSchema->schemaName . "'": 'SCHEMA_NAME()';
-        $tableName = "N" . $this->db->quoteValue($tableSchema->name);
-        $columnName = $column ? "N" . $this->db->quoteValue($column) : null;
+        $schemaName = $tableSchema->schemaName ? "N'" . $tableSchema->schemaName . "'" : 'SCHEMA_NAME()';
+        $tableName = 'N' . $this->db->quoteValue($tableSchema->name);
+        $columnName = $column ? 'N' . $this->db->quoteValue($column) : null;
 
         return "
             IF EXISTS (
@@ -502,7 +502,7 @@ public function insert($table, $columns, &$params)
                 }
 
                 $quoteColumnName = $this->db->quoteColumnName($column->name);
-                $cols[] = $quoteColumnName . ' ' . $dbType . ' ' . ($column->allowNull ? "NULL" : "");
+                $cols[] = $quoteColumnName . ' ' . $dbType . ' ' . ($column->allowNull ? 'NULL' : '');
                 $outputColumns[] = 'INSERTED.' . $quoteColumnName;
             }
         }
@@ -639,7 +639,7 @@ protected function extractAlias($table)
      * @see https://docs.microsoft.com/sql/relational-databases/system-catalog-views/sys-objects-transact-sql
      * @return string the DROP CONSTRAINTS SQL
      */
-    private function dropConstraintsForColumn($table, $column, $type='')
+    private function dropConstraintsForColumn($table, $column, $type = '')
     {
         return "DECLARE @tableName VARCHAR(MAX) = '" . $this->db->quoteTableName($table) . "'
 DECLARE @columnName VARCHAR(MAX) = '{$column}'
@@ -659,7 +659,7 @@ private function dropConstraintsForColumn($table, $column, $type='')
             WHERE i.[is_unique_constraint]=1 and i.[object_id]=OBJECT_ID(@tableName)
         ) cons
         JOIN [sys].[objects] so ON so.[object_id]=cons.[object_id]
-        " . (!empty($type) ? " WHERE so.[type]='{$type}'" : "") . ")
+        " . (!empty($type) ? " WHERE so.[type]='{$type}'" : '') . ")
     IF @constraintName IS NULL BREAK
     EXEC (N'ALTER TABLE ' + @tableName + ' DROP CONSTRAINT [' + @constraintName + ']')
 END";
@@ -672,6 +672,6 @@ private function dropConstraintsForColumn($table, $column, $type='')
     public function dropColumn($table, $column)
     {
         return $this->dropConstraintsForColumn($table, $column) . "\nALTER TABLE " . $this->db->quoteTableName($table)
-            . " DROP COLUMN " . $this->db->quoteColumnName($column);
+            . ' DROP COLUMN ' . $this->db->quoteColumnName($column);
     }
 }
diff --git a/framework/db/mssql/Schema.php b/framework/db/mssql/Schema.php
index db7f07c87cb..35908437f48 100644
--- a/framework/db/mssql/Schema.php
+++ b/framework/db/mssql/Schema.php
@@ -408,7 +408,15 @@ protected function loadColumnSchema($info)
                 }
 
                 if ($isVersion2017orLater === false) {
-                    $column->type = $this->booleanTypeLegacy($column->size, $type);
+                    if ($column->size === 1 && ($type === 'tinyint' || $type === 'bit')) {
+                        $column->type = 'boolean';
+                    } elseif ($type === 'bit') {
+                        if ($column->size > 32) {
+                            $column->type = 'bigint';
+                        } elseif ($column->size === 32) {
+                            $column->type = 'integer';
+                        }
+                    }
                 }
             }
         }
@@ -433,7 +441,7 @@ protected function loadColumnSchema($info)
     protected function findColumns($table)
     {
         $columnsTableName = 'INFORMATION_SCHEMA.COLUMNS';
-        $whereSql = "[t1].[table_name] = " . $this->db->quoteValue($table->name);
+        $whereSql = '[t1].[table_name] = ' . $this->db->quoteValue($table->name);
         if ($table->catalogName !== null) {
             $columnsTableName = "{$table->catalogName}.{$columnsTableName}";
             $whereSql .= " AND [t1].[table_catalog] = '{$table->catalogName}'";
@@ -816,26 +824,4 @@ public function createColumnSchemaBuilder($type, $length = null)
         return Yii::createObject(ColumnSchemaBuilder::className(), [$type, $length, $this->db]);
     }
 
-    /**
-     * Assigns a type boolean for the column type bit, for legacy versions of MSSQL.
-     *
-     * @param int $size column size.
-     * @param string $type column type.
-     *
-     * @return string column type.
-     */
-    private function booleanTypeLegacy($size, $type)
-    {
-        if ($size === 1 && ($type === 'tinyint' || $type === 'bit')) {
-            return 'boolean';
-        } elseif ($type === 'bit') {
-            if ($size > 32) {
-                return 'bigint';
-            } elseif ($size === 32) {
-                return 'integer';
-            }
-        }
-
-        return $type;
-    }
 }
diff --git a/framework/db/mysql/JsonExpressionBuilder.php b/framework/db/mysql/JsonExpressionBuilder.php
index 99924ced06a..3eb568d4464 100644
--- a/framework/db/mysql/JsonExpressionBuilder.php
+++ b/framework/db/mysql/JsonExpressionBuilder.php
@@ -43,6 +43,6 @@ public function build(ExpressionInterface $expression, array &$params = [])
         $placeholder = static::PARAM_PREFIX . count($params);
         $params[$placeholder] = Json::encode($value);
 
-        return "CAST($placeholder AS JSON)";
+        return $placeholder;
     }
 }
diff --git a/framework/db/mysql/QueryBuilder.php b/framework/db/mysql/QueryBuilder.php
index fc10931c7a1..293b1d2cb05 100644
--- a/framework/db/mysql/QueryBuilder.php
+++ b/framework/db/mysql/QueryBuilder.php
@@ -150,24 +150,6 @@ public function dropUnique($name, $table)
         return $this->dropIndex($name, $table);
     }
 
-    /**
-     * {@inheritdoc}
-     * @throws NotSupportedException this is not supported by MySQL.
-     */
-    public function addCheck($name, $table, $expression)
-    {
-        throw new NotSupportedException(__METHOD__ . ' is not supported by MySQL.');
-    }
-
-    /**
-     * {@inheritdoc}
-     * @throws NotSupportedException this is not supported by MySQL.
-     */
-    public function dropCheck($name, $table)
-    {
-        throw new NotSupportedException(__METHOD__ . ' is not supported by MySQL.');
-    }
-
     /**
      * Creates a SQL statement for resetting the sequence value of a table's primary key.
      * The sequence will be reset such that the primary key of the next new row inserted
@@ -266,7 +248,7 @@ protected function prepareInsertValues($table, $columns, $params = [])
                     $columns = [reset($tableSchema->columns)->name];
                     $defaultValue = 'DEFAULT';
                 }
-                
+
                 foreach ($columns as $name) {
                     $names[] = $this->db->quoteColumnName($name);
                     $placeholders[] = $defaultValue;
@@ -312,8 +294,7 @@ public function upsert($table, $insertColumns, $updateColumns, &$params)
     public function addCommentOnColumn($table, $column, $comment)
     {
         // Strip existing comment which may include escaped quotes
-        $definition = trim(preg_replace("/COMMENT '(?:''|[^'])*'/i", '',
-            $this->getColumnDefinition($table, $column)));
+        $definition = trim(preg_replace("/COMMENT '(?:''|[^'])*'/i", '', $this->getColumnDefinition($table, $column)));
 
         $checkRegex = '/CHECK *(\(([^()]|(?-2))*\))/';
         $check = preg_match($checkRegex, $definition, $checkMatches);
diff --git a/framework/db/mysql/Schema.php b/framework/db/mysql/Schema.php
index fa2270eb77d..5e0fd9e21f7 100644
--- a/framework/db/mysql/Schema.php
+++ b/framework/db/mysql/Schema.php
@@ -10,6 +10,7 @@
 use Yii;
 use yii\base\InvalidConfigException;
 use yii\base\NotSupportedException;
+use yii\db\CheckConstraint;
 use yii\db\Constraint;
 use yii\db\ConstraintFinderInterface;
 use yii\db\ConstraintFinderTrait;
@@ -200,11 +201,46 @@ protected function loadTableUniques($tableName)
 
     /**
      * {@inheritdoc}
-     * @throws NotSupportedException if this method is called.
      */
     protected function loadTableChecks($tableName)
     {
-        throw new NotSupportedException('MySQL does not support check constraints.');
+        $version = $this->db->getServerVersion();
+
+        // check version MySQL >= 8.0.16
+        if (\stripos($version, 'MariaDb') === false && \version_compare($version, '8.0.16', '<')) {
+            throw new NotSupportedException('MySQL < 8.0.16 does not support check constraints.');
+        }
+
+        $checks = [];
+
+        $sql = <<<SQL
+        SELECT cc.CONSTRAINT_NAME as constraint_name, cc.CHECK_CLAUSE as check_clause
+        FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
+        JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS cc
+        ON tc.CONSTRAINT_NAME = cc.CONSTRAINT_NAME
+        WHERE tc.TABLE_NAME = :tableName AND tc.CONSTRAINT_TYPE = 'CHECK';
+        SQL;
+
+        $resolvedName = $this->resolveTableName($tableName);
+        $tableRows = $this->db->createCommand($sql, [':tableName' => $resolvedName->name])->queryAll();
+
+        if ($tableRows === []) {
+            return $checks;
+        }
+
+        $tableRows = $this->normalizePdoRowKeyCase($tableRows, true);
+
+        foreach ($tableRows as $tableRow) {
+            $check = new CheckConstraint(
+                [
+                    'name' => $tableRow['constraint_name'],
+                    'expression' => $tableRow['check_clause'],
+                ]
+            );
+            $checks[] = $check;
+        }
+
+        return $checks;
     }
 
     /**
@@ -301,9 +337,11 @@ protected function loadColumnSchema($info)
              *
              * See details here: https://mariadb.com/kb/en/library/now/#description
              */
-            if (in_array($column->type, ['timestamp', 'datetime', 'date', 'time'])
+            if (
+                in_array($column->type, ['timestamp', 'datetime', 'date', 'time'])
                 && isset($info['default'])
-                && preg_match('/^current_timestamp(?:\(([0-9]*)\))?$/i', $info['default'], $matches)) {
+                && preg_match('/^current_timestamp(?:\(([0-9]*)\))?$/i', $info['default'], $matches)
+            ) {
                 $column->defaultValue = new Expression('CURRENT_TIMESTAMP' . (!empty($matches[1]) ? '(' . $matches[1] . ')' : ''));
             } elseif (isset($type) && $type === 'bit') {
                 $column->defaultValue = bindec(trim(isset($info['default']) ? $info['default'] : '', 'b\''));
@@ -335,10 +373,19 @@ protected function findColumns($table)
             }
             throw $e;
         }
+
+
+        $jsonColumns = $this->getJsonColumns($table);
+
         foreach ($columns as $info) {
             if ($this->db->slavePdo->getAttribute(\PDO::ATTR_CASE) !== \PDO::CASE_LOWER) {
                 $info = array_change_key_case($info, CASE_LOWER);
             }
+
+            if (\in_array($info['field'], $jsonColumns, true)) {
+                $info['type'] = static::TYPE_JSON;
+            }
+
             $column = $this->loadColumnSchema($info);
             $table->columns[$column->name] = $column;
             if ($column->isPrimaryKey) {
@@ -596,4 +643,20 @@ private function loadTableConstraints($tableName, $returnType)
 
         return $result[$returnType];
     }
+
+    private function getJsonColumns(TableSchema $table): array
+    {
+        $sql = $this->getCreateTableSql($table);
+        $result = [];
+
+        $regexp = '/json_valid\([\`"](.+)[\`"]\s*\)/mi';
+
+        if (\preg_match_all($regexp, $sql, $matches, PREG_SET_ORDER)) {
+            foreach ($matches as $match) {
+                $result[] = $match[1];
+            }
+        }
+
+        return $result;
+    }
 }
diff --git a/framework/db/oci/QueryBuilder.php b/framework/db/oci/QueryBuilder.php
index 170d118c17d..7f63a5bbcb3 100644
--- a/framework/db/oci/QueryBuilder.php
+++ b/framework/db/oci/QueryBuilder.php
@@ -151,13 +151,13 @@ public function executeResetSequence($table, $value = null)
         if ($value !== null) {
             $value = (int) $value;
         } else {
-            if (count($tableSchema->primaryKey)>1) {
+            if (count($tableSchema->primaryKey) > 1) {
                 throw new InvalidArgumentException("Can't reset sequence for composite primary key in table: $table");
             }
             // use master connection to get the biggest PK value
             $value = $this->db->useMaster(function (Connection $db) use ($tableSchema) {
                 return $db->createCommand(
-                    'SELECT MAX("' . $tableSchema->primaryKey[0] . '") FROM "'. $tableSchema->name . '"'
+                    'SELECT MAX("' . $tableSchema->primaryKey[0] . '") FROM "' . $tableSchema->name . '"'
                 )->queryScalar();
             }) + 1;
         }
diff --git a/framework/db/pgsql/ArrayExpressionBuilder.php b/framework/db/pgsql/ArrayExpressionBuilder.php
index 76972542d9e..9da7f257cc6 100644
--- a/framework/db/pgsql/ArrayExpressionBuilder.php
+++ b/framework/db/pgsql/ArrayExpressionBuilder.php
@@ -96,7 +96,7 @@ private function unnestArrayExpression(ArrayExpression $expression, $value)
     {
         $expressionClass = get_class($expression);
 
-        return new $expressionClass($value, $expression->getType(), $expression->getDimension()-1);
+        return new $expressionClass($value, $expression->getType(), $expression->getDimension() - 1);
     }
 
     /**
diff --git a/framework/db/pgsql/ArrayParser.php b/framework/db/pgsql/ArrayParser.php
index 50a204e3c5d..b86553f11a6 100644
--- a/framework/db/pgsql/ArrayParser.php
+++ b/framework/db/pgsql/ArrayParser.php
@@ -13,6 +13,7 @@
  * @author Sergei Tigrov <rrr-r@ya.ru>
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
+ * @phpcs:disable Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore
  */
 class ArrayParser
 {
diff --git a/framework/db/pgsql/QueryBuilder.php b/framework/db/pgsql/QueryBuilder.php
index be990dc0065..48e9ea86713 100644
--- a/framework/db/pgsql/QueryBuilder.php
+++ b/framework/db/pgsql/QueryBuilder.php
@@ -144,13 +144,14 @@ public function dropIndex($name, $table)
             if (strpos($table, '{{') !== false) {
                 $table = preg_replace('/\\{\\{(.*?)\\}\\}/', '\1', $table);
                 list($schema, $table) = explode('.', $table);
-                if (strpos($schema, '%') === false)
-                    $name = $schema.'.'.$name;
-                else
-                    $name = '{{'.$schema.'.'.$name.'}}';
+                if (strpos($schema, '%') === false) {
+                    $name = $schema . '.' . $name;
+                } else {
+                    $name = '{{' . $schema . '.' . $name . '}}';
+                }
             } else {
                 list($schema) = explode('.', $table);
-                $name = $schema.'.'.$name;
+                $name = $schema . '.' . $name;
             }
         }
         return 'DROP INDEX ' . $this->db->quoteTableName($name);
@@ -435,7 +436,7 @@ private function oldUpsert($table, $insertColumns, $updateColumns, &$params)
         list($updates, $params) = $this->prepareUpdateSets($table, $updateColumns, $params);
         $updateSql = 'UPDATE ' . $this->db->quoteTableName($table) . ' SET ' . implode(', ', $updates)
             . ' FROM "EXCLUDED" ' . $this->buildWhere($updateCondition, $params)
-            . ' RETURNING ' . $this->db->quoteTableName($table) .'.*';
+            . ' RETURNING ' . $this->db->quoteTableName($table) . '.*';
         $selectUpsertSubQuery = (new Query())
             ->select(new Expression('1'))
             ->from('upsert')
diff --git a/framework/db/pgsql/Schema.php b/framework/db/pgsql/Schema.php
index 154e01a3808..1610feacaa7 100644
--- a/framework/db/pgsql/Schema.php
+++ b/framework/db/pgsql/Schema.php
@@ -594,8 +594,7 @@ protected function loadColumnSchema($info)
         $column->allowNull = $info['is_nullable'];
         $column->autoIncrement = $info['is_autoinc'];
         $column->comment = $info['column_comment'];
-        if ($info['type_scheme'] !== null && !in_array($info['type_scheme'], [$this->defaultSchema, 'pg_catalog'], true)
-        ) {
+        if ($info['type_scheme'] !== null && !in_array($info['type_scheme'], [$this->defaultSchema, 'pg_catalog'], true)) {
             $column->dbType = $info['type_scheme'] . '.' . $info['data_type'];
         } else {
             $column->dbType = $info['data_type'];
diff --git a/framework/di/Container.php b/framework/di/Container.php
index 25626c54751..4a364f9acff 100644
--- a/framework/di/Container.php
+++ b/framework/di/Container.php
@@ -677,7 +677,6 @@ public function resolveCallableDependencies(callable $callback, $params = [])
                 } else {
                     $isClass = $class !== null && !$class->isBuiltin();
                 }
-
             } else {
                 $class = $param->getClass();
                 $isClass = $class !== null;
diff --git a/framework/filters/AccessRule.php b/framework/filters/AccessRule.php
index decb4365a86..9faf47cc487 100644
--- a/framework/filters/AccessRule.php
+++ b/framework/filters/AccessRule.php
@@ -169,7 +169,8 @@ class AccessRule extends Component
      */
     public function allows($action, $user, $request)
     {
-        if ($this->matchAction($action)
+        if (
+            $this->matchAction($action)
             && $this->matchRole($user)
             && $this->matchIP($request->getUserIP())
             && $this->matchVerb($request->getMethod())
diff --git a/framework/filters/Cors.php b/framework/filters/Cors.php
index b6b99a79bfc..c377dcb0994 100644
--- a/framework/filters/Cors.php
+++ b/framework/filters/Cors.php
@@ -123,8 +123,10 @@ public function beforeAction($action)
      */
     public function overrideDefaultSettings($action)
     {
-        if (isset($this->actions[$action->id])) {
-            $actionParams = $this->actions[$action->id];
+        $actionId = $this->getActionId($action);
+
+        if (isset($this->actions[$actionId])) {
+            $actionParams = $this->actions[$actionId];
             $actionParamsKeys = array_keys($actionParams);
             foreach ($this->cors as $headerField => $headerValue) {
                 if (in_array($headerField, $actionParamsKeys)) {
diff --git a/framework/grid/DataColumn.php b/framework/grid/DataColumn.php
index 17ef73aa93a..453fc099e0f 100644
--- a/framework/grid/DataColumn.php
+++ b/framework/grid/DataColumn.php
@@ -131,7 +131,7 @@ class DataColumn extends Column
     public function init()
     {
         parent::init();
-        if($this->filterAttribute === null) {
+        if ($this->filterAttribute === null) {
             $this->filterAttribute = $this->attribute;
         }
     }
@@ -150,8 +150,10 @@ protected function renderHeaderCellContent()
             $label = Html::encode($label);
         }
 
-        if ($this->attribute !== null && $this->enableSorting &&
-            ($sort = $this->grid->dataProvider->getSort()) !== false && $sort->hasAttribute($this->attribute)) {
+        if (
+            $this->attribute !== null && $this->enableSorting &&
+            ($sort = $this->grid->dataProvider->getSort()) !== false && $sort->hasAttribute($this->attribute)
+        ) {
             return $sort->link($this->attribute, array_merge($this->sortLinkOptions, ['label' => $label]));
         }
 
diff --git a/framework/helpers/BaseConsole.php b/framework/helpers/BaseConsole.php
index febeed313b1..04a031f73dd 100644
--- a/framework/helpers/BaseConsole.php
+++ b/framework/helpers/BaseConsole.php
@@ -894,9 +894,7 @@ public static function prompt($text, $options = [])
         } elseif ($options['pattern'] && !preg_match($options['pattern'], $input)) {
             static::output($options['error']);
             goto top;
-        } elseif ($options['validator'] &&
-            !call_user_func_array($options['validator'], [$input, &$error])
-        ) {
+        } elseif ($options['validator'] && !call_user_func_array($options['validator'], [$input, &$error])) {
             static::output(isset($error) ? $error : $options['error']);
             goto top;
         }
diff --git a/framework/helpers/BaseFormatConverter.php b/framework/helpers/BaseFormatConverter.php
index 3cea9c95017..bfebe8329e1 100644
--- a/framework/helpers/BaseFormatConverter.php
+++ b/framework/helpers/BaseFormatConverter.php
@@ -240,53 +240,53 @@ public static function convertDatePhpToIcu($pattern)
             "'" => "''''",  // single `'` should be encoded as `''`, which internally should be encoded as `''''`
             // Day
             '\d' => "'d'",
-            'd' => 'dd',    // Day of the month, 2 digits with leading zeros 	01 to 31
+            'd' => 'dd',    // Day of the month, 2 digits with leading zeros — 01 to 31
             '\D' => "'D'",
-            'D' => 'eee',   // A textual representation of a day, three letters 	Mon through Sun
+            'D' => 'eee',   // A textual representation of a day, three letters — Mon through Sun
             '\j' => "'j'",
-            'j' => 'd',     // Day of the month without leading zeros 	1 to 31
+            'j' => 'd',     // Day of the month without leading zeros — 1 to 31
             '\l' => "'l'",
-            'l' => 'eeee',  // A full textual representation of the day of the week 	Sunday through Saturday
+            'l' => 'eeee',  // A full textual representation of the day of the week — Sunday through Saturday
             '\N' => "'N'",
             'N' => 'e',     // ISO-8601 numeric representation of the day of the week, 1 (for Monday) through 7 (for Sunday)
             '\S' => "'S'",
-            'S' => '',      // English ordinal suffix for the day of the month, 2 characters 	st, nd, rd or th. Works well with j
+            'S' => '',      // English ordinal suffix for the day of the month, 2 characters — st, nd, rd or th. Works well with j
             '\w' => "'w'",
-            'w' => '',      // Numeric representation of the day of the week 	0 (for Sunday) through 6 (for Saturday)
+            'w' => '',      // Numeric representation of the day of the week — 0 (for Sunday) through 6 (for Saturday)
             '\z' => "'z'",
-            'z' => 'D',     // The day of the year (starting from 0) 	0 through 365
+            'z' => 'D',     // The day of the year (starting from 0) — 0 through 365
             // Week
             '\W' => "'W'",
-            'W' => 'w',     // ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0) 	Example: 42 (the 42nd week in the year)
+            'W' => 'w',     // ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0) — Example: 42 (the 42nd week in the year)
             // Month
             '\F' => "'F'",
             'F' => 'MMMM',  // A full textual representation of a month, January through December
             '\m' => "'m'",
-            'm' => 'MM',    // Numeric representation of a month, with leading zeros 	01 through 12
+            'm' => 'MM',    // Numeric representation of a month, with leading zeros — 01 through 12
             '\M' => "'M'",
-            'M' => 'MMM',   // A short textual representation of a month, three letters 	Jan through Dec
+            'M' => 'MMM',   // A short textual representation of a month, three letters — Jan through Dec
             '\n' => "'n'",
-            'n' => 'M',     // Numeric representation of a month, without leading zeros 	1 through 12, not supported by ICU but we fallback to "with leading zero"
+            'n' => 'M',     // Numeric representation of a month, without leading zeros — 1 through 12, not supported by ICU but we fallback to "with leading zero"
             '\t' => "'t'",
-            't' => '',      // Number of days in the given month 	28 through 31
+            't' => '',      // Number of days in the given month — 28 through 31
             // Year
             '\L' => "'L'",
             'L' => '',      // Whether it's a leap year, 1 if it is a leap year, 0 otherwise.
             '\o' => "'o'",
             'o' => 'Y',     // ISO-8601 year number. This has the same value as Y, except that if the ISO week number (W) belongs to the previous or next year, that year is used instead.
             '\Y' => "'Y'",
-            'Y' => 'yyyy',  // A full numeric representation of a year, 4 digits 	Examples: 1999 or 2003
+            'Y' => 'yyyy',  // A full numeric representation of a year, 4 digits — Examples: 1999 or 2003
             '\y' => "'y'",
-            'y' => 'yy',    // A two digit representation of a year 	Examples: 99 or 03
+            'y' => 'yy',    // A two digit representation of a year — Examples: 99 or 03
             // Time
             '\a' => "'a'",
             'a' => 'a',     // Lowercase Ante meridiem and Post meridiem, am or pm
             '\A' => "'A'",
             'A' => 'a',     // Uppercase Ante meridiem and Post meridiem, AM or PM, not supported by ICU but we fallback to lowercase
             '\B' => "'B'",
-            'B' => '',      // Swatch Internet time 	000 through 999
+            'B' => '',      // Swatch Internet time — 000 through 999
             '\g' => "'g'",
-            'g' => 'h',     // 12-hour format of an hour without leading zeros 	1 through 12
+            'g' => 'h',     // 12-hour format of an hour without leading zeros — 1 through 12
             '\G' => "'G'",
             'G' => 'H',     // 24-hour format of an hour without leading zeros 0 to 23h
             '\h' => "'h'",
@@ -294,9 +294,9 @@ public static function convertDatePhpToIcu($pattern)
             '\H' => "'H'",
             'H' => 'HH',    // 24-hour format of an hour with leading zeros, 00 to 23 h
             '\i' => "'i'",
-            'i' => 'mm',    // Minutes with leading zeros 	00 to 59
+            'i' => 'mm',    // Minutes with leading zeros — 00 to 59
             '\s' => "'s'",
-            's' => 'ss',    // Seconds, with leading zeros 	00 through 59
+            's' => 'ss',    // Seconds, with leading zeros — 00 through 59
             '\u' => "'u'",
             'u' => '',      // Microseconds. Example: 654321
             // Timezone
@@ -482,37 +482,37 @@ public static function convertDatePhpToJui($pattern)
         // https://www.php.net/manual/en/function.date
         return strtr($pattern, [
             // Day
-            'd' => 'dd',    // Day of the month, 2 digits with leading zeros 	01 to 31
-            'D' => 'D',     // A textual representation of a day, three letters 	Mon through Sun
-            'j' => 'd',     // Day of the month without leading zeros 	1 to 31
-            'l' => 'DD',    // A full textual representation of the day of the week 	Sunday through Saturday
+            'd' => 'dd',    // Day of the month, 2 digits with leading zeros — 01 to 31
+            'D' => 'D',     // A textual representation of a day, three letters — Mon through Sun
+            'j' => 'd',     // Day of the month without leading zeros — 1 to 31
+            'l' => 'DD',    // A full textual representation of the day of the week — Sunday through Saturday
             'N' => '',      // ISO-8601 numeric representation of the day of the week, 1 (for Monday) through 7 (for Sunday)
-            'S' => '',      // English ordinal suffix for the day of the month, 2 characters 	st, nd, rd or th. Works well with j
-            'w' => '',      // Numeric representation of the day of the week 	0 (for Sunday) through 6 (for Saturday)
-            'z' => 'o',     // The day of the year (starting from 0) 	0 through 365
+            'S' => '',      // English ordinal suffix for the day of the month, 2 characters — st, nd, rd or th. Works well with j
+            'w' => '',      // Numeric representation of the day of the week — 0 (for Sunday) through 6 (for Saturday)
+            'z' => 'o',     // The day of the year (starting from 0) — 0 through 365
             // Week
-            'W' => '',      // ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0) 	Example: 42 (the 42nd week in the year)
+            'W' => '',      // ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0) — Example: 42 (the 42nd week in the year)
             // Month
             'F' => 'MM',    // A full textual representation of a month, January through December
-            'm' => 'mm',    // Numeric representation of a month, with leading zeros 	01 through 12
-            'M' => 'M',     // A short textual representation of a month, three letters 	Jan through Dec
-            'n' => 'm',     // Numeric representation of a month, without leading zeros 	1 through 12
-            't' => '',      // Number of days in the given month 	28 through 31
+            'm' => 'mm',    // Numeric representation of a month, with leading zeros — 01 through 12
+            'M' => 'M',     // A short textual representation of a month, three letters — Jan through Dec
+            'n' => 'm',     // Numeric representation of a month, without leading zeros — 1 through 12
+            't' => '',      // Number of days in the given month — 28 through 31
             // Year
             'L' => '',      // Whether it's a leap year, 1 if it is a leap year, 0 otherwise.
             'o' => '',      // ISO-8601 year number. This has the same value as Y, except that if the ISO week number (W) belongs to the previous or next year, that year is used instead.
-            'Y' => 'yy',    // A full numeric representation of a year, 4 digits 	Examples: 1999 or 2003
-            'y' => 'y',     // A two digit representation of a year 	Examples: 99 or 03
+            'Y' => 'yy',    // A full numeric representation of a year, 4 digits — Examples: 1999 or 2003
+            'y' => 'y',     // A two digit representation of a year — Examples: 99 or 03
             // Time
             'a' => '',      // Lowercase Ante meridiem and Post meridiem, am or pm
             'A' => '',      // Uppercase Ante meridiem and Post meridiem, AM or PM, not supported by ICU but we fallback to lowercase
-            'B' => '',      // Swatch Internet time 	000 through 999
-            'g' => '',      // 12-hour format of an hour without leading zeros 	1 through 12
+            'B' => '',      // Swatch Internet time — 000 through 999
+            'g' => '',      // 12-hour format of an hour without leading zeros — 1 through 12
             'G' => '',      // 24-hour format of an hour without leading zeros 0 to 23h
             'h' => '',      // 12-hour format of an hour with leading zeros, 01 to 12 h
             'H' => '',      // 24-hour format of an hour with leading zeros, 00 to 23 h
-            'i' => '',      // Minutes with leading zeros 	00 to 59
-            's' => '',      // Seconds, with leading zeros 	00 through 59
+            'i' => '',      // Minutes with leading zeros — 00 to 59
+            's' => '',      // Seconds, with leading zeros — 00 through 59
             'u' => '',      // Microseconds. Example: 654321
             // Timezone
             'e' => '',      // Timezone identifier. Examples: UTC, GMT, Atlantic/Azores
diff --git a/framework/helpers/BaseHtml.php b/framework/helpers/BaseHtml.php
index 45812e4165b..ff81df22752 100644
--- a/framework/helpers/BaseHtml.php
+++ b/framework/helpers/BaseHtml.php
@@ -219,6 +219,11 @@ public static function style($content, $options = [])
      */
     public static function script($content, $options = [])
     {
+        $view = Yii::$app->getView();
+        if ($view instanceof \yii\web\View && !empty($view->scriptOptions)) {
+            $options = array_merge($view->scriptOptions, $options);
+        }
+
         return static::tag('script', $content, $options);
     }
 
@@ -1260,6 +1265,7 @@ public static function activeHint($model, $attribute, $options = [])
      * - showAllErrors: boolean, if set to true every error message for each attribute will be shown otherwise
      *   only the first error message for each attribute will be shown. Defaults to `false`.
      *   Option is available since 2.0.10.
+     * - emptyClass: string, the class name that is added to an empty summary.
      *
      * The rest of the options will be rendered as the attributes of the container tag.
      *
@@ -1271,12 +1277,17 @@ public static function errorSummary($models, $options = [])
         $footer = ArrayHelper::remove($options, 'footer', '');
         $encode = ArrayHelper::remove($options, 'encode', true);
         $showAllErrors = ArrayHelper::remove($options, 'showAllErrors', false);
+        $emptyClass = ArrayHelper::remove($options, 'emptyClass', null);
         unset($options['header']);
         $lines = self::collectErrors($models, $encode, $showAllErrors);
         if (empty($lines)) {
             // still render the placeholder for client-side validation use
             $content = '<ul></ul>';
-            $options['style'] = isset($options['style']) ? rtrim($options['style'], ';') . '; display:none' : 'display:none';
+            if ($emptyClass !== null) {
+                $options['class'] = $emptyClass;
+            } else {
+                $options['style'] = isset($options['style']) ? rtrim($options['style'], ';') . '; display:none' : 'display:none';
+            }
         } else {
             $content = '<ul><li>' . implode("</li>\n<li>", $lines) . '</li></ul>';
         }
diff --git a/framework/helpers/BaseInflector.php b/framework/helpers/BaseInflector.php
index bd1b80a3c91..202a46c239a 100644
--- a/framework/helpers/BaseInflector.php
+++ b/framework/helpers/BaseInflector.php
@@ -663,5 +663,4 @@ private static function encoding()
     {
         return isset(Yii::$app) ? Yii::$app->charset : 'UTF-8';
     }
-
 }
diff --git a/framework/helpers/BaseStringHelper.php b/framework/helpers/BaseStringHelper.php
index 749f92f79cd..ec9252aa4c4 100644
--- a/framework/helpers/BaseStringHelper.php
+++ b/framework/helpers/BaseStringHelper.php
@@ -461,6 +461,7 @@ public static function matchWildcard($pattern, $string, $options = [])
      * @return string
      * @see https://www.php.net/manual/en/function.ucfirst.php
      * @since 2.0.16
+     * @phpcs:disable PSR1.Methods.CamelCapsMethodName.NotCamelCaps
      */
     public static function mb_ucfirst($string, $encoding = 'UTF-8')
     {
@@ -478,6 +479,7 @@ public static function mb_ucfirst($string, $encoding = 'UTF-8')
      * @return string
      * @see https://www.php.net/manual/en/function.ucwords
      * @since 2.0.16
+     * @phpcs:disable PSR1.Methods.CamelCapsMethodName.NotCamelCaps
      */
     public static function mb_ucwords($string, $encoding = 'UTF-8')
     {
@@ -504,16 +506,17 @@ public static function mb_ucwords($string, $encoding = 'UTF-8')
      *
      * @param string $string The input string.
      * @param int $start The starting position from where to begin masking.
-     *                   This can be a positive or negative integer.
-     *                   Positive values count from the beginning,
-     *                   negative values count from the end of the string.
+     * This can be a positive or negative integer.
+     * Positive values count from the beginning,
+     * negative values count from the end of the string.
      * @param int $length The length of the section to be masked.
-     *                    The masking will start from the $start position
-     *                    and continue for $length characters.
+     * The masking will start from the $start position
+     * and continue for $length characters.
      * @param string $mask The character to use for masking. The default is '*'.
      * @return string The masked string.
      */
-    public static function mask($string, $start, $length, $mask = '*') {
+    public static function mask($string, $start, $length, $mask = '*')
+    {
         $strLength = mb_strlen($string, 'UTF-8');
 
         // Return original string if start position is out of bounds
diff --git a/framework/helpers/BaseUrl.php b/framework/helpers/BaseUrl.php
index a671123c7cd..864dbc63c48 100644
--- a/framework/helpers/BaseUrl.php
+++ b/framework/helpers/BaseUrl.php
@@ -378,7 +378,7 @@ public static function home($scheme = false)
      */
     public static function isRelative($url)
     {
-        return strncmp($url, '//', 2) && strpos($url, '://') === false;
+        return preg_match('~^[[:alpha:]][[:alnum:]+-.]*://|^//~', $url) === 0;
     }
 
     /**
diff --git a/framework/helpers/mimeExtensions.php b/framework/helpers/mimeExtensions.php
index e4936030fd8..29472bfa88e 100644
--- a/framework/helpers/mimeExtensions.php
+++ b/framework/helpers/mimeExtensions.php
@@ -1041,7 +1041,6 @@
     'model/vnd.dwf' => 'dwf',
     'model/vnd.gdl' => 'gdl',
     'model/vnd.gtw' => 'gtw',
-    'model/vnd.mts' => 'mts',
     'model/vnd.vtu' => 'vtu',
     'model/vrml' => [
         'wrl',
@@ -1165,6 +1164,12 @@
         'mj2',
         'mjp2',
     ],
+    'video/mp2t' => [
+        'ts',
+        'm2t',
+        'm2ts',
+        'mts',
+    ],
     'video/mp4' => [
         'mp4',
         'mp4v',
diff --git a/framework/helpers/mimeTypes.php b/framework/helpers/mimeTypes.php
index f895e8d0728..ad7c9ce80a6 100644
--- a/framework/helpers/mimeTypes.php
+++ b/framework/helpers/mimeTypes.php
@@ -418,6 +418,8 @@
     'm1v' => 'video/mpeg',
     'm21' => 'application/mp21',
     'm2a' => 'audio/mpeg',
+    'm2t' => 'video/mp2t',
+    'm2ts' => 'video/mp2t',
     'm2v' => 'video/mpeg',
     'm3a' => 'audio/mpeg',
     'm3u' => 'audio/x-mpegurl',
@@ -503,7 +505,7 @@
     'msi' => 'application/x-msdownload',
     'msl' => 'application/vnd.mobius.msl',
     'msty' => 'application/vnd.muvee.style',
-    'mts' => 'model/vnd.mts',
+    'mts' => 'video/mp2t',
     'mus' => 'application/vnd.musician',
     'musicxml' => 'application/vnd.recordare.musicxml+xml',
     'mvb' => 'application/x-msmediaview',
@@ -818,6 +820,7 @@
     'tr' => 'text/troff',
     'tra' => 'application/vnd.trueapp',
     'trm' => 'application/x-msterminal',
+    'ts' => 'video/mp2t',
     'tsd' => 'application/timestamped-data',
     'tsv' => 'text/tab-separated-values',
     'ttc' => 'font/collection',
@@ -1008,7 +1011,7 @@
 
 # fix for bundled libmagic bug, see also https://github.com/yiisoft/yii2/issues/19925
 if ((PHP_VERSION_ID >= 80100 && PHP_VERSION_ID < 80122) || (PHP_VERSION_ID >= 80200 && PHP_VERSION_ID < 80209)) {
-    $mimeTypes = array_replace($mimeTypes, array('xz' => 'application/octet-stream'));
+    $mimeTypes = array_replace($mimeTypes, ['xz' => 'application/octet-stream']);
 }
 
 return $mimeTypes;
diff --git a/framework/i18n/DbMessageSource.php b/framework/i18n/DbMessageSource.php
index 0686291d2a7..e7934be3564 100644
--- a/framework/i18n/DbMessageSource.php
+++ b/framework/i18n/DbMessageSource.php
@@ -7,7 +7,6 @@
 
 namespace yii\i18n;
 
-use Yii;
 use yii\base\InvalidConfigException;
 use yii\caching\CacheInterface;
 use yii\db\Connection;
diff --git a/framework/i18n/Formatter.php b/framework/i18n/Formatter.php
index 001b81bfa90..35deac4c6fc 100644
--- a/framework/i18n/Formatter.php
+++ b/framework/i18n/Formatter.php
@@ -882,7 +882,8 @@ protected function normalizeDatetimeValue($value, $checkDateTimeInfo = false)
                 ($timestamp = DateTime::createFromFormat(
                     'Y-m-d|',
                     $value,
-                    new DateTimeZone($this->defaultTimeZone))
+                    new DateTimeZone($this->defaultTimeZone)
+                )
                 ) !== false
             ) { // try Y-m-d format (support invalid dates like 2012-13-01)
                 return $checkDateTimeInfo ? [$timestamp, false, true] : $timestamp;
@@ -891,7 +892,8 @@ protected function normalizeDatetimeValue($value, $checkDateTimeInfo = false)
                 ($timestamp = DateTime::createFromFormat(
                     'Y-m-d H:i:s',
                     $value,
-                    new DateTimeZone($this->defaultTimeZone))
+                    new DateTimeZone($this->defaultTimeZone)
+                )
                 ) !== false
             ) { // try Y-m-d H:i:s format (support invalid dates like 2012-13-01 12:63:12)
                 return $checkDateTimeInfo ? [$timestamp, true, true] : $timestamp;
@@ -1056,7 +1058,7 @@ public function asDuration($value, $implodeString = ', ', $negativeSign = '-')
         } elseif (is_numeric($value)) {
             $isNegative = $value < 0;
             $zeroDateTime = (new DateTime())->setTimestamp(0);
-            $valueDateTime = (new DateTime())->setTimestamp(abs($value));
+            $valueDateTime = (new DateTime())->setTimestamp(abs((int) $value));
             $interval = $valueDateTime->diff($zeroDateTime);
         } elseif (strncmp($value, 'P-', 2) === 0) {
             $interval = new DateInterval('P' . substr($value, 2));
diff --git a/framework/i18n/MessageFormatter.php b/framework/i18n/MessageFormatter.php
index e9d18fb50c1..51633127046 100644
--- a/framework/i18n/MessageFormatter.php
+++ b/framework/i18n/MessageFormatter.php
@@ -422,7 +422,8 @@ private function parseToken($token, $args, $locale)
                         $offset = (int) trim(mb_substr($selector, 7, ($pos = mb_strpos(str_replace(["\n", "\r", "\t"], ' ', $selector), ' ', 7, $charset)) - 7, $charset));
                         $selector = trim(mb_substr($selector, $pos + 1, mb_strlen($selector, $charset), $charset));
                     }
-                    if ($message === false && $selector === 'other' ||
+                    if (
+                        $message === false && $selector === 'other' ||
                         strncmp($selector, '=', 1) === 0 && (int) mb_substr($selector, 1, mb_strlen($selector, $charset), $charset) === $arg ||
                         $selector === 'one' && $arg - $offset == 1
                     ) {
diff --git a/framework/i18n/migrations/m150207_210500_i18n_init.php b/framework/i18n/migrations/m150207_210500_i18n_init.php
index 58015294823..339b57e191c 100644
--- a/framework/i18n/migrations/m150207_210500_i18n_init.php
+++ b/framework/i18n/migrations/m150207_210500_i18n_init.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/log/DbTarget.php b/framework/log/DbTarget.php
index c2c3d6a6245..d32c292c4f3 100644
--- a/framework/log/DbTarget.php
+++ b/framework/log/DbTarget.php
@@ -7,7 +7,6 @@
 
 namespace yii\log;
 
-use Yii;
 use yii\base\InvalidConfigException;
 use yii\db\Connection;
 use yii\db\Exception;
@@ -84,13 +83,15 @@ public function export()
                     $text = VarDumper::export($text);
                 }
             }
-            if ($command->bindValues([
+            if (
+                $command->bindValues([
                     ':level' => $level,
                     ':category' => $category,
                     ':log_time' => $timestamp,
                     ':prefix' => $this->getMessagePrefix($message),
                     ':message' => $text,
-                ])->execute() > 0) {
+                ])->execute() > 0
+            ) {
                 continue;
             }
             throw new LogRuntimeException('Unable to export log through database!');
diff --git a/framework/log/Logger.php b/framework/log/Logger.php
index 6be7eaf2a92..62294c31f93 100644
--- a/framework/log/Logger.php
+++ b/framework/log/Logger.php
@@ -7,7 +7,6 @@
 
 namespace yii\log;
 
-use Yii;
 use yii\base\Component;
 
 /**
diff --git a/framework/log/SyslogTarget.php b/framework/log/SyslogTarget.php
index 8a190d4fb5a..4c22a8b4fe7 100644
--- a/framework/log/SyslogTarget.php
+++ b/framework/log/SyslogTarget.php
@@ -7,7 +7,6 @@
 
 namespace yii\log;
 
-use Yii;
 use yii\helpers\VarDumper;
 
 /**
diff --git a/framework/log/migrations/m141106_185632_log_init.php b/framework/log/migrations/m141106_185632_log_init.php
index 3e5746b10fb..ee73b6ff2d4 100644
--- a/framework/log/migrations/m141106_185632_log_init.php
+++ b/framework/log/migrations/m141106_185632_log_init.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
@@ -24,7 +25,7 @@ class m141106_185632_log_init extends Migration
     /**
      * @var DbTarget[] Targets to create log table for
      */
-    private $dbTargets = [];
+    private $_dbTargets = [];
 
     /**
      * @throws InvalidConfigException
@@ -32,7 +33,7 @@ class m141106_185632_log_init extends Migration
      */
     protected function getDbTargets()
     {
-        if ($this->dbTargets === []) {
+        if ($this->_dbTargets === []) {
             $log = Yii::$app->getLog();
 
             $usedTargets = [];
@@ -45,17 +46,17 @@ protected function getDbTargets()
                     if (!in_array($currentTarget, $usedTargets, true)) {
                         // do not create same table twice
                         $usedTargets[] = $currentTarget;
-                        $this->dbTargets[] = $target;
+                        $this->_dbTargets[] = $target;
                     }
                 }
             }
 
-            if ($this->dbTargets === []) {
+            if ($this->_dbTargets === []) {
                 throw new InvalidConfigException('You should configure "log" component to use one or more database targets before executing this migration.');
             }
         }
 
-        return $this->dbTargets;
+        return $this->_dbTargets;
     }
 
     public function up()
diff --git a/framework/mail/BaseMessage.php b/framework/mail/BaseMessage.php
index 66b4488832f..801b7468a8a 100644
--- a/framework/mail/BaseMessage.php
+++ b/framework/mail/BaseMessage.php
@@ -38,7 +38,7 @@ abstract class BaseMessage extends BaseObject implements MessageInterface
      * the "mailer" application component will be used instead.
      * @return bool whether this message is sent successfully.
      */
-    public function send(MailerInterface $mailer = null)
+    public function send(?MailerInterface $mailer = null)
     {
         if ($mailer === null && $this->mailer === null) {
             $mailer = Yii::$app->getMailer();
diff --git a/framework/mail/MessageInterface.php b/framework/mail/MessageInterface.php
index 74795c7ecef..d5c70e21e54 100644
--- a/framework/mail/MessageInterface.php
+++ b/framework/mail/MessageInterface.php
@@ -208,7 +208,7 @@ public function embedContent($content, array $options = []);
      * If null, the "mailer" application component will be used instead.
      * @return bool whether this message is sent successfully.
      */
-    public function send(MailerInterface $mailer = null);
+    public function send(?MailerInterface $mailer = null);
 
     /**
      * Returns string representation of this message.
diff --git a/framework/messages/af/yii.php b/framework/messages/af/yii.php
index 18be9560231..848c42b91f7 100644
--- a/framework/messages/af/yii.php
+++ b/framework/messages/af/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ar/yii.php b/framework/messages/ar/yii.php
index a2b19347e06..25d0623c494 100644
--- a/framework/messages/ar/yii.php
+++ b/framework/messages/ar/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/az/yii.php b/framework/messages/az/yii.php
index a283d5501e4..950226a6e0f 100644
--- a/framework/messages/az/yii.php
+++ b/framework/messages/az/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/be/yii.php b/framework/messages/be/yii.php
index c2771f47385..69c5d22c1a4 100644
--- a/framework/messages/be/yii.php
+++ b/framework/messages/be/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/bg/yii.php b/framework/messages/bg/yii.php
index d12f3e03169..7e7d0219ed6 100644
--- a/framework/messages/bg/yii.php
+++ b/framework/messages/bg/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/bs/yii.php b/framework/messages/bs/yii.php
index c4013f58cf1..eb583338b96 100644
--- a/framework/messages/bs/yii.php
+++ b/framework/messages/bs/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ca/yii.php b/framework/messages/ca/yii.php
index 9e359a0dd5d..925abf32036 100644
--- a/framework/messages/ca/yii.php
+++ b/framework/messages/ca/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/config.php b/framework/messages/config.php
index 21ba4310a5c..35d2b9f55bd 100644
--- a/framework/messages/config.php
+++ b/framework/messages/config.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/cs/yii.php b/framework/messages/cs/yii.php
index 5520301c14b..13984c95679 100644
--- a/framework/messages/cs/yii.php
+++ b/framework/messages/cs/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/da/yii.php b/framework/messages/da/yii.php
index 6f074dd60be..64eba62ce43 100644
--- a/framework/messages/da/yii.php
+++ b/framework/messages/da/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/de/yii.php b/framework/messages/de/yii.php
index 96f36ac4374..b92593b6f8f 100644
--- a/framework/messages/de/yii.php
+++ b/framework/messages/de/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/el/yii.php b/framework/messages/el/yii.php
index fddd64d8212..a6481adab81 100644
--- a/framework/messages/el/yii.php
+++ b/framework/messages/el/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/es/yii.php b/framework/messages/es/yii.php
index af60f0767ed..9bb0c8e0290 100644
--- a/framework/messages/es/yii.php
+++ b/framework/messages/es/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/et/yii.php b/framework/messages/et/yii.php
index 950274fa961..ddd632b90f1 100644
--- a/framework/messages/et/yii.php
+++ b/framework/messages/et/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/fa/yii.php b/framework/messages/fa/yii.php
index e9213b3482f..1b720621a81 100644
--- a/framework/messages/fa/yii.php
+++ b/framework/messages/fa/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/fi/yii.php b/framework/messages/fi/yii.php
index 531a44214e7..092d46ae522 100644
--- a/framework/messages/fi/yii.php
+++ b/framework/messages/fi/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/fr/yii.php b/framework/messages/fr/yii.php
index 8e1bfda3cd4..7a29b60a570 100644
--- a/framework/messages/fr/yii.php
+++ b/framework/messages/fr/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/he/yii.php b/framework/messages/he/yii.php
index b3eef1b535c..535a80a3f0b 100644
--- a/framework/messages/he/yii.php
+++ b/framework/messages/he/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/hi/yii.php b/framework/messages/hi/yii.php
index 0276c2d8728..f86efd54b4c 100644
--- a/framework/messages/hi/yii.php
+++ b/framework/messages/hi/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/hr/yii.php b/framework/messages/hr/yii.php
index 73e5c656fb0..54d3e298942 100644
--- a/framework/messages/hr/yii.php
+++ b/framework/messages/hr/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/hu/yii.php b/framework/messages/hu/yii.php
index db42e0f2926..b16c0a35a3a 100644
--- a/framework/messages/hu/yii.php
+++ b/framework/messages/hu/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/hy/yii.php b/framework/messages/hy/yii.php
index b62094573e1..6d29ee78bf1 100644
--- a/framework/messages/hy/yii.php
+++ b/framework/messages/hy/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/id/yii.php b/framework/messages/id/yii.php
index 785f29f43b2..f9e5bb52463 100644
--- a/framework/messages/id/yii.php
+++ b/framework/messages/id/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/it/yii.php b/framework/messages/it/yii.php
index e2d7eff4165..f69090f334d 100644
--- a/framework/messages/it/yii.php
+++ b/framework/messages/it/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ja/yii.php b/framework/messages/ja/yii.php
index b1b0f43cab8..c67f6bd9cb1 100644
--- a/framework/messages/ja/yii.php
+++ b/framework/messages/ja/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ka/yii.php b/framework/messages/ka/yii.php
index c885e6bd951..abc94f26009 100644
--- a/framework/messages/ka/yii.php
+++ b/framework/messages/ka/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/kk/yii.php b/framework/messages/kk/yii.php
index fb43703aa89..7ccf9dcc4d7 100644
--- a/framework/messages/kk/yii.php
+++ b/framework/messages/kk/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ko/yii.php b/framework/messages/ko/yii.php
index bf0a51babb4..735ed5dbd4c 100644
--- a/framework/messages/ko/yii.php
+++ b/framework/messages/ko/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/kz/yii.php b/framework/messages/kz/yii.php
index 76c43e120c8..77472859907 100644
--- a/framework/messages/kz/yii.php
+++ b/framework/messages/kz/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/lt/yii.php b/framework/messages/lt/yii.php
index 72d8d5b3081..fdd0cb75fdf 100644
--- a/framework/messages/lt/yii.php
+++ b/framework/messages/lt/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/lv/yii.php b/framework/messages/lv/yii.php
index d1ad194b9d4..2f8bcd29bd0 100644
--- a/framework/messages/lv/yii.php
+++ b/framework/messages/lv/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ms/yii.php b/framework/messages/ms/yii.php
index 3850dcaa6fe..0fa2da9eda6 100644
--- a/framework/messages/ms/yii.php
+++ b/framework/messages/ms/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/nb-NO/yii.php b/framework/messages/nb-NO/yii.php
index 7aebeffa60f..8edd70d2c0f 100644
--- a/framework/messages/nb-NO/yii.php
+++ b/framework/messages/nb-NO/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/nl/yii.php b/framework/messages/nl/yii.php
index a647a96df31..89d9403f8d1 100644
--- a/framework/messages/nl/yii.php
+++ b/framework/messages/nl/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/pl/yii.php b/framework/messages/pl/yii.php
index 53d609ba0b5..49972125bc8 100644
--- a/framework/messages/pl/yii.php
+++ b/framework/messages/pl/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/pt-BR/yii.php b/framework/messages/pt-BR/yii.php
index c71b5b4ac27..083cd109bd3 100644
--- a/framework/messages/pt-BR/yii.php
+++ b/framework/messages/pt-BR/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/pt/yii.php b/framework/messages/pt/yii.php
index 9cc4999d438..64e552b3f25 100644
--- a/framework/messages/pt/yii.php
+++ b/framework/messages/pt/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ro/yii.php b/framework/messages/ro/yii.php
index 7d62653f784..4268605ff72 100644
--- a/framework/messages/ro/yii.php
+++ b/framework/messages/ro/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/ru/yii.php b/framework/messages/ru/yii.php
index 44bced6a49d..e987ac21b6d 100644
--- a/framework/messages/ru/yii.php
+++ b/framework/messages/ru/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/sk/yii.php b/framework/messages/sk/yii.php
index 50ff8e981b2..20aa403344d 100644
--- a/framework/messages/sk/yii.php
+++ b/framework/messages/sk/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/sl/yii.php b/framework/messages/sl/yii.php
index 5b15a08321c..24c94838759 100644
--- a/framework/messages/sl/yii.php
+++ b/framework/messages/sl/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/sr-Latn/yii.php b/framework/messages/sr-Latn/yii.php
index 768dbd8eacd..e31c9c89243 100644
--- a/framework/messages/sr-Latn/yii.php
+++ b/framework/messages/sr-Latn/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/sr/yii.php b/framework/messages/sr/yii.php
index 7262ded5773..3206e8c296f 100644
--- a/framework/messages/sr/yii.php
+++ b/framework/messages/sr/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/sv/yii.php b/framework/messages/sv/yii.php
index 4be34190894..40843a887c2 100644
--- a/framework/messages/sv/yii.php
+++ b/framework/messages/sv/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/tg/yii.php b/framework/messages/tg/yii.php
index 7c9d9fc884e..1af97508acc 100644
--- a/framework/messages/tg/yii.php
+++ b/framework/messages/tg/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/th/yii.php b/framework/messages/th/yii.php
index 6ce740fde16..68e4035b2fe 100644
--- a/framework/messages/th/yii.php
+++ b/framework/messages/th/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
@@ -23,64 +24,64 @@
  * NOTE: this file must be saved in UTF-8 encoding.
  */
 return [
-    ' and ' => '',
-    '"{attribute}" does not support operator "{operator}".' => '',
+    ' and ' => ' และ ',
+    '"{attribute}" does not support operator "{operator}".' => '"{attribute}" ไม่สนับสนุนตัวดำเนินการ "{operator}"',
     '(not set)' => '(ไม่ได้ตั้ง)',
-    'Action not found.' => '',
-    'Aliases available: {aliases}' => '',
+    'Action not found.' => 'ไม่พบแอคชั่น',
+    'Aliases available: {aliases}' => 'Alias ที่ใช้ได้: {aliases}',
     'An internal server error occurred.' => 'เกิดข้อผิดพลาดภายในเซิร์ฟเวอร์',
     'Are you sure you want to delete this item?' => 'คุณแน่ใจหรือไม่ที่จะลบรายการนี้?',
-    'Condition for "{attribute}" should be either a value or valid operator specification.' => '',
+    'Condition for "{attribute}" should be either a value or valid operator specification.' => 'เงื่อนไขสำหรับ "{attribute}" ควรเป็นค่าหรือข้อกำหนดเฉพาะของตัวดำเนินการที่ถูกต้อง',
     'Delete' => 'ลบ',
     'Error' => 'ผิดพลาด',
-    'File upload failed.' => 'อัพโหลดไฟล์ล้มเหลว',
+    'File upload failed.' => 'อัพโหลดไฟล์ไม่สำเร็จ',
     'Home' => 'หน้าหลัก',
-    'Invalid data received for parameter "{param}".' => 'ค่าพารามิเตอร์ "{param}" ไม่ถูกต้อง',
-    'Login Required' => 'จำเป็นต้องเข้าสู่ระบบ',
-    'Missing required arguments: {params}' => 'อาร์กิวเมนต์ที่จำเป็นขาดหายไป: {params}',
-    'Missing required parameters: {params}' => 'พารามิเตอร์ที่จำเป็นขาดหายไป: {params}',
+    'Invalid data received for parameter "{param}".' => 'ข้อมูลสำหรับค่าพารามิเตอร์ "{param}" ที่ได้รับไม่ถูกต้อง',
+    'Login Required' => 'ต้องเข้าสู่ระบบก่อน',
+    'Missing required arguments: {params}' => 'ขาดอาร์กิวเมนต์ที่จำเป็น: {params}',
+    'Missing required parameters: {params}' => 'ขาดพารามิเตอร์ที่จำเป็น: {params}',
     'No' => 'ไม่',
     'No results found.' => 'ไม่พบผลลัพธ์',
-    'Only files with these MIME types are allowed: {mimeTypes}.' => 'เฉพาะไฟล์ที่มีชนิด MIME ต่อไปนี้ที่ได้รับการอนุญาต: {mimeTypes}',
-    'Only files with these extensions are allowed: {extensions}.' => 'เฉพาะไฟล์ที่มีนามสกุลต่อไปนี้ที่ได้รับอนุญาต: {extensions}',
-    'Operator "{operator}" must be used with a search attribute.' => '',
-    'Operator "{operator}" requires multiple operands.' => '',
-    'Options available: {options}' => '',
-    'Page not found.' => 'ไม่พบหน้า',
+    'Only files with these MIME types are allowed: {mimeTypes}.' => 'อนุญาตเฉพาะไฟล์ที่มีชนิด MIME ต่อไปนี้: {mimeTypes}',
+    'Only files with these extensions are allowed: {extensions}.' => 'อนุญาตเฉพาะไฟล์ที่มีนามสกุลต่อไปนี้: {extensions}',
+    'Operator "{operator}" must be used with a search attribute.' => 'ตัวดำเนินการ "{operator}" ต้องใช้กับแอตทริบิวต์สำหรับค้นหา',
+    'Operator "{operator}" requires multiple operands.' => 'ตัวดำเนินการ "{operator}" ต้องมีตัวถูกดำเนินการหลายตัว',
+    'Options available: {options}' => 'ตัวเลือกที่ใช้ได้: {options}',
+    'Page not found.' => 'ไม่พบหน้าที่ต้องการ',
     'Please fix the following errors:' => 'โปรดแก้ไขข้อผิดพลาดต่อไปนี้:',
     'Please upload a file.' => 'กรุณาอัพโหลดไฟล์',
-    'Showing <b>{begin, number}-{end, number}</b> of <b>{totalCount, number}</b> {totalCount, plural, one{item} other{items}}.' => 'แสดง <b>{begin, number} ถึง {end, number}</b> จาก <b>{totalCount, number}</b> ผลลัพธ์',
-    'The combination {values} of {attributes} has already been taken.' => '',
-    'The file "{file}" is not an image.' => 'ไฟล์ "{file}" ไม่ใช่รูปภาพ',
-    'The file "{file}" is too big. Its size cannot exceed {formattedLimit}.' => 'ไฟล์ "{file}" มีขนาดใหญ่ไป ไฟล์จะต้องมีขนาดไม่เกิน {formattedLimit}',
-    'The file "{file}" is too small. Its size cannot be smaller than {formattedLimit}.' => 'ไฟล์ "{file}" มีขนาดเล็กเกินไป ไฟล์จะต้องมีขนาดมากกว่า {formattedLimit}',
+    'Showing <b>{begin, number}-{end, number}</b> of <b>{totalCount, number}</b> {totalCount, plural, one{item} other{items}}.' => 'แสดง <b>{begin, number} ถึง {end, number}</b> จาก <b>{totalCount, number}</b> รายการ',
+    'The combination {values} of {attributes} has already been taken.' => 'กลุ่ม {values} ของ {attributes} ถูกใช้ไปแล้ว',
+    'The file "{file}" is not an image.' => 'ไฟล์ "{file}" ไม่ใช่ไฟล์รูปภาพ',
+    'The file "{file}" is too big. Its size cannot exceed {formattedLimit}.' => 'ไฟล์ "{file}" มีขนาดใหญ่เกินไป ไฟล์ต้องมีขนาดไม่เกิน {formattedLimit}',
+    'The file "{file}" is too small. Its size cannot be smaller than {formattedLimit}.' => 'ไฟล์ "{file}" มีขนาดเล็กเกินไป ไฟล์ต้องมีขนาดมากกว่า {formattedLimit}',
     'The format of {attribute} is invalid.' => 'รูปแบบ {attribute} ไม่ถูกต้อง',
-    'The format of {filter} is invalid.' => '',
-    'The image "{file}" is too large. The height cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'รูปภาพ "{file}" ใหญ่เกินไป ความสูงต้องน้อยกว่า {limit, number} พิกเซล',
-    'The image "{file}" is too large. The width cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'รูปภาพ "{file}" ใหญ่เกินไป ความกว้างต้องน้อยกว่า {limit, number} พิกเซล',
-    'The image "{file}" is too small. The height cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'รูปภาพ "{file}" เล็กเกินไป ความสูงต้องมากว่า {limit, number} พิกเซล',
-    'The image "{file}" is too small. The width cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'รูปภาพ "{file}" เล็กเกินไป ความกว้างต้องมากกว่า {limit, number} พิกเซล',
-    'The requested view "{name}" was not found.' => 'ไม่พบ "{name}" ในการเรียกใช้',
-    'The verification code is incorrect.' => 'รหัสการยืนยันไม่ถูกต้อง',
-    'Total <b>{count, number}</b> {count, plural, one{item} other{items}}.' => 'ทั้งหมด <b>{count, number}</b> ผลลัพธ์',
-    'Unable to verify your data submission.' => 'ไม่สามารถตรวจสอบการส่งข้อมูลของคุณ',
-    'Unknown alias: -{name}' => '',
-    'Unknown filter attribute "{attribute}"' => '',
-    'Unknown option: --{name}' => 'ไม่รู้จักตัวเลือก: --{name}',
+    'The format of {filter} is invalid.' => 'รูปแบบ {filter} ไม่ถูกต้อง',
+    'The image "{file}" is too large. The height cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'ไฟล์รูปภาพ "{file}" มีขนาดใหญ่เกินไป ความสูงของรูปภาพต้องไม่เกิน {limit, number} พิกเซล',
+    'The image "{file}" is too large. The width cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'ไฟล์รูปภาพ "{file}" มีขนาดใหญ่เกินไป ความกว้างของรูปภาพต้องไม่เกิน {limit, number} พิกเซล',
+    'The image "{file}" is too small. The height cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'ไฟล์รูปภาพ "{file}" มีขนาดเล็กเกินไป ความสูงของรูปภาพต้องมากว่า {limit, number} พิกเซล',
+    'The image "{file}" is too small. The width cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'ไฟล์รูปภาพ "{file}" มีขนาดเล็กเกินไป ความกว้างของรูปภาพต้องมากกว่า {limit, number} พิกเซล',
+    'The requested view "{name}" was not found.' => 'ไม่พบวิว "{name}" ที่เรียกใช้',
+    'The verification code is incorrect.' => 'รหัสยืนยันไม่ถูกต้อง',
+    'Total <b>{count, number}</b> {count, plural, one{item} other{items}}.' => 'ทั้งหมด <b>{count, number}</b> รายการ',
+    'Unable to verify your data submission.' => 'ไม่สามารถตรวจสอบยืนยันข้อมูลที่คุณส่งได้',
+    'Unknown alias: -{name}' => 'Alias ที่ไม่รู้จัก: -{name}',
+    'Unknown filter attribute "{attribute}"' => 'แอตทริบิวต์ฟิลเตอร์ที่ไม่รู้จัก: "{attribute}"',
+    'Unknown option: --{name}' => 'ตัวเลือกที่ไม่รู้จัก: --{name}',
     'Update' => 'ปรับปรุง',
     'View' => 'ดู',
     'Yes' => 'ใช่',
     'You are not allowed to perform this action.' => 'คุณไม่ได้รับอนุญาตให้ดำเนินการนี้',
-    'You can upload at most {limit, number} {limit, plural, one{file} other{files}}.' => 'คุณสามารถอัพโหลดมากที่สุด {limit, number} ไฟล์',
-    'You should upload at least {limit, number} {limit, plural, one{file} other{files}}.' => '',
+    'You can upload at most {limit, number} {limit, plural, one{file} other{files}}.' => 'คุณสามารถอัพโหลดไฟล์ได้ไม่เกิน {limit, number} ไฟล์',
+    'You should upload at least {limit, number} {limit, plural, one{file} other{files}}.' => 'คุณควรอัพโหลดไฟล์อย่างน้อย {limit, number} ไฟล์',
     'in {delta, plural, =1{a day} other{# days}}' => 'ใน {delta} วัน',
     'in {delta, plural, =1{a minute} other{# minutes}}' => 'ใน {delta} นาที',
     'in {delta, plural, =1{a month} other{# months}}' => 'ใน {delta} เดือน',
     'in {delta, plural, =1{a second} other{# seconds}}' => 'ใน {delta} วินาที',
     'in {delta, plural, =1{a year} other{# years}}' => 'ใน {delta} ปี',
     'in {delta, plural, =1{an hour} other{# hours}}' => 'ใน {delta} ชั่วโมง',
-    'just now' => 'เมื่อสักครู่นี้',
-    'the input value' => 'ค่าป้อนที่เข้ามา',
+    'just now' => 'เมื่อสักครู่',
+    'the input value' => 'ค่าที่ป้อน',
     '{attribute} "{value}" has already been taken.' => '{attribute} "{value}" ถูกใช้ไปแล้ว',
     '{attribute} cannot be blank.' => '{attribute}ต้องไม่ว่างเปล่า',
     '{attribute} contains wrong subnet mask.' => '{attribute}ไม่ใช่ซับเน็ตที่ถูกต้อง',
@@ -91,8 +92,8 @@
     '{attribute} must be "{requiredValue}".' => '{attribute}ต้องการ "{requiredValue}"',
     '{attribute} must be a number.' => '{attribute}ต้องเป็นตัวเลขเท่านั้น',
     '{attribute} must be a string.' => '{attribute}ต้องเป็นตัวอักขระเท่านั้น',
-    '{attribute} must be a valid IP address.' => '{attribute}ต้องเป็นที่อยู่ไอพีที่ถูกต้อง',
-    '{attribute} must be an IP address with specified subnet.' => '{attribute}ต้องเป็นที่อยู่ไอพีกับซับเน็ตที่ระบุ',
+    '{attribute} must be a valid IP address.' => '{attribute}ต้องเป็นที่อยู่ IP ที่ถูกต้อง',
+    '{attribute} must be an IP address with specified subnet.' => '{attribute}ต้องเป็นที่อยู่ IP ตามซับเน็ตที่ระบุ',
     '{attribute} must be an integer.' => '{attribute}ต้องเป็นจำนวนเต็มเท่านั้น',
     '{attribute} must be either "{true}" or "{false}".' => '{attribute}ต้องเป็น "{true}" หรือ "{false}"',
     '{attribute} must be equal to "{compareValueOrAttribute}".' => '{attribute}ต้องเหมือนกับ "{compareValueOrAttribute}"',
@@ -102,14 +103,14 @@
     '{attribute} must be less than or equal to "{compareValueOrAttribute}".' => '{attribute}ต้องน้อยกว่าหรือเท่ากับ "{compareValueOrAttribute}"',
     '{attribute} must be no greater than {max}.' => '{attribute}ต้องไม่มากกว่า {max}.',
     '{attribute} must be no less than {min}.' => '{attribute}ต้องไม่น้อยกว่า {min}',
-    '{attribute} must not be a subnet.' => '{attribute}ต้องไม่ใช่ซับเน็ต',
-    '{attribute} must not be an IPv4 address.' => '{attribute}ต้องไม่ใช่ที่อยู่ไอพีรุ่น 4',
-    '{attribute} must not be an IPv6 address.' => '{attribute}ต้องไม่ใช่ที่อยู่ไอพีรุ่น 6',
+    '{attribute} must not be a subnet.' => '{attribute}ต้องไม่เป็นซับเน็ต',
+    '{attribute} must not be an IPv4 address.' => '{attribute}ต้องไม่เป็นที่อยู่ IPv4',
+    '{attribute} must not be an IPv6 address.' => '{attribute}ต้องไม่เป็นที่อยู่ IPv6',
     '{attribute} must not be equal to "{compareValueOrAttribute}".' => '{attribute}ต้องมีค่าไม่เหมือนกับ "{compareValueOrAttribute}"',
-    '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.' => '{attribute}ควรประกอบด้วยอักขระอย่างน้อย {min, number} อักขระ',
-    '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.' => '{attribute}ควรประกอบด้วยอักขระอย่างมาก {max, number} อักขระ',
-    '{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.' => '{attribute}ควรประกอบด้วย {length, number} อักขระ',
-    '{compareAttribute} is invalid.' => '',
+    '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.' => '{attribute}ควรประกอบด้วยอักขระอย่างน้อย {min, number} ตัว',
+    '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.' => '{attribute}ควรประกอบด้วยอักขระไม่เกิน {max, number} ตัว',
+    '{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.' => '{attribute}ควรประกอบด้วยอักขระ {length, number} ตัว',
+    '{compareAttribute} is invalid.' => '{compareAttribute} ไม่ถูกต้อง',
     '{delta, plural, =1{1 day} other{# days}}' => '{delta} วัน',
     '{delta, plural, =1{1 hour} other{# hours}}' => '{delta} ชั่วโมง',
     '{delta, plural, =1{1 minute} other{# minutes}}' => '{delta} นาที',
@@ -133,15 +134,15 @@
     '{nFormatted} TB' => '',
     '{nFormatted} TiB' => '',
     '{nFormatted} kB' => '',
-    '{nFormatted} {n, plural, =1{byte} other{bytes}}' => '',
-    '{nFormatted} {n, plural, =1{gibibyte} other{gibibytes}}' => '',
-    '{nFormatted} {n, plural, =1{gigabyte} other{gigabytes}}' => '',
-    '{nFormatted} {n, plural, =1{kibibyte} other{kibibytes}}' => '',
-    '{nFormatted} {n, plural, =1{kilobyte} other{kilobytes}}' => '',
-    '{nFormatted} {n, plural, =1{mebibyte} other{mebibytes}}' => '',
-    '{nFormatted} {n, plural, =1{megabyte} other{megabytes}}' => '',
-    '{nFormatted} {n, plural, =1{pebibyte} other{pebibytes}}' => '',
-    '{nFormatted} {n, plural, =1{petabyte} other{petabytes}}' => '',
-    '{nFormatted} {n, plural, =1{tebibyte} other{tebibytes}}' => '',
-    '{nFormatted} {n, plural, =1{terabyte} other{terabytes}}' => '',
+    '{nFormatted} {n, plural, =1{byte} other{bytes}}' => '{nFormatted} ไบต์',
+    '{nFormatted} {n, plural, =1{gibibyte} other{gibibytes}}' => '{nFormatted} จิบิไบต์',
+    '{nFormatted} {n, plural, =1{gigabyte} other{gigabytes}}' => '{nFormatted} จิกะไบต์',
+    '{nFormatted} {n, plural, =1{kibibyte} other{kibibytes}}' => '{nFormatted} กิบิไบต์',
+    '{nFormatted} {n, plural, =1{kilobyte} other{kilobytes}}' => '{nFormatted} กิโลไบต์',
+    '{nFormatted} {n, plural, =1{mebibyte} other{mebibytes}}' => '{nFormatted} เมบิไบต์',
+    '{nFormatted} {n, plural, =1{megabyte} other{megabytes}}' => '{nFormatted} เมกะไบต์',
+    '{nFormatted} {n, plural, =1{pebibyte} other{pebibytes}}' => '{nFormatted} เพบิไบต์',
+    '{nFormatted} {n, plural, =1{petabyte} other{petabytes}}' => '{nFormatted} เพตะไบต์',
+    '{nFormatted} {n, plural, =1{tebibyte} other{tebibytes}}' => '{nFormatted} เทบิไบต์',
+    '{nFormatted} {n, plural, =1{terabyte} other{terabytes}}' => '{nFormatted} เทระไบต์',
 ];
diff --git a/framework/messages/tr/yii.php b/framework/messages/tr/yii.php
index f17530b26ca..e3d134dbc5b 100644
--- a/framework/messages/tr/yii.php
+++ b/framework/messages/tr/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/uk/yii.php b/framework/messages/uk/yii.php
index 1a61ec73c2b..5a668c10865 100644
--- a/framework/messages/uk/yii.php
+++ b/framework/messages/uk/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/uz-Cy/yii.php b/framework/messages/uz-Cy/yii.php
index c7ae1e73d88..05320d6958a 100644
--- a/framework/messages/uz-Cy/yii.php
+++ b/framework/messages/uz-Cy/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
@@ -67,7 +68,7 @@
     'Unknown alias: -{name}' => '',
     'Unknown filter attribute "{attribute}"' => '',
     'Unknown option: --{name}' => 'Ноаниқ танлов: --{name}',
-    'Update' => 'Таҳририлаш',
+    'Update' => 'Таҳрирлаш',
     'View' => 'Кўриш',
     'Yes' => 'Ҳа',
     'You are not allowed to perform this action.' => 'Сизга ушбу амални бажаришга руҳсат берилмаган.',
diff --git a/framework/messages/uz/yii.php b/framework/messages/uz/yii.php
index cf1a2f612f3..a17617bf489 100644
--- a/framework/messages/uz/yii.php
+++ b/framework/messages/uz/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/vi/yii.php b/framework/messages/vi/yii.php
index 947442e6d21..21e79213c69 100644
--- a/framework/messages/vi/yii.php
+++ b/framework/messages/vi/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/zh-TW/yii.php b/framework/messages/zh-TW/yii.php
index c9bc82152c1..ff206fe66e9 100644
--- a/framework/messages/zh-TW/yii.php
+++ b/framework/messages/zh-TW/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/messages/zh/yii.php b/framework/messages/zh/yii.php
index 7f1f3de35d9..3750c81093f 100644
--- a/framework/messages/zh/yii.php
+++ b/framework/messages/zh/yii.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/mutex/MysqlMutex.php b/framework/mutex/MysqlMutex.php
index d7716e8c64e..66e651524f6 100644
--- a/framework/mutex/MysqlMutex.php
+++ b/framework/mutex/MysqlMutex.php
@@ -109,7 +109,7 @@ protected function releaseLock($name)
     protected function prepareName()
     {
         $params = [];
-        $expression = "SUBSTRING(CONCAT(:prefix, :name), 1, 64)";
+        $expression = 'SUBSTRING(CONCAT(:prefix, :name), 1, 64)';
         if ($this->keyPrefix instanceof Expression) {
             $expression = strtr($expression, [':prefix' => $this->keyPrefix->expression]);
             $params = $this->keyPrefix->params;
diff --git a/framework/rbac/Assignment.php b/framework/rbac/Assignment.php
index 21e2ad03bcd..db299813eec 100644
--- a/framework/rbac/Assignment.php
+++ b/framework/rbac/Assignment.php
@@ -7,7 +7,6 @@
 
 namespace yii\rbac;
 
-use Yii;
 use yii\base\BaseObject;
 
 /**
diff --git a/framework/rbac/migrations/m140506_102106_rbac_init.php b/framework/rbac/migrations/m140506_102106_rbac_init.php
index 5ce63824d10..14a80393500 100644
--- a/framework/rbac/migrations/m140506_102106_rbac_init.php
+++ b/framework/rbac/migrations/m140506_102106_rbac_init.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/rbac/migrations/m170907_052038_rbac_add_index_on_auth_assignment_user_id.php b/framework/rbac/migrations/m170907_052038_rbac_add_index_on_auth_assignment_user_id.php
index 4fee2611bce..ccdb2aba2dc 100644
--- a/framework/rbac/migrations/m170907_052038_rbac_add_index_on_auth_assignment_user_id.php
+++ b/framework/rbac/migrations/m170907_052038_rbac_add_index_on_auth_assignment_user_id.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/rbac/migrations/m180523_151638_rbac_updates_indexes_without_prefix.php b/framework/rbac/migrations/m180523_151638_rbac_updates_indexes_without_prefix.php
index b7278be7628..d295f0d420c 100644
--- a/framework/rbac/migrations/m180523_151638_rbac_updates_indexes_without_prefix.php
+++ b/framework/rbac/migrations/m180523_151638_rbac_updates_indexes_without_prefix.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/rbac/migrations/m200409_110543_rbac_update_mssql_trigger.php b/framework/rbac/migrations/m200409_110543_rbac_update_mssql_trigger.php
index 9b808682134..b157017bdda 100644
--- a/framework/rbac/migrations/m200409_110543_rbac_update_mssql_trigger.php
+++ b/framework/rbac/migrations/m200409_110543_rbac_update_mssql_trigger.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
@@ -41,8 +42,8 @@ protected function findForeignKeyName($table, $column, $referenceTable, $referen
             ->from(['fkc' => 'sys.foreign_key_columns'])
             ->innerJoin(['c' => 'sys.columns'], 'fkc.parent_object_id = c.object_id AND fkc.parent_column_id = c.column_id')
             ->innerJoin(['r' => 'sys.columns'], 'fkc.referenced_object_id = r.object_id AND fkc.referenced_column_id = r.column_id')
-            ->andWhere('fkc.parent_object_id=OBJECT_ID(:fkc_parent_object_id)',[':fkc_parent_object_id' => $this->db->schema->getRawTableName($table)])
-            ->andWhere('fkc.referenced_object_id=OBJECT_ID(:fkc_referenced_object_id)',[':fkc_referenced_object_id' => $this->db->schema->getRawTableName($referenceTable)])
+            ->andWhere('fkc.parent_object_id=OBJECT_ID(:fkc_parent_object_id)', [':fkc_parent_object_id' => $this->db->schema->getRawTableName($table)])
+            ->andWhere('fkc.referenced_object_id=OBJECT_ID(:fkc_referenced_object_id)', [':fkc_referenced_object_id' => $this->db->schema->getRawTableName($referenceTable)])
             ->andWhere(['c.name' => $column])
             ->andWhere(['r.name' => $referenceColumn])
             ->scalar($this->db);
@@ -77,8 +78,7 @@ public function up()
             BEGIN
                   DELETE FROM {$schema}.{$authManager->itemChildTable} WHERE parent IN (SELECT name FROM deleted) OR child IN (SELECT name FROM deleted);
                   DELETE FROM {$schema}.{$authManager->itemTable} WHERE name IN (SELECT name FROM deleted);
-            END;"
-            );
+            END;");
 
             $foreignKey = $this->findForeignKeyName($authManager->itemChildTable, 'child', $authManager->itemTable, 'name');
             $this->execute("CREATE TRIGGER {$schema}.trigger_update_{$triggerSuffix}
@@ -106,8 +106,7 @@ public function up()
                 BEGIN
                     ALTER TABLE {$authManager->itemChildTable} CHECK CONSTRAINT {$foreignKey};
                 END
-            END;"
-            );
+            END;");
         }
     }
 
diff --git a/framework/requirements/requirements.php b/framework/requirements/requirements.php
index d065f6363bc..1bf372aee59 100644
--- a/framework/requirements/requirements.php
+++ b/framework/requirements/requirements.php
@@ -15,9 +15,9 @@
     array(
         'name' => 'PHP version',
         'mandatory' => true,
-        'condition' => version_compare(PHP_VERSION, '5.4.0', '>='),
+        'condition' => version_compare(PHP_VERSION, '7.3.0', '>='),
         'by' => '<a href="https://www.yiiframework.com">Yii Framework</a>',
-        'memo' => 'PHP 5.4.0 or higher is required.',
+        'memo' => 'PHP 7.3.0 or higher is required.',
     ),
     array(
         'name' => 'Reflection extension',
diff --git a/framework/rest/Action.php b/framework/rest/Action.php
index c700d665c8f..49cc4236f66 100644
--- a/framework/rest/Action.php
+++ b/framework/rest/Action.php
@@ -7,7 +7,6 @@
 
 namespace yii\rest;
 
-use Yii;
 use yii\base\InvalidConfigException;
 use yii\db\ActiveRecordInterface;
 use yii\web\NotFoundHttpException;
diff --git a/framework/rest/Serializer.php b/framework/rest/Serializer.php
index eedd96c2cc6..edc689e94e8 100644
--- a/framework/rest/Serializer.php
+++ b/framework/rest/Serializer.php
@@ -188,12 +188,6 @@ protected function getRequestedFields()
      */
     protected function serializeDataProvider($dataProvider)
     {
-        if (($pagination = $dataProvider->getPagination()) !== false) {
-            $this->addPaginationHeaders($pagination);
-        }
-        if ($this->request->getIsHead()) {
-            return null;
-        }
         if ($this->preserveKeys) {
             $models = $dataProvider->getModels();
         } else {
@@ -201,7 +195,13 @@ protected function serializeDataProvider($dataProvider)
         }
         $models = $this->serializeModels($models);
 
-        if ($this->collectionEnvelope === null) {
+        if (($pagination = $dataProvider->getPagination()) !== false) {
+            $this->addPaginationHeaders($pagination);
+        }
+
+        if ($this->request->getIsHead()) {
+            return null;
+        } elseif ($this->collectionEnvelope === null) {
             return $models;
         }
 
diff --git a/framework/rest/ViewAction.php b/framework/rest/ViewAction.php
index dbe9bb2ac92..901fa6beece 100644
--- a/framework/rest/ViewAction.php
+++ b/framework/rest/ViewAction.php
@@ -7,8 +7,6 @@
 
 namespace yii\rest;
 
-use Yii;
-
 /**
  * ViewAction implements the API endpoint for returning the detailed information about a model.
  *
diff --git a/framework/test/ActiveFixture.php b/framework/test/ActiveFixture.php
index 7517430e7a8..208debbd9ff 100644
--- a/framework/test/ActiveFixture.php
+++ b/framework/test/ActiveFixture.php
@@ -100,7 +100,6 @@ public function load()
     protected function getData()
     {
         if ($this->dataFile === null) {
-
             if ($this->dataDirectory !== null) {
                 $dataFile = $this->getTableSchema()->fullName . '.php';
             } else {
diff --git a/framework/test/FileFixtureTrait.php b/framework/test/FileFixtureTrait.php
index 15c23948751..14c07eb4a10 100644
--- a/framework/test/FileFixtureTrait.php
+++ b/framework/test/FileFixtureTrait.php
@@ -60,5 +60,4 @@ protected function loadData($file, $throwException = true)
 
         return [];
     }
-
 }
diff --git a/framework/test/InitDbFixture.php b/framework/test/InitDbFixture.php
index f18bd16b97a..6007b1a0ebd 100644
--- a/framework/test/InitDbFixture.php
+++ b/framework/test/InitDbFixture.php
@@ -95,6 +95,11 @@ public function checkIntegrity($check)
         if (!$this->db instanceof \yii\db\Connection) {
             return;
         }
+
+        if ($this->db->getDriverName() === 'oci') {
+            return;
+        }
+
         foreach ($this->schemas as $schema) {
             $this->db->createCommand()->checkIntegrity($check, $schema)->execute();
         }
diff --git a/framework/validators/ExistValidator.php b/framework/validators/ExistValidator.php
index faea7b55d47..738d938cb70 100644
--- a/framework/validators/ExistValidator.php
+++ b/framework/validators/ExistValidator.php
@@ -133,7 +133,7 @@ private function checkTargetRelationExistence($model, $attribute)
 
         $connection = $model::getDb();
         if ($this->forceMasterDb && method_exists($connection, 'useMaster')) {
-            $exists = $connection->useMaster(function() use ($relationQuery) {
+            $exists = $connection->useMaster(function () use ($relationQuery) {
                 return $relationQuery->exists();
             });
         } else {
@@ -328,7 +328,8 @@ private function applyTableAlias($query, $conditions, $alias = null)
                 $prefixedColumn = "{$alias}.[[" . preg_replace(
                     '/^' . preg_quote($alias, '/') . '\.(.*)$/',
                     '$1',
-                    $columnName) . ']]';
+                    $columnName
+                ) . ']]';
             } else {
                 // there is an expression, can't prefix it reliably
                 $prefixedColumn = $columnName;
diff --git a/framework/validators/FileValidator.php b/framework/validators/FileValidator.php
index 28d97f9c972..28a2df0fa32 100644
--- a/framework/validators/FileValidator.php
+++ b/framework/validators/FileValidator.php
@@ -207,40 +207,23 @@ public function init()
      */
     public function validateAttribute($model, $attribute)
     {
-        if ($this->maxFiles != 1 || $this->minFiles > 1) {
-            $rawFiles = $model->$attribute;
-            if (!is_array($rawFiles)) {
-                $this->addError($model, $attribute, $this->uploadRequired);
+        $files = $this->filterFiles(is_array($model->$attribute) ? $model->$attribute : [$model->$attribute]);
+        $filesCount = count($files);
+        if ($filesCount === 0) {
+            $this->addError($model, $attribute, $this->uploadRequired);
 
-                return;
-            }
-
-            $files = $this->filterFiles($rawFiles);
-            $model->$attribute = $files;
-
-            if (empty($files)) {
-                $this->addError($model, $attribute, $this->uploadRequired);
-
-                return;
-            }
-
-            $filesCount = count($files);
-            if ($this->maxFiles && $filesCount > $this->maxFiles) {
-                $this->addError($model, $attribute, $this->tooMany, ['limit' => $this->maxFiles]);
-            }
+            return;
+        }
 
-            if ($this->minFiles && $this->minFiles > $filesCount) {
-                $this->addError($model, $attribute, $this->tooFew, ['limit' => $this->minFiles]);
-            }
+        if ($this->maxFiles > 0 && $filesCount > $this->maxFiles) {
+            $this->addError($model, $attribute, $this->tooMany, ['limit' => $this->maxFiles]);
+        }
+        if ($this->minFiles > 0 && $this->minFiles > $filesCount) {
+            $this->addError($model, $attribute, $this->tooFew, ['limit' => $this->minFiles]);
+        }
 
-            foreach ($files as $file) {
-                $result = $this->validateValue($file);
-                if (!empty($result)) {
-                    $this->addError($model, $attribute, $result[0], $result[1]);
-                }
-            }
-        } else {
-            $result = $this->validateValue($model->$attribute);
+        foreach ($files as $file) {
+            $result = $this->validateValue($file);
             if (!empty($result)) {
                 $this->addError($model, $attribute, $result[0], $result[1]);
             }
diff --git a/framework/validators/RangeValidator.php b/framework/validators/RangeValidator.php
index 8265d0511ba..e58ea601096 100644
--- a/framework/validators/RangeValidator.php
+++ b/framework/validators/RangeValidator.php
@@ -57,7 +57,8 @@ class RangeValidator extends Validator
     public function init()
     {
         parent::init();
-        if (!is_array($this->range)
+        if (
+            !is_array($this->range)
             && !($this->range instanceof \Closure)
             && !($this->range instanceof \Traversable)
         ) {
@@ -75,7 +76,8 @@ protected function validateValue($value)
     {
         $in = false;
 
-        if ($this->allowArray
+        if (
+            $this->allowArray
             && ($value instanceof \Traversable || is_array($value))
             && ArrayHelper::isSubset($value, $this->range, $this->strict)
         ) {
diff --git a/framework/views/addColumnMigration.php b/framework/views/addColumnMigration.php
index e3a781a22a6..9e84d2283bb 100644
--- a/framework/views/addColumnMigration.php
+++ b/framework/views/addColumnMigration.php
@@ -1,9 +1,11 @@
 <?php
+
 /**
  * This view is used by console/controllers/MigrateController.php.
  *
  * The following variables are available in this view:
  */
+
 /* @var $className string the new migration class name without namespace */
 /* @var $namespace string the new migration class namespace */
 /* @var $table string the name table */
diff --git a/framework/views/createJunctionMigration.php b/framework/views/createJunctionMigration.php
index fa62b251636..7fddf3254f9 100644
--- a/framework/views/createJunctionMigration.php
+++ b/framework/views/createJunctionMigration.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * This view is used by console/controllers/MigrateController.php.
  *
@@ -6,6 +7,7 @@
  * @since 2.0.7
  * @deprecated since 2.0.8
  */
+
 /* @var $className string the new migration class name without namespace */
 /* @var $namespace string the new migration class namespace */
 /* @var $table string the name table */
diff --git a/framework/views/createTableMigration.php b/framework/views/createTableMigration.php
index dceb6b26495..7f36e95be8c 100644
--- a/framework/views/createTableMigration.php
+++ b/framework/views/createTableMigration.php
@@ -1,9 +1,11 @@
 <?php
+
 /**
  * This view is used by console/controllers/MigrateController.php.
  *
  * The following variables are available in this view:
  */
+
 /* @var $className string the new migration class name without namespace */
 /* @var $namespace string the new migration class namespace */
 /* @var $table string the name table */
diff --git a/framework/views/dropColumnMigration.php b/framework/views/dropColumnMigration.php
index b91f5938a68..45d90b8a245 100644
--- a/framework/views/dropColumnMigration.php
+++ b/framework/views/dropColumnMigration.php
@@ -1,9 +1,11 @@
 <?php
+
 /**
  * This view is used by console/controllers/MigrateController.php.
  *
  * The following variables are available in this view:
  */
+
 /* @var $className string the new migration class name without namespace */
 /* @var $namespace string the new migration class namespace */
 /* @var $table string the name table */
diff --git a/framework/views/dropTableMigration.php b/framework/views/dropTableMigration.php
index a2151106d3a..3f8d64b04ff 100644
--- a/framework/views/dropTableMigration.php
+++ b/framework/views/dropTableMigration.php
@@ -1,9 +1,11 @@
 <?php
+
 /**
  * This view is used by console/controllers/MigrateController.php.
  *
  * The following variables are available in this view:
  */
+
 /* @var $className string the new migration class name without namespace */
 /* @var $namespace string the new migration class namespace */
 /* @var $table string the name table */
diff --git a/framework/views/migration.php b/framework/views/migration.php
index 1a1e3bb402b..9c5c7cf9be8 100644
--- a/framework/views/migration.php
+++ b/framework/views/migration.php
@@ -1,9 +1,11 @@
 <?php
+
 /**
  * This view is used by console/controllers/MigrateController.php.
  *
  * The following variables are available in this view:
  */
+
 /* @var $className string the new migration class name without namespace */
 /* @var $namespace string the new migration class namespace */
 
diff --git a/framework/web/CacheSession.php b/framework/web/CacheSession.php
index 860a91d5803..5763a854096 100644
--- a/framework/web/CacheSession.php
+++ b/framework/web/CacheSession.php
@@ -7,7 +7,6 @@
 
 namespace yii\web;
 
-use Yii;
 use yii\caching\CacheInterface;
 use yii\di\Instance;
 
diff --git a/framework/web/Controller.php b/framework/web/Controller.php
index 86be85819f0..2177a7f0bfc 100644
--- a/framework/web/Controller.php
+++ b/framework/web/Controller.php
@@ -17,6 +17,10 @@
  *
  * For more details and usage information on Controller, see the [guide article on controllers](guide:structure-controllers).
  *
+ * @property Request $request The request object.
+ * @property Response $response The response object.
+ * @property View $view The view object that can be used to render views or view files.
+ *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
  */
@@ -129,11 +133,7 @@ public function bindActionParams($action, $params)
             $name = $param->getName();
             if (array_key_exists($name, $params)) {
                 $isValid = true;
-                if (PHP_VERSION_ID >= 80000) {
-                    $isArray = ($type = $param->getType()) instanceof \ReflectionNamedType && $type->getName() === 'array';
-                } else {
-                    $isArray = $param->isArray();
-                }
+                $isArray = ($type = $param->getType()) instanceof \ReflectionNamedType && $type->getName() === 'array';
                 if ($isArray) {
                     $params[$name] = (array)$params[$name];
                 } elseif (is_array($params[$name])) {
diff --git a/framework/web/CookieCollection.php b/framework/web/CookieCollection.php
index 597fc2f5fd7..3791b545326 100644
--- a/framework/web/CookieCollection.php
+++ b/framework/web/CookieCollection.php
@@ -18,6 +18,7 @@
  * For more details and usage information on CookieCollection, see the [guide article on handling cookies](guide:runtime-sessions-cookies).
  *
  * @property-read int $count The number of cookies in the collection.
+ * @property-read ArrayIterator $iterator An iterator for traversing the cookies in the collection.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/framework/web/DbSession.php b/framework/web/DbSession.php
index 4d4e5030df2..7c7743b509d 100644
--- a/framework/web/DbSession.php
+++ b/framework/web/DbSession.php
@@ -133,7 +133,7 @@ public function regenerateID($deleteOldSession = false)
             return;
         }
 
-        $row = $this->db->useMaster(function() use ($oldID) {
+        $row = $this->db->useMaster(function () use ($oldID) {
             return (new Query())->from($this->sessionTable)
                ->where(['id' => $oldID])
                ->createCommand($this->db)
diff --git a/framework/web/ErrorHandler.php b/framework/web/ErrorHandler.php
index 3806c576ce9..570a84b41e0 100644
--- a/framework/web/ErrorHandler.php
+++ b/framework/web/ErrorHandler.php
@@ -180,7 +180,7 @@ protected function convertExceptionToArray($exception)
      */
     public function htmlEncode($text)
     {
-        return htmlspecialchars($text, ENT_NOQUOTES | ENT_SUBSTITUTE | ENT_HTML5, 'UTF-8');
+        return htmlspecialchars($text, ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML5, 'UTF-8');
     }
 
     /**
@@ -203,7 +203,7 @@ public function addTypeLinks($code)
         $url = null;
 
         $shouldGenerateLink = true;
-        if ($method !== null && substr_compare($method, '{closure}', -9) !== 0) {
+        if ($method !== null && strpos($method, '{closure') === false) {
             $reflection = new \ReflectionClass($class);
             if ($reflection->hasMethod($method)) {
                 $reflectionMethod = $reflection->getMethod($method);
diff --git a/framework/web/HeaderCollection.php b/framework/web/HeaderCollection.php
index 724e875bc69..64cae459b10 100644
--- a/framework/web/HeaderCollection.php
+++ b/framework/web/HeaderCollection.php
@@ -7,12 +7,14 @@
 
 namespace yii\web;
 
-use Yii;
 use yii\base\BaseObject;
 
 /**
  * HeaderCollection is used by [[Response]] to maintain the currently registered HTTP headers.
  *
+ * @property-read int $count The number of headers in the collection.
+ * @property-read \ArrayIterator $iterator An iterator for traversing the headers in the collection.
+ *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
  */
diff --git a/framework/web/JsonResponseFormatter.php b/framework/web/JsonResponseFormatter.php
index 6c7afba9180..5cb10d3ed42 100644
--- a/framework/web/JsonResponseFormatter.php
+++ b/framework/web/JsonResponseFormatter.php
@@ -145,7 +145,8 @@ protected function formatJson($response)
      */
     protected function formatJsonp($response)
     {
-        if (is_array($response->data)
+        if (
+            is_array($response->data)
             && isset($response->data['data'], $response->data['callback'])
         ) {
             $response->content = sprintf(
diff --git a/framework/web/Link.php b/framework/web/Link.php
index c64c34f81c5..3f90fc66a28 100644
--- a/framework/web/Link.php
+++ b/framework/web/Link.php
@@ -62,11 +62,10 @@ public static function serialize(array $links)
     {
         foreach ($links as $rel => $link) {
             if (is_array($link)) {
-                foreach ($link as $i => $l) {
-                    $link[$i] = $l instanceof self ? array_filter((array) $l) : ['href' => $l];
-                }
-                $links[$rel] = $link;
-            } elseif (!$link instanceof self) {
+                $links[$rel] = self::serialize($link);
+            } elseif ($link instanceof self) {
+                $links[$rel] = array_filter((array)$link);
+            } else {
                 $links[$rel] = ['href' => $link];
             }
         }
diff --git a/framework/web/Request.php b/framework/web/Request.php
index d87489ce389..270c9e796ff 100644
--- a/framework/web/Request.php
+++ b/framework/web/Request.php
@@ -963,7 +963,8 @@ protected function resolvePathInfo()
 
         // try to encode in UTF8 if not so
         // https://www.w3.org/International/questions/qa-forms-utf-8.en.html
-        if (!preg_match('%^(?:
+        if (
+            !preg_match('%^(?:
             [\x09\x0A\x0D\x20-\x7E]              # ASCII
             | [\xC2-\xDF][\x80-\xBF]             # non-overlong 2-byte
             | \xE0[\xA0-\xBF][\x80-\xBF]         # excluding overlongs
@@ -1001,6 +1002,8 @@ protected function resolvePathInfo()
      * @param string $s
      * @return string the UTF-8 translation of `s`.
      * @see https://github.com/symfony/polyfill-php72/blob/master/Php72.php#L24
+     * @phpcs:disable Generic.Formatting.DisallowMultipleStatements.SameLine
+     * @phpcs:disable Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore
      */
     private function utf8Encode($s)
     {
@@ -1197,11 +1200,13 @@ public function getUserAgent()
     protected function getUserIpFromIpHeaders()
     {
         $ip = $this->getSecureForwardedHeaderTrustedPart('for');
-        if ($ip !== null && preg_match(
-            '/^\[?(?P<ip>(?:(?:(?:[0-9a-f]{1,4}:){1,6}(?:[0-9a-f]{1,4})?(?:(?::[0-9a-f]{1,4}){1,6}))|(?:\d{1,3}\.){3}\d{1,3}))\]?(?::(?P<port>\d+))?$/',
-            $ip,
-            $matches
-        )) {
+        if (
+            $ip !== null && preg_match(
+                '/^\[?(?P<ip>(?:(?:(?:[0-9a-f]{1,4}:){1,6}(?:[0-9a-f]{1,4})?(?:(?::[0-9a-f]{1,4}){1,6}))|(?:\d{1,3}\.){3}\d{1,3}))\]?(?::(?P<port>\d+))?$/',
+                $ip,
+                $matches
+            )
+        ) {
             $ip = $this->getUserIpFromIpHeader($matches['ip']);
             if ($ip !== null) {
                 return $ip;
@@ -1291,7 +1296,7 @@ protected function getUserIpFromIpHeader($ips)
     public function getUserHost()
     {
         $userIp = $this->getUserIpFromIpHeaders();
-        if($userIp === null) {
+        if ($userIp === null) {
             return $this->getRemoteHost();
         }
         return gethostbyaddr($userIp);
@@ -1980,8 +1985,7 @@ protected function getSecureForwardedHeaderParts()
         preg_match_all('/(?:[^",]++|"[^"]++")+/', $forwarded, $forwardedElements);
 
         foreach ($forwardedElements[0] as $forwardedPairs) {
-            preg_match_all('/(?P<key>\w+)\s*=\s*(?:(?P<value>[^",;]*[^",;\s])|"(?P<value2>[^"]+)")/', $forwardedPairs,
-                $matches, PREG_SET_ORDER);
+            preg_match_all('/(?P<key>\w+)\s*=\s*(?:(?P<value>[^",;]*[^",;\s])|"(?P<value2>[^"]+)")/', $forwardedPairs, $matches, PREG_SET_ORDER);
             $this->_secureForwardedHeaderParts[] = array_reduce($matches, function ($carry, $item) {
                 $value = $item['value'];
                 if (isset($item['value2']) && $item['value2'] !== '') {
diff --git a/framework/web/Session.php b/framework/web/Session.php
index 40768924cf5..e9c3ebd5c48 100644
--- a/framework/web/Session.php
+++ b/framework/web/Session.php
@@ -57,6 +57,7 @@
  * @property bool $hasSessionId Whether the current request has sent the session ID.
  * @property string $id The current session ID.
  * @property-read bool $isActive Whether the session has started.
+ * @property-read SessionIterator $iterator An iterator for traversing the session variables.
  * @property string $name The current session name.
  * @property string $savePath The current session save path, defaults to '/tmp'.
  * @property int $timeout The number of seconds after which data will be seen as 'garbage' and cleaned up. The
@@ -76,11 +77,11 @@ class Session extends Component implements \IteratorAggregate, \ArrayAccess, \Co
      * @var string|null Holds the original session module (before a custom handler is registered) so that it can be
      * restored when a Session component without custom handler is used after one that has.
      */
-    static protected $_originalSessionModule = null;
+    protected static $_originalSessionModule = null;
     /**
      * Polyfill for ini directive session.use-strict-mode for PHP < 5.5.2.
      */
-    static private $_useStrictModePolyfill = false;
+    private static $_useStrictModePolyfill = false;
     /**
      * @var string the name of the session variable that stores the flash message data.
      */
@@ -104,7 +105,7 @@ class Session extends Component implements \IteratorAggregate, \ArrayAccess, \Co
     /**
      * @var array|null is used for saving session between recreations due to session parameters update.
      */
-    private $frozenSessionData;
+    private $_frozenSessionData;
 
 
     /**
@@ -398,7 +399,7 @@ public function getCookieParams()
      * of `session_get_cookie_params()`.
      * @param array $value cookie parameters, valid keys include: `lifetime`, `path`, `domain`, `secure` and `httponly`.
      * Starting with Yii 2.0.21 `sameSite` is also supported. It requires PHP version 7.3.0 or higher.
-     * For securtiy, an exception will be thrown if `sameSite` is set while using an unsupported version of PHP.
+     * For security, an exception will be thrown if `sameSite` is set while using an unsupported version of PHP.
      * To use this feature across different PHP versions check the version first. E.g.
      * ```php
      * [
@@ -433,7 +434,6 @@ private function setCookieParamsInternal()
                 }
                 session_set_cookie_params($data['lifetime'], $data['path'], $data['domain'], $data['secure'], $data['httponly']);
             }
-
         } else {
             throw new InvalidArgumentException('Please make sure cookieParams contains these elements: lifetime, path, domain, secure and httponly.');
         }
@@ -1016,7 +1016,7 @@ protected function freeze()
     {
         if ($this->getIsActive()) {
             if (isset($_SESSION)) {
-                $this->frozenSessionData = $_SESSION;
+                $this->_frozenSessionData = $_SESSION;
             }
             $this->close();
             Yii::info('Session frozen', __METHOD__);
@@ -1029,8 +1029,7 @@ protected function freeze()
      */
     protected function unfreeze()
     {
-        if (null !== $this->frozenSessionData) {
-
+        if (null !== $this->_frozenSessionData) {
             YII_DEBUG ? session_start() : @session_start();
 
             if ($this->getIsActive()) {
@@ -1041,8 +1040,8 @@ protected function unfreeze()
                 Yii::error($message, __METHOD__);
             }
 
-            $_SESSION = $this->frozenSessionData;
-            $this->frozenSessionData = null;
+            $_SESSION = $this->_frozenSessionData;
+            $this->_frozenSessionData = null;
         }
     }
 
diff --git a/framework/web/UrlManager.php b/framework/web/UrlManager.php
index 292c4bc3e70..71c38f85d49 100644
--- a/framework/web/UrlManager.php
+++ b/framework/web/UrlManager.php
@@ -413,7 +413,7 @@ public function createUrl($params)
         $anchor = isset($params['#']) ? '#' . $params['#'] : '';
         unset($params['#'], $params[$this->routeParam]);
 
-        $route = trim($params[0], '/');
+        $route = trim(isset($params[0]) ? $params[0] : '', '/');
         unset($params[0]);
 
         $baseUrl = $this->showScriptName || !$this->enablePrettyUrl ? $this->getScriptUrl() : $this->getBaseUrl();
diff --git a/framework/web/User.php b/framework/web/User.php
index 086b3c5dc63..7b075ed494b 100644
--- a/framework/web/User.php
+++ b/framework/web/User.php
@@ -445,7 +445,8 @@ public function loginRequired($checkAjax = true, $checkAcceptHeader = true)
     {
         $request = Yii::$app->getRequest();
         $canRedirect = !$checkAcceptHeader || $this->checkRedirectAcceptable();
-        if ($this->enableSession
+        if (
+            $this->enableSession
             && $request->getIsGet()
             && (!$checkAjax || !$request->getIsAjax())
             && $canRedirect
diff --git a/framework/web/View.php b/framework/web/View.php
index f2c19fc721f..04aa5069b7c 100644
--- a/framework/web/View.php
+++ b/framework/web/View.php
@@ -130,6 +130,11 @@ class View extends \yii\base\View
      * @see registerJsFile()
      */
     public $jsFiles = [];
+    /**
+     * @since 2.0.50
+     * @var array the script tag options.
+     */
+    public $scriptOptions = [];
 
     private $_assetManager;
 
diff --git a/framework/web/XmlResponseFormatter.php b/framework/web/XmlResponseFormatter.php
index 652bc9f442b..4fad5d589e8 100644
--- a/framework/web/XmlResponseFormatter.php
+++ b/framework/web/XmlResponseFormatter.php
@@ -108,7 +108,8 @@ public function format($response)
      */
     protected function buildXml($element, $data)
     {
-        if (is_array($data) ||
+        if (
+            is_array($data) ||
             ($data instanceof \Traversable && $this->useTraversableAsArray && !$data instanceof Arrayable)
         ) {
             foreach ($data as $name => $value) {
diff --git a/framework/web/migrations/m160313_153426_session_init.php b/framework/web/migrations/m160313_153426_session_init.php
index 2ff3499a1f1..3138c49f65f 100644
--- a/framework/web/migrations/m160313_153426_session_init.php
+++ b/framework/web/migrations/m160313_153426_session_init.php
@@ -1,4 +1,5 @@
 <?php
+
 /**
  * @link https://www.yiiframework.com/
  * @copyright Copyright (c) 2008 Yii Software LLC
diff --git a/framework/widgets/MaskedInput.php b/framework/widgets/MaskedInput.php
index 7513169e9b0..f7307986c0e 100644
--- a/framework/widgets/MaskedInput.php
+++ b/framework/widgets/MaskedInput.php
@@ -132,8 +132,8 @@ class MaskedInput extends InputWidget
     public function init()
     {
         parent::init();
-        if (empty($this->mask) && empty($this->clientOptions['alias'])) {
-            throw new InvalidConfigException("Either the 'mask' property or the 'clientOptions[\"alias\"]' property must be set.");
+        if (empty($this->mask) && empty($this->clientOptions['regex']) && empty($this->clientOptions['alias'])) {
+            throw new InvalidConfigException("Either the 'mask' property, 'clientOptions[\"regex\"]' or the 'clientOptions[\"alias\"]' property must be set.");
         }
     }
 
diff --git a/framework/widgets/Menu.php b/framework/widgets/Menu.php
index 025379796f1..d474ceb3a0e 100644
--- a/framework/widgets/Menu.php
+++ b/framework/widgets/Menu.php
@@ -23,7 +23,7 @@
  * Menu checks the current route and request parameters to toggle certain menu items
  * with active state.
  *
- * Note that Menu only renders the HTML tags about the menu. It does do any styling.
+ * Note that Menu only renders the HTML tags about the menu. It does not do any styling.
  * You are responsible to provide CSS styles to make it look like a real menu.
  *
  * The following example shows how to use Menu:
diff --git a/package.json b/package.json
index e102ef18079..5d78e345bbe 100644
--- a/package.json
+++ b/package.json
@@ -9,9 +9,9 @@
   "dependencies": {},
   "devDependencies": {
     "chai": "^3.5.0",
-    "jsdom": "11.11.0",
-    "leche": "^2.2.3",
-    "mocha": "^5.2.0",
+    "jsdom": "24.1.0",
+    "leche": "^2.3.0",
+    "mocha": "^6.2.3",
     "mocha-jsdom": "^2.0.0",
     "sinon": "^1.17.6"
   },
diff --git a/phpcs.xml.dist b/phpcs.xml.dist
new file mode 100644
index 00000000000..7462f8e658b
--- /dev/null
+++ b/phpcs.xml.dist
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ruleset name="Yii2">
+    <rule ref="vendor/yiisoft/yii2-coding-standards/Yii2">
+        <!-- Yii2 framework supports PHP 5.4, constant visibility was added in PHP 7.1 -->
+        <exclude name="PSR12.Properties.ConstantVisibility.NotFound"/>
+    </rule>
+
+    <!-- display progress -->
+    <arg value="p"/>
+    <!-- Show error codes -->
+    <arg value="s"/>
+    <arg name="colors"/>
+
+    <!-- generate relative paths -->
+    <arg name="basepath" value="."/>
+
+    <exclude-pattern>framework/views/*</exclude-pattern>
+</ruleset>
diff --git a/phpunit.xml.dist b/phpunit.xml.dist
index 2b9f7c6df55..9347786ca23 100644
--- a/phpunit.xml.dist
+++ b/phpunit.xml.dist
@@ -1,30 +1,35 @@
 <?xml version="1.0" encoding="utf-8"?>
-<phpunit bootstrap="./tests/bootstrap.php"
-		backupGlobals="true"
-		colors="true"
-		convertErrorsToExceptions="true"
-		convertNoticesToExceptions="true"
-		convertWarningsToExceptions="true"
-		stopOnFailure="false"
-		printerClass="yiiunit\ResultPrinter">
-		<testsuites>
-			<testsuite name="Yii Test Suite">
-				<directory>./tests</directory>
-			</testsuite>
-		</testsuites>
-		<filter>
-            <whitelist>
-                <directory suffix=".php">framework/</directory>
-            </whitelist>
-			<blacklist>
-				<file>framework/i18n/GettextFile.php</file>
-				<file>framework/web/ResponseFormatterInterface.php</file>
-				<file>framework/.phpstorm.meta.php</file>
-				<directory suffix="Exception.php">framework/base</directory>
-				<directory suffix=".php">framework/bootstrap</directory>
-			</blacklist>
-		</filter>
-        <listeners>
-            <listener class="JohnKary\PHPUnit\Listener\SpeedTrapListener" />
-        </listeners>
+<phpunit
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    backupGlobals="true"
+    bootstrap="./tests/bootstrap.php"
+    colors="true"
+	convertErrorsToExceptions="true"
+	convertNoticesToExceptions="true"
+	convertWarningsToExceptions="true"
+    executionOrder="default"
+    failOnRisky="true"
+    failOnWarning="true"
+    printerClass="yiiunit\ResultPrinter"
+    stopOnFailure="false"
+>
+    <testsuites>
+		<testsuite name="Yii Test Suite">
+			<directory>./tests</directory>
+		</testsuite>
+	</testsuites>
+
+	<coverage>
+        <include>
+            <directory suffix=".php">framework/</directory>
+        </include>
+		<exclude>
+			<file>framework/.phpstorm.meta.php</file>
+			<file>framework/i18n/GettextFile.php</file>
+			<file>framework/web/ResponseFormatterInterface.php</file>
+			<directory suffix=".php">framework/bootstrap</directory>
+			<directory suffix="Exception.php">framework/base</directory>
+            <directory suffix=".php">framework/requirements</directory>
+		</exclude>
+	</coverage>
 </phpunit>
diff --git a/tests/IsOneOfAssert.php b/tests/IsOneOfAssert.php
index 5c630b7d041..36615a70b10 100644
--- a/tests/IsOneOfAssert.php
+++ b/tests/IsOneOfAssert.php
@@ -14,37 +14,33 @@
  */
 class IsOneOfAssert extends \PHPUnit\Framework\Constraint\Constraint
 {
-    private $allowedValues;
-
     /**
-     * IsOneOfAssert constructor.
-     * @param array $allowedValues
+     * @var array the expected values
      */
+    private $allowedValues = [];
+
     public function __construct(array $allowedValues)
     {
-        parent::__construct();
         $this->allowedValues = $allowedValues;
     }
 
-
     /**
      * Returns a string representation of the object.
-     *
-     * @return string
      */
-    public function toString()
+    public function toString(): string
     {
-        $allowedValues = array_map(function ($value) {
-            return VarDumper::dumpAsString($value);
-        }, $this->allowedValues);
+        $allowedValues = [];
+
+        foreach ($this->allowedValues as $value) {
+            $this->allowedValues[] = VarDumper::dumpAsString($value);
+        }
+
         $expectedAsString = implode(', ', $allowedValues);
+
         return "is one of $expectedAsString";
     }
 
-    /**
-     * {@inheritdoc}
-     */
-    protected function matches($other)
+    protected function matches($other): bool
     {
         return in_array($other, $this->allowedValues, false);
     }
diff --git a/tests/ResultPrinter.php b/tests/ResultPrinter.php
index 89299f0557c..6a6fca92dcc 100644
--- a/tests/ResultPrinter.php
+++ b/tests/ResultPrinter.php
@@ -12,12 +12,18 @@
  * to change default output to STDOUT and prevent some tests from fail when
  * they can not be executed after headers have been sent.
  */
-class ResultPrinter extends \PHPUnit\TextUI\ResultPrinter
+class ResultPrinter extends \PHPUnit\TextUI\DefaultResultPrinter
 {
+    private $out = null;
+
+    /**
+     * @param null|resource|string $out
+     * @param int|string $numberOfColumns
+     */
     public function __construct(
         $out = null,
         $verbose = false,
-        $colors = \PHPUnit\TextUI\ResultPrinter::COLOR_DEFAULT,
+        $colors = \PHPUnit\TextUI\DefaultResultPrinter::COLOR_DEFAULT,
         $debug = false,
         $numberOfColumns = 80,
         $reverse = false
@@ -29,7 +35,7 @@ public function __construct(
         parent::__construct($out, $verbose, $colors, $debug, $numberOfColumns, $reverse);
     }
 
-    public function flush()
+    public function flush(): void
     {
         if ($this->out !== STDOUT) {
             parent::flush();
diff --git a/tests/TestCase.php b/tests/TestCase.php
index 5a8287f1f55..192a3ccb2a7 100644
--- a/tests/TestCase.php
+++ b/tests/TestCase.php
@@ -20,7 +20,7 @@ abstract class TestCase extends \PHPUnit\Framework\TestCase
     /**
      * Clean up after test case.
      */
-    public static function tearDownAfterClass()
+    public static function tearDownAfterClass(): void
     {
         parent::tearDownAfterClass();
         $logger = Yii::getLogger();
@@ -46,7 +46,7 @@ public static function getParam($name, $default = null)
      * Clean up after test.
      * By default the application created with [[mockApplication]] will be destroyed.
      */
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         $this->destroyApplication();
@@ -168,7 +168,7 @@ protected function assertContainsWithoutLE($needle, $haystack, $message = '')
         $needle = str_replace("\r\n", "\n", $needle);
         $haystack = str_replace("\r\n", "\n", $haystack);
 
-        $this->assertContains($needle, $haystack, $message);
+        $this->assertStringContainsString($needle, $haystack, $message);
     }
 
     /**
diff --git a/tests/bootstrap.php b/tests/bootstrap.php
index 44714ab28da..35a3b1e4a90 100644
--- a/tests/bootstrap.php
+++ b/tests/bootstrap.php
@@ -28,5 +28,4 @@
     Yii::setAlias('@runtime', getenv('TEST_RUNTIME_PATH'));
 }
 
-require_once __DIR__ . '/compatibility.php';
 require_once __DIR__ . '/TestCase.php';
diff --git a/tests/compatibility.php b/tests/compatibility.php
deleted file mode 100644
index 5a14c6e36e2..00000000000
--- a/tests/compatibility.php
+++ /dev/null
@@ -1,75 +0,0 @@
-<?php
-/**
- * @link https://www.yiiframework.com/
- * @copyright Copyright (c) 2008 Yii Software LLC
- * @license https://www.yiiframework.com/license/
- */
-
-/*
- * Ensures compatibility with PHPUnit < 6.x
- */
-
-namespace PHPUnit\Framework\Constraint {
-    if (!class_exists('PHPUnit\Framework\Constraint\Constraint') && class_exists('PHPUnit_Framework_Constraint')) {
-        abstract class Constraint extends \PHPUnit_Framework_Constraint
-        {
-        }
-    }
-}
-
-namespace PHPUnit\TextUI {
-    if (!class_exists('\PHPUnit\TextUI\ResultPrinter') && class_exists('PHPUnit_TextUI_ResultPrinter')) {
-        class ResultPrinter extends \PHPUnit_TextUI_ResultPrinter
-        {
-        }
-    }
-}
-
-namespace PHPUnit\Framework\Error {
-    if (!class_exists('PHPUnit\Framework\Error\Notice') && class_exists('PHPUnit_Framework_Error_Notice')) {
-        class Notice extends \PHPUnit_Framework_Error_Notice
-        {
-        }
-    }
-}
-
-namespace PHPUnit\Framework {
-    if (!class_exists('PHPUnit\Framework\TestCase') && class_exists('PHPUnit_Framework_TestCase')) {
-        abstract class TestCase extends \PHPUnit_Framework_TestCase
-        {
-            /**
-             * @param string $exception
-             */
-            public function expectException($exception)
-            {
-                $this->setExpectedException($exception);
-            }
-
-            /**
-             * @param string $message
-             */
-            public function expectExceptionMessage($message)
-            {
-                $parentClassMethods = get_class_methods('PHPUnit_Framework_TestCase');
-                if (in_array('expectExceptionMessage', $parentClassMethods)) {
-                    parent::expectExceptionMessage($message);
-                    return;
-                }
-                $this->setExpectedException($this->getExpectedException(), $message);
-            }
-
-            /**
-             * @param string $messageRegExp
-             */
-            public function expectExceptionMessageRegExp($messageRegExp)
-            {
-                $parentClassMethods = get_class_methods('PHPUnit_Framework_TestCase');
-                if (in_array('expectExceptionMessageRegExp', $parentClassMethods)) {
-                    parent::expectExceptionMessageRegExp($messageRegExp);
-                    return;
-                }
-                $this->setExpectedExceptionRegExp($this->getExpectedException(), $messageRegExp);
-            }
-        }
-    }
-}
diff --git a/tests/data/validators/models/FakedValidationTypedModel.php b/tests/data/validators/models/FakedValidationTypedModel.php
new file mode 100644
index 00000000000..39d5795cf72
--- /dev/null
+++ b/tests/data/validators/models/FakedValidationTypedModel.php
@@ -0,0 +1,18 @@
+<?php
+/**
+ * @link https://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license https://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\data\validators\models;
+
+use yii\base\Model;
+use yii\web\UploadedFile;
+
+class FakedValidationTypedModel extends Model
+{
+    public ?UploadedFile $single = null;
+
+    public array $multiple = [];
+}
diff --git a/tests/framework/BaseYiiTest.php b/tests/framework/BaseYiiTest.php
index 4e17fff0668..b0c99e9787d 100644
--- a/tests/framework/BaseYiiTest.php
+++ b/tests/framework/BaseYiiTest.php
@@ -26,13 +26,13 @@ class BaseYiiTest extends TestCase
 {
     public $aliases;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->aliases = Yii::$aliases;
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Yii::$aliases = $this->aliases;
@@ -72,7 +72,7 @@ public function testGetVersion()
 
     public function testPowered()
     {
-        $this->assertInternalType('string', Yii::powered());
+        $this->assertIsString(Yii::powered());
     }
 
     public function testCreateObjectArray()
diff --git a/tests/framework/ChangeLogTest.php b/tests/framework/ChangeLogTest.php
index eef6cae4585..0dd72530b58 100644
--- a/tests/framework/ChangeLogTest.php
+++ b/tests/framework/ChangeLogTest.php
@@ -54,6 +54,9 @@ public function testContributorLine($line)
          * - Description ends without a "."
          * - Line ends with contributor name between "(" and ")".
          */
-        $this->assertRegExp('/- (Bug|Enh|Chg|New)( #\d+(, #\d+)*)?(\s\(CVE-[\d-]+\))?: .*[^.] \(.+\)$/', $line);
+        $this->assertMatchesRegularExpression(
+            '/- (Bug|Enh|Chg|New)( #\d+(, #\d+)*)?(\s\(CVE-[\d-]+\))?: .*[^.] \(.+\)$/',
+            $line
+        );
     }
 }
diff --git a/tests/framework/base/ActionFilterTest.php b/tests/framework/base/ActionFilterTest.php
index 7a527beb77b..17419d16cb5 100644
--- a/tests/framework/base/ActionFilterTest.php
+++ b/tests/framework/base/ActionFilterTest.php
@@ -19,7 +19,7 @@
  */
 class ActionFilterTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/base/BaseObjectTest.php b/tests/framework/base/BaseObjectTest.php
index 98280fef25e..79e7c07a31a 100644
--- a/tests/framework/base/BaseObjectTest.php
+++ b/tests/framework/base/BaseObjectTest.php
@@ -20,14 +20,14 @@ class BaseObjectTest extends TestCase
      */
     protected $object;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
         $this->object = new NewObject();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         $this->object = null;
@@ -159,19 +159,6 @@ public function testReadingWriteOnlyProperty()
         $this->expectExceptionMessage('Getting write-only property: yiiunit\framework\base\NewObject::writeOnly');
         $this->object->writeOnly;
     }
-
-    public function testBackwardCompatibilityWithObject()
-    {
-        if (PHP_MAJOR_VERSION > 7 || (PHP_MAJOR_VERSION == 7 && PHP_MINOR_VERSION >= 2)) {
-            $this->markTestSkipped('This test is meant to run on PHP <7.2.0 to check BC with yii\base\Object');
-        }
-        $this->assertInstanceOf('yii\base\Object', new BCObject());
-        $this->assertInstanceOf('yii\base\BaseObject', new BCObject());
-
-        BCObject::$initCalled = false;
-        new BCObject();
-        $this->assertTrue(BCObject::$initCalled);
-    }
 }
 
 
diff --git a/tests/framework/base/BehaviorTest.php b/tests/framework/base/BehaviorTest.php
index b77a074d4be..47ecbf9e0fc 100644
--- a/tests/framework/base/BehaviorTest.php
+++ b/tests/framework/base/BehaviorTest.php
@@ -73,13 +73,13 @@ public function detach()
  */
 class BehaviorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         gc_enable();
diff --git a/tests/framework/base/ComponentTest.php b/tests/framework/base/ComponentTest.php
index e2fdbc6e02b..dca3c37bd91 100644
--- a/tests/framework/base/ComponentTest.php
+++ b/tests/framework/base/ComponentTest.php
@@ -33,14 +33,14 @@ class ComponentTest extends TestCase
      */
     protected $component;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
         $this->component = new NewComponent();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         $this->component = null;
@@ -341,6 +341,9 @@ public function testAttachBehavior()
         $this->assertTrue($component->hasProperty('p'));
         $component->test();
         $this->assertTrue($component->behaviorCalled);
+
+        $component->{'as c'} = ['__class' => NewBehavior::class];
+        $this->assertNotNull($component->getBehavior('c'));
     }
 
     public function testAttachBehaviors()
@@ -451,11 +454,6 @@ public function testDetachNotAttachedHandler()
      */
     public function testEventClosureDetachesItself()
     {
-        if (PHP_VERSION_ID < 70000) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.0');
-            return;
-        }
-
         $obj = require __DIR__ . '/stub/AnonymousComponentClass.php';
 
         $obj->trigger('barEventOnce');
diff --git a/tests/framework/base/DynamicModelTest.php b/tests/framework/base/DynamicModelTest.php
index d3dca504b6f..6b368f08cd2 100644
--- a/tests/framework/base/DynamicModelTest.php
+++ b/tests/framework/base/DynamicModelTest.php
@@ -15,7 +15,7 @@
  */
 class DynamicModelTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/base/EventTest.php b/tests/framework/base/EventTest.php
index f99d12bedb7..ab616d1572a 100644
--- a/tests/framework/base/EventTest.php
+++ b/tests/framework/base/EventTest.php
@@ -18,13 +18,13 @@ class EventTest extends TestCase
 {
     public $counter;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->counter = 0;
         Event::offAll();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Event::offAll();
diff --git a/tests/framework/base/ModelTest.php b/tests/framework/base/ModelTest.php
index 5ed73163b8d..991ed08c0b0 100644
--- a/tests/framework/base/ModelTest.php
+++ b/tests/framework/base/ModelTest.php
@@ -20,7 +20,7 @@
  */
 class ModelTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -502,11 +502,6 @@ public function testValidateAttributeNames()
 
     public function testFormNameWithAnonymousClass()
     {
-        if (PHP_VERSION_ID < 70000) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.0');
-            return;
-        }
-
         $model = require __DIR__ . '/stub/AnonymousModelClass.php';
 
         $this->expectException('yii\base\InvalidConfigException');
diff --git a/tests/framework/base/ModuleTest.php b/tests/framework/base/ModuleTest.php
index bbe36311279..333180924e0 100644
--- a/tests/framework/base/ModuleTest.php
+++ b/tests/framework/base/ModuleTest.php
@@ -18,7 +18,7 @@
  */
 class ModuleTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/base/SecurityTest.php b/tests/framework/base/SecurityTest.php
index d50fc0ab44d..0f1c6ab8394 100644
--- a/tests/framework/base/SecurityTest.php
+++ b/tests/framework/base/SecurityTest.php
@@ -22,7 +22,7 @@ class SecurityTest extends TestCase
      */
     protected $security;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->security = new ExposedSecurity();
@@ -813,12 +813,14 @@ public function randomKeyInvalidInputs()
 
     /**
      * @dataProvider randomKeyInvalidInputs
-     * @expectedException \yii\base\InvalidParamException
-     * @param mixed $input
+     *
+     * @param int|string|array $input
      */
     public function testRandomKeyInvalidInput($input)
     {
-        $key1 = $this->security->generateRandomKey($input);
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+
+        $this->security->generateRandomKey($input);
     }
 
     public function testGenerateRandomKey()
@@ -826,10 +828,10 @@ public function testGenerateRandomKey()
         // test various string lengths
         for ($length = 1; $length < 64; $length++) {
             $key1 = $this->security->generateRandomKey($length);
-            $this->assertInternalType('string', $key1);
+            $this->assertIsString($key1);
             $this->assertEquals($length, strlen($key1));
             $key2 = $this->security->generateRandomKey($length);
-            $this->assertInternalType('string', $key2);
+            $this->assertIsString($key2);
             $this->assertEquals($length, strlen($key2));
             if ($length >= 7) { // avoid random test failure, short strings are likely to collide
                 $this->assertNotEquals($key1, $key2);
@@ -839,10 +841,10 @@ public function testGenerateRandomKey()
         // test for /dev/urandom, reading larger data to see if loop works properly
         $length = 1024 * 1024;
         $key1 = $this->security->generateRandomKey($length);
-        $this->assertInternalType('string', $key1);
+        $this->assertIsString($key1);
         $this->assertEquals($length, strlen($key1));
         $key2 = $this->security->generateRandomKey($length);
-        $this->assertInternalType('string', $key2);
+        $this->assertIsString($key2);
         $this->assertEquals($length, strlen($key2));
         $this->assertNotEquals($key1, $key2);
     }
@@ -1103,11 +1105,11 @@ public function testUnMaskingInvalidStrings()
         $this->assertEquals('', $this->security->unmaskToken('1'));
     }
 
-    /**
-     * @expectedException \yii\base\InvalidParamException
-     */
     public function testMaskingInvalidStrings()
     {
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage('First parameter ($length) must be greater than 0');
+
         $this->security->maskToken('');
     }
 
diff --git a/tests/framework/base/ThemeTest.php b/tests/framework/base/ThemeTest.php
index 145380f3a7b..7b6ef72680e 100644
--- a/tests/framework/base/ThemeTest.php
+++ b/tests/framework/base/ThemeTest.php
@@ -16,7 +16,7 @@
  */
 class ThemeTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         $config = ['aliases' => ['@web' => '']];
         $this->mockWebApplication($config);
diff --git a/tests/framework/base/ViewTest.php b/tests/framework/base/ViewTest.php
index f568a5a7145..621c15fb156 100644
--- a/tests/framework/base/ViewTest.php
+++ b/tests/framework/base/ViewTest.php
@@ -24,7 +24,7 @@ class ViewTest extends TestCase
      */
     protected $testViewPath = '';
 
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -33,7 +33,7 @@ public function setUp()
         FileHelper::createDirectory($this->testViewPath);
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         FileHelper::removeDirectory($this->testViewPath);
         parent::tearDown();
diff --git a/tests/framework/base/WidgetTest.php b/tests/framework/base/WidgetTest.php
index 9517fed7e5b..067e9480125 100644
--- a/tests/framework/base/WidgetTest.php
+++ b/tests/framework/base/WidgetTest.php
@@ -21,7 +21,7 @@ class WidgetTest extends TestCase
     /**
      * {@inheritdoc}
      */
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Widget::$counter = 0;
diff --git a/tests/framework/behaviors/AttributeBehaviorTest.php b/tests/framework/behaviors/AttributeBehaviorTest.php
index 3159603bac9..0c4fa2edb9f 100644
--- a/tests/framework/behaviors/AttributeBehaviorTest.php
+++ b/tests/framework/behaviors/AttributeBehaviorTest.php
@@ -26,14 +26,14 @@ class AttributeBehaviorTest extends TestCase
      */
     protected $dbConnection;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -52,7 +52,7 @@ public function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_attribute', $columns)->execute();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
diff --git a/tests/framework/behaviors/AttributeTypecastBehaviorTest.php b/tests/framework/behaviors/AttributeTypecastBehaviorTest.php
index a43b9346bbe..5af290672e1 100644
--- a/tests/framework/behaviors/AttributeTypecastBehaviorTest.php
+++ b/tests/framework/behaviors/AttributeTypecastBehaviorTest.php
@@ -22,14 +22,14 @@
  */
 class AttributeTypecastBehaviorTest extends TestCase
 {
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -51,7 +51,7 @@ protected function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_attribute_typecast', $columns)->execute();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         AttributeTypecastBehavior::clearAutoDetectedAttributeTypes();
diff --git a/tests/framework/behaviors/AttributesBehaviorTest.php b/tests/framework/behaviors/AttributesBehaviorTest.php
index d26ddbc8b48..31dc224d997 100644
--- a/tests/framework/behaviors/AttributesBehaviorTest.php
+++ b/tests/framework/behaviors/AttributesBehaviorTest.php
@@ -26,14 +26,14 @@ class AttributesBehaviorTest extends TestCase
      */
     protected $dbConnection;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -52,7 +52,7 @@ public function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_attribute', $columns)->execute();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
diff --git a/tests/framework/behaviors/BlameableBehaviorConsoleTest.php b/tests/framework/behaviors/BlameableBehaviorConsoleTest.php
index 4a220125521..389be398a88 100755
--- a/tests/framework/behaviors/BlameableBehaviorConsoleTest.php
+++ b/tests/framework/behaviors/BlameableBehaviorConsoleTest.php
@@ -21,14 +21,14 @@
  */
 class BlameableBehaviorConsoleTest extends TestCase
 {
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -47,7 +47,7 @@ public function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_blame', $columns)->execute();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
diff --git a/tests/framework/behaviors/BlameableBehaviorTest.php b/tests/framework/behaviors/BlameableBehaviorTest.php
index b9e1a86b081..b6254d6fd61 100644
--- a/tests/framework/behaviors/BlameableBehaviorTest.php
+++ b/tests/framework/behaviors/BlameableBehaviorTest.php
@@ -21,14 +21,14 @@
  */
 class BlameableBehaviorTest extends TestCase
 {
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -52,7 +52,7 @@ public function setUp()
         $this->getUser()->login(10);
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
diff --git a/tests/framework/behaviors/CacheableWidgetBehaviorTest.php b/tests/framework/behaviors/CacheableWidgetBehaviorTest.php
index fdcf5e0d3cd..9ff9d0826f5 100644
--- a/tests/framework/behaviors/CacheableWidgetBehaviorTest.php
+++ b/tests/framework/behaviors/CacheableWidgetBehaviorTest.php
@@ -32,7 +32,7 @@ class CacheableWidgetBehaviorTest extends TestCase
     /**
      * {@inheritdoc}
      */
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->initializeApplicationMock();
         $this->initializeWidgetMocks();
diff --git a/tests/framework/behaviors/OptimisticLockBehaviorTest.php b/tests/framework/behaviors/OptimisticLockBehaviorTest.php
index fe041eab9af..098b810ddde 100644
--- a/tests/framework/behaviors/OptimisticLockBehaviorTest.php
+++ b/tests/framework/behaviors/OptimisticLockBehaviorTest.php
@@ -29,14 +29,14 @@ class OptimisticLockBehaviorTest extends TestCase
      */
     protected $dbConnection;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -60,7 +60,7 @@ public function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_auto_lock_version_string', $columns)->execute();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
@@ -152,7 +152,7 @@ public function testUpdateRecord()
         try {
             $model->save(false);
         } catch (\yii\db\StaleObjectException $e) {
-            $this->assertContains('The object being updated is outdated.', $e->getMessage());
+            $this->assertStringContainsString('The object being updated is outdated.', $e->getMessage());
             $thrown = true;
         }
 
@@ -168,7 +168,7 @@ public function testUpdateRecord()
         try {
             $model->save(false);
         } catch (\yii\db\StaleObjectException $e) {
-            $this->assertContains('The object being updated is outdated.', $e->getMessage());
+            $this->assertStringContainsString('The object being updated is outdated.', $e->getMessage());
             $thrown = true;
         }
 
@@ -184,7 +184,7 @@ public function testUpdateRecord()
         try {
             $model->save(false);
         } catch (\yii\db\StaleObjectException $e) {
-            $this->assertContains('The object being updated is outdated.', $e->getMessage());
+            $this->assertStringContainsString('The object being updated is outdated.', $e->getMessage());
             $thrown = true;
         }
 
@@ -233,7 +233,7 @@ public function testDeleteRecord()
         try {
             $model->delete();
         } catch (\yii\db\StaleObjectException $e) {
-            $this->assertContains('The object being deleted is outdated.', $e->getMessage());
+            $this->assertStringContainsString('The object being deleted is outdated.', $e->getMessage());
             $thrown = true;
         }
 
@@ -249,7 +249,7 @@ public function testDeleteRecord()
         try {
             $model->delete();
         } catch (\yii\db\StaleObjectException $e) {
-            $this->assertContains('The object being deleted is outdated.', $e->getMessage());
+            $this->assertStringContainsString('The object being deleted is outdated.', $e->getMessage());
             $thrown = true;
         }
 
diff --git a/tests/framework/behaviors/SluggableBehaviorTest.php b/tests/framework/behaviors/SluggableBehaviorTest.php
index cf9e9ceddda..ad1444c4470 100644
--- a/tests/framework/behaviors/SluggableBehaviorTest.php
+++ b/tests/framework/behaviors/SluggableBehaviorTest.php
@@ -26,14 +26,14 @@ class SluggableBehaviorTest extends TestCase
      */
     protected $dbConnection;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -60,7 +60,7 @@ public function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_slug_related', $columns)->execute();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
diff --git a/tests/framework/behaviors/TimestampBehaviorTest.php b/tests/framework/behaviors/TimestampBehaviorTest.php
index 22365f17993..8a64fcb90f4 100644
--- a/tests/framework/behaviors/TimestampBehaviorTest.php
+++ b/tests/framework/behaviors/TimestampBehaviorTest.php
@@ -28,14 +28,14 @@ class TimestampBehaviorTest extends TestCase
      */
     protected $dbConnection;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlite')) {
             static::markTestSkipped('PDO and SQLite extensions are required.');
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -61,7 +61,7 @@ public function setUp()
         Yii::$app->getDb()->createCommand()->createTable('test_auto_timestamp_string', $columns)->execute();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getDb()->close();
         parent::tearDown();
diff --git a/tests/framework/caching/CacheTestCase.php b/tests/framework/caching/CacheTestCase.php
index 7eb00321a35..fc98fb57e04 100644
--- a/tests/framework/caching/CacheTestCase.php
+++ b/tests/framework/caching/CacheTestCase.php
@@ -54,13 +54,13 @@ abstract class CacheTestCase extends TestCase
      */
     abstract protected function getCacheInstance();
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         static::$time = null;
         static::$microtime = null;
diff --git a/tests/framework/caching/CallbackDependencyTest.php b/tests/framework/caching/CallbackDependencyTest.php
new file mode 100644
index 00000000000..b2a93ff9541
--- /dev/null
+++ b/tests/framework/caching/CallbackDependencyTest.php
@@ -0,0 +1,41 @@
+<?php
+
+namespace yiiunit\framework\caching;
+
+use PHPUnit\Framework\TestCase;
+use yii\caching\ArrayCache;
+use yii\caching\CallbackDependency;
+
+class CallbackDependencyTest extends TestCase
+{
+    public function testDependencyChange()
+    {
+        $cache = new ArrayCache();
+        $dependencyValue = true;
+
+        $dependency = new CallbackDependency();
+        $dependency->callback = function () use (&$dependencyValue) {
+            return $dependencyValue === true;
+        };
+
+        $dependency->evaluateDependency($cache);
+        $this->assertFalse($dependency->isChanged($cache));
+
+        $dependencyValue = false;
+        $this->assertTrue($dependency->isChanged($cache));
+    }
+
+    public function testDependencyNotChanged()
+    {
+        $cache = new ArrayCache();
+
+        $dependency = new CallbackDependency();
+        $dependency->callback = function () {
+            return 2 + 2;
+        };
+
+        $dependency->evaluateDependency($cache);
+        $this->assertFalse($dependency->isChanged($cache));
+        $this->assertFalse($dependency->isChanged($cache));
+    }
+}
diff --git a/tests/framework/caching/DbCacheTest.php b/tests/framework/caching/DbCacheTest.php
index b18b30e2bcd..21d2723cb62 100644
--- a/tests/framework/caching/DbCacheTest.php
+++ b/tests/framework/caching/DbCacheTest.php
@@ -19,7 +19,7 @@ class DbCacheTest extends CacheTestCase
     private $_cacheInstance;
     private $_connection;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_mysql')) {
             $this->markTestSkipped('pdo and pdo_mysql extensions are required.');
diff --git a/tests/framework/caching/DbDependencyTest.php b/tests/framework/caching/DbDependencyTest.php
index bb723be3a49..a87a87e8542 100644
--- a/tests/framework/caching/DbDependencyTest.php
+++ b/tests/framework/caching/DbDependencyTest.php
@@ -24,7 +24,7 @@ class DbDependencyTest extends DatabaseTestCase
     /**
      * {@inheritdoc}
      */
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/caching/DbQueryDependencyTest.php b/tests/framework/caching/DbQueryDependencyTest.php
index f8a50183dcd..679fc9eb63a 100644
--- a/tests/framework/caching/DbQueryDependencyTest.php
+++ b/tests/framework/caching/DbQueryDependencyTest.php
@@ -23,7 +23,7 @@ class DbQueryDependencyTest extends DatabaseTestCase
     /**
      * {@inheritdoc}
      */
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/caching/FileCacheTest.php b/tests/framework/caching/FileCacheTest.php
index c9f6ee8f51f..aa12bf9cc13 100644
--- a/tests/framework/caching/FileCacheTest.php
+++ b/tests/framework/caching/FileCacheTest.php
@@ -77,44 +77,9 @@ public function testKeyPrefix()
         $cacheFile = $refMethodGetCacheFile->invoke($cache, $normalizeKey);
 
         $this->assertTrue($refMethodSet->invoke($cache, $key, $value));
-        $this->assertContains($keyPrefix, basename($cacheFile));
+        $this->assertStringContainsString($keyPrefix, basename($cacheFile));
         $this->assertEquals($expectedDirectoryName, basename(dirname($cacheFile)), $cacheFile);
         $this->assertTrue(is_dir(dirname($cacheFile)), 'File not found ' . $cacheFile);
         $this->assertEquals($value, $refMethodGet->invoke($cache, $key));
     }
-
-    public function testCacheRenewalOnDifferentOwnership()
-    {
-        $TRAVIS_SECOND_USER = getenv('TRAVIS_SECOND_USER');
-        if (empty($TRAVIS_SECOND_USER)) {
-            $this->markTestSkipped('Travis second user not found');
-        }
-
-        $cache = $this->getCacheInstance();
-
-        $cacheValue = uniqid('value_');
-        $cachePublicKey = uniqid('key_');
-        $cacheInternalKey = $cache->buildKey($cachePublicKey);
-
-        static::$time = \time();
-        $this->assertTrue($cache->set($cachePublicKey, $cacheValue, 2));
-        $this->assertSame($cacheValue, $cache->get($cachePublicKey));
-
-        $refClass = new \ReflectionClass($cache);
-        $refMethodGetCacheFile = $refClass->getMethod('getCacheFile');
-        $refMethodGetCacheFile->setAccessible(true);
-        $cacheFile = $refMethodGetCacheFile->invoke($cache, $cacheInternalKey);
-        $refMethodGetCacheFile->setAccessible(false);
-
-        $output = array();
-        $returnVar = null;
-        exec(sprintf('sudo chown %s %s',
-            escapeshellarg($TRAVIS_SECOND_USER),
-            escapeshellarg($cacheFile)
-        ), $output, $returnVar);
-
-        $this->assertSame(0, $returnVar, 'Cannot change ownership of cache file to test cache renewal');
-
-        $this->assertTrue($cache->set($cachePublicKey, uniqid('value_2_'), 2), 'Cannot rebuild cache on different file ownership');
-    }
 }
diff --git a/tests/framework/caching/MssqlCacheTest.php b/tests/framework/caching/MssqlCacheTest.php
index 324f1fcc036..2efc8bf5d6a 100644
--- a/tests/framework/caching/MssqlCacheTest.php
+++ b/tests/framework/caching/MssqlCacheTest.php
@@ -21,7 +21,7 @@ class MssqlCacheTest extends CacheTestCase
     private $_cacheInstance;
     private $_connection;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_sqlsrv')) {
             $this->markTestSkipped('pdo and pdo_mssql extensions are required.');
diff --git a/tests/framework/caching/PgSQLCacheTest.php b/tests/framework/caching/PgSQLCacheTest.php
index 76a4c6cc6b5..45478537c43 100644
--- a/tests/framework/caching/PgSQLCacheTest.php
+++ b/tests/framework/caching/PgSQLCacheTest.php
@@ -20,7 +20,7 @@ class PgSQLCacheTest extends DbCacheTest
     protected static $driverName = 'pgsql';
     private $_connection;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         if (!extension_loaded('pdo') || !extension_loaded('pdo_pgsql')) {
             $this->markTestSkipped('pdo and pdo_pgsql extensions are required.');
diff --git a/tests/framework/console/ControllerTest.php b/tests/framework/console/ControllerTest.php
index a38cb7ea372..2103715b51c 100644
--- a/tests/framework/console/ControllerTest.php
+++ b/tests/framework/console/ControllerTest.php
@@ -26,7 +26,7 @@ class ControllerTest extends TestCase
     /** @var FakeController */
     private $controller;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -101,11 +101,6 @@ public function testBindActionParams()
 
     public function testNullableInjectedActionParams()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
-
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new Application([
             'id' => 'app',
@@ -122,10 +117,6 @@ public function testNullableInjectedActionParams()
 
     public function testInjectionContainerException()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new Application([
             'id' => 'app',
@@ -144,10 +135,6 @@ public function testInjectionContainerException()
 
     public function testUnknownInjection()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new Application([
             'id' => 'app',
@@ -165,10 +152,6 @@ public function testUnknownInjection()
 
     public function testInjectedActionParams()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new Application([
             'id' => 'app',
@@ -193,10 +176,6 @@ public function testInjectedActionParams()
 
     public function testInjectedActionParamsFromModule()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         $module = new \yii\base\Module('fake', new Application([
             'id' => 'app',
             'basePath' => __DIR__,
@@ -270,7 +249,7 @@ public function testHelpOption()
 
         $helpController = new FakeHelpControllerWithoutOutput('help', Yii::$app);
         $helpController->actionIndex('fake/aksi1');
-        $this->assertContains('--test-array, -ta', $helpController->outputString);
+        $this->assertStringContainsString('--test-array, -ta', $helpController->outputString);
     }
 
     /**
diff --git a/tests/framework/console/FakePhp71Controller.php b/tests/framework/console/FakePhp71Controller.php
index dbed836f8d1..44ba0fbd310 100644
--- a/tests/framework/console/FakePhp71Controller.php
+++ b/tests/framework/console/FakePhp71Controller.php
@@ -14,9 +14,14 @@
 
 class FakePhp71Controller extends Controller
 {
-    public function actionInjection($before, Request $request, $between, DummyService $dummyService, Post $post = null, $after)
-    {
-
+    public function actionInjection(
+        $before,
+        Request $request,
+        $between,
+        DummyService $dummyService,
+        ?Post $post,
+        $after
+    ) {
     }
 
     public function actionNullableInjection(?Request $request, ?Post $post)
diff --git a/tests/framework/console/UnknownCommandExceptionTest.php b/tests/framework/console/UnknownCommandExceptionTest.php
index 63dd11ccd97..e72526fdf03 100644
--- a/tests/framework/console/UnknownCommandExceptionTest.php
+++ b/tests/framework/console/UnknownCommandExceptionTest.php
@@ -16,7 +16,7 @@
  */
 class UnknownCommandExceptionTest extends TestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'enableCoreCommands' => false,
diff --git a/tests/framework/console/controllers/AssetControllerTest.php b/tests/framework/console/controllers/AssetControllerTest.php
index f9fe4be33c2..768829ef83f 100644
--- a/tests/framework/console/controllers/AssetControllerTest.php
+++ b/tests/framework/console/controllers/AssetControllerTest.php
@@ -32,7 +32,7 @@ class AssetControllerTest extends TestCase
      */
     protected $testAssetsBasePath = '';
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication();
         $this->testFilePath = Yii::getAlias('@yiiunit/runtime') . DIRECTORY_SEPARATOR . str_replace('\\', '_', get_class($this)) . uniqid();
@@ -41,7 +41,7 @@ public function setUp()
         $this->createDir($this->testAssetsBasePath);
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         $this->removeDir($this->testFilePath);
     }
@@ -258,7 +258,7 @@ public function testActionTemplate()
         $this->runAssetControllerAction('template', [$configFileName]);
         $this->assertFileExists($configFileName, 'Unable to create config file template!');
         $config = require $configFileName;
-        $this->assertInternalType('array', $config, 'Invalid config created!');
+        $this->assertIsArray($config, 'Invalid config created!');
     }
 
     public function testActionCompress()
@@ -304,7 +304,7 @@ public function testActionCompress()
         // Then :
         $this->assertFileExists($bundleFile, 'Unable to create output bundle file!');
         $compressedBundleConfig = require $bundleFile;
-        $this->assertInternalType('array', $compressedBundleConfig, 'Output bundle file has incorrect format!');
+        $this->assertIsArray($compressedBundleConfig, 'Output bundle file has incorrect format!');
         $this->assertCount(2, $compressedBundleConfig, 'Output bundle config contains wrong bundle count!');
 
         $this->assertArrayHasKey($assetBundleClassName, $compressedBundleConfig, 'Source bundle is lost!');
@@ -320,11 +320,19 @@ public function testActionCompress()
 
         $compressedCssFileContent = file_get_contents($compressedCssFileName);
         foreach ($cssFiles as $name => $content) {
-            $this->assertContains($content, $compressedCssFileContent, "Source of '{$name}' is missing in combined file!");
+            $this->assertStringContainsString(
+                $content,
+                $compressedCssFileContent,
+                "Source of '{$name}' is missing in combined file!",
+            );
         }
         $compressedJsFileContent = file_get_contents($compressedJsFileName);
         foreach ($jsFiles as $name => $content) {
-            $this->assertContains($content, $compressedJsFileContent, "Source of '{$name}' is missing in combined file!");
+            $this->assertStringContainsString(
+                $content,
+                $compressedJsFileContent,
+                "Source of '{$name}' is missing in combined file!",
+            );
         }
     }
 
@@ -384,7 +392,7 @@ public function testCompressExternalAsset()
         // Then :
         $this->assertFileExists($bundleFile, 'Unable to create output bundle file!');
         $compressedBundleConfig = require $bundleFile;
-        $this->assertInternalType('array', $compressedBundleConfig, 'Output bundle file has incorrect format!');
+        $this->assertIsArray($compressedBundleConfig, 'Output bundle file has incorrect format!');
         $this->assertArrayHasKey($externalAssetBundleClassName, $compressedBundleConfig, 'External bundle is lost!');
 
         $compressedExternalAssetConfig = $compressedBundleConfig[$externalAssetBundleClassName];
@@ -392,7 +400,11 @@ public function testCompressExternalAsset()
         $this->assertEquals($externalAssetConfig['css'], $compressedExternalAssetConfig['css'], 'External bundle css is lost!');
 
         $compressedRegularAssetConfig = $compressedBundleConfig[$regularAssetBundleClassName];
-        $this->assertContains($externalAssetBundleClassName, $compressedRegularAssetConfig['depends'], 'Dependency on external bundle is lost!');
+        $this->assertContains(
+            $externalAssetBundleClassName,
+            $compressedRegularAssetConfig['depends'],
+            'Dependency on external bundle is lost!',
+        );
     }
 
     /**
diff --git a/tests/framework/console/controllers/BaseMessageControllerTest.php b/tests/framework/console/controllers/BaseMessageControllerTest.php
index 90d77736209..a7aa869c33a 100644
--- a/tests/framework/console/controllers/BaseMessageControllerTest.php
+++ b/tests/framework/console/controllers/BaseMessageControllerTest.php
@@ -23,7 +23,7 @@ abstract class BaseMessageControllerTest extends TestCase
     protected $configFileName = '';
     protected $language = 'en';
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication();
         $this->sourcePath = Yii::getAlias('@yiiunit/runtime/test_source');
@@ -47,7 +47,7 @@ protected function generateConfigFileName()
         return $this->configFileName;
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         FileHelper::removeDirectory($this->sourcePath);
         if (file_exists($this->configFileName)) {
diff --git a/tests/framework/console/controllers/CacheControllerTest.php b/tests/framework/console/controllers/CacheControllerTest.php
index 907c6da4d3f..183d173d8e1 100644
--- a/tests/framework/console/controllers/CacheControllerTest.php
+++ b/tests/framework/console/controllers/CacheControllerTest.php
@@ -29,7 +29,7 @@ class CacheControllerTest extends TestCase
 
     private $driverName = 'mysql';
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -137,11 +137,11 @@ public function testNotFoundFlush()
         $this->assertEquals('firstValue', Yii::$app->firstCache->get('firstKey'), 'first cache data should not be flushed');
     }
 
-    /**
-     * @expectedException \yii\console\Exception
-     */
     public function testNothingToFlushException()
     {
+        $this->expectException('yii\console\Exception');
+        $this->expectExceptionMessage('You should specify cache components names');
+        
         $this->_cacheController->actionFlush();
     }
 
diff --git a/tests/framework/console/controllers/DbMessageControllerTest.php b/tests/framework/console/controllers/DbMessageControllerTest.php
index 1c5707dab94..4ecdbd1124a 100644
--- a/tests/framework/console/controllers/DbMessageControllerTest.php
+++ b/tests/framework/console/controllers/DbMessageControllerTest.php
@@ -51,7 +51,7 @@ protected static function runConsoleAction($route, $params = [])
         }
     }
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         parent::setUpBeforeClass();
         $databases = static::getParam('databases');
@@ -65,7 +65,7 @@ public static function setUpBeforeClass()
         static::runConsoleAction('migrate/up', ['migrationPath' => '@yii/i18n/migrations/', 'interactive' => false]);
     }
 
-    public static function tearDownAfterClass()
+    public static function tearDownAfterClass(): void
     {
         static::runConsoleAction('migrate/down', ['migrationPath' => '@yii/i18n/migrations/', 'interactive' => false]);
         if (static::$db) {
@@ -75,7 +75,7 @@ public static function tearDownAfterClass()
         parent::tearDownAfterClass();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Yii::$app = null;
diff --git a/tests/framework/console/controllers/FixtureControllerTest.php b/tests/framework/console/controllers/FixtureControllerTest.php
index 49ad96b31df..ef44853b4e6 100644
--- a/tests/framework/console/controllers/FixtureControllerTest.php
+++ b/tests/framework/console/controllers/FixtureControllerTest.php
@@ -30,7 +30,7 @@ class FixtureControllerTest extends DatabaseTestCase
 
     protected $driverName = 'mysql';
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -46,7 +46,7 @@ protected function setUp()
         ], [null, null]); //id and module are null
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         $this->_fixtureController = null;
         FixtureStorage::clear();
@@ -215,19 +215,15 @@ public function testNothingToUnloadParticularExceptOnes()
         $this->assertEmpty(FixtureStorage::$firstFixtureData, 'first fixture data should not be loaded');
     }
 
-    /**
-     * @expectedException \yii\console\Exception
-     */
     public function testNoFixturesWereFoundInLoad()
     {
+        $this->expectException('\yii\console\Exception');
         $this->_fixtureController->actionLoad(['NotExistingFixture']);
     }
 
-    /**
-     * @expectedException \yii\console\Exception
-     */
     public function testNoFixturesWereFoundInUnload()
     {
+        $this->expectException('\yii\console\Exception');
         $this->_fixtureController->actionUnload(['NotExistingFixture']);
     }
 
diff --git a/tests/framework/console/controllers/HelpControllerTest.php b/tests/framework/console/controllers/HelpControllerTest.php
index 68c4f61772f..2613e89ad42 100644
--- a/tests/framework/console/controllers/HelpControllerTest.php
+++ b/tests/framework/console/controllers/HelpControllerTest.php
@@ -21,7 +21,7 @@ class HelpControllerTest extends TestCase
     /**
      * {@inheritdoc}
      */
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication();
     }
@@ -154,37 +154,37 @@ public function testActionUsage()
     public function testActionIndex()
     {
         $result = Console::stripAnsiFormat($this->runControllerAction('index'));
-        $this->assertContains('This is Yii version ', $result);
-        $this->assertContains('The following commands are available:', $result);
-        $this->assertContains('To see the help of each command, enter:', $result);
-        $this->assertContains('bootstrap.php help', $result);
+        $this->assertStringContainsString('This is Yii version ', $result);
+        $this->assertStringContainsString('The following commands are available:', $result);
+        $this->assertStringContainsString('To see the help of each command, enter:', $result);
+        $this->assertStringContainsString('bootstrap.php help', $result);
     }
 
     public function testActionIndexWithHelpCommand()
     {
         $result = Console::stripAnsiFormat($this->runControllerAction('index', ['command' => 'help/index']));
-        $this->assertContains('Displays available commands or the detailed information', $result);
-        $this->assertContains('bootstrap.php help [command] [...options...]', $result);
-        $this->assertContains('--appconfig: string', $result);
-        $this->assertContains('- command: string', $result);
-        $this->assertContains('--color: boolean, 0 or 1', $result);
-        $this->assertContains('--help, -h: boolean, 0 or 1', $result);
-        $this->assertContains('--interactive: boolean, 0 or 1 (defaults to 1)', $result);
+        $this->assertStringContainsString('Displays available commands or the detailed information', $result);
+        $this->assertStringContainsString('bootstrap.php help [command] [...options...]', $result);
+        $this->assertStringContainsString('--appconfig: string', $result);
+        $this->assertStringContainsString('- command: string', $result);
+        $this->assertStringContainsString('--color: boolean, 0 or 1', $result);
+        $this->assertStringContainsString('--help, -h: boolean, 0 or 1', $result);
+        $this->assertStringContainsString('--interactive: boolean, 0 or 1 (defaults to 1)', $result);
     }
 
     public function testActionIndexWithServeCommand()
     {
         $result = Console::stripAnsiFormat($this->runControllerAction('index', ['command' => 'serve']));
-        $this->assertContains('Runs PHP built-in web server', $result);
-        $this->assertContains('bootstrap.php serve [address] [...options...]', $result);
-        $this->assertContains('- address: string (defaults to \'localhost\')', $result);
-        $this->assertContains('--appconfig: string', $result);
-        $this->assertContains('--color: boolean, 0 or 1', $result);
-        $this->assertContains('--docroot, -t: string (defaults to \'@app/web\')', $result);
-        $this->assertContains('--help, -h: boolean, 0 or 1', $result);
-        $this->assertContains('--interactive: boolean, 0 or 1 (defaults to 1)', $result);
-        $this->assertContains('--port, -p: int (defaults to 8080)', $result);
-        $this->assertContains('--router, -r: string', $result);
+        $this->assertStringContainsString('Runs PHP built-in web server', $result);
+        $this->assertStringContainsString('bootstrap.php serve [address] [...options...]', $result);
+        $this->assertStringContainsString('- address: string (defaults to \'localhost\')', $result);
+        $this->assertStringContainsString('--appconfig: string', $result);
+        $this->assertStringContainsString('--color: boolean, 0 or 1', $result);
+        $this->assertStringContainsString('--docroot, -t: string (defaults to \'@app/web\')', $result);
+        $this->assertStringContainsString('--help, -h: boolean, 0 or 1', $result);
+        $this->assertStringContainsString('--interactive: boolean, 0 or 1 (defaults to 1)', $result);
+        $this->assertStringContainsString('--port, -p: int (defaults to 8080)', $result);
+        $this->assertStringContainsString('--router, -r: string', $result);
     }
 
     public function testActionListContainsNoEmptyCommands()
@@ -194,9 +194,9 @@ public function testActionListContainsNoEmptyCommands()
             'controllerNamespace' => 'yiiunit\data\console\controllers',
         ]);
         $result = Console::stripAnsiFormat($this->runControllerAction('list'));
-        $this->assertNotContains("fake-empty\n", $result);
-        $this->assertNotContains("fake-no-default\n", $result);
-        $this->assertContains("fake-no-default/index\n", $result);
+        $this->assertStringNotContainsString("fake-empty\n", $result);
+        $this->assertStringNotContainsString("fake-no-default\n", $result);
+        $this->assertStringContainsString("fake-no-default/index\n", $result);
     }
 
     public function testActionIndexContainsNoEmptyCommands()
@@ -206,10 +206,10 @@ public function testActionIndexContainsNoEmptyCommands()
             'controllerNamespace' => 'yiiunit\data\console\controllers',
         ]);
         $result = Console::stripAnsiFormat($this->runControllerAction('index'));
-        $this->assertNotContains("- fake-empty", $result);
-        $this->assertContains("- fake-no-default", $result);
-        $this->assertContains("    fake-no-default/index", $result);
-        $this->assertNotContains("    fake-no-default/index (default)", $result);
+        $this->assertStringNotContainsString("- fake-empty", $result);
+        $this->assertStringContainsString("- fake-no-default", $result);
+        $this->assertStringContainsString("    fake-no-default/index", $result);
+        $this->assertStringNotContainsString("    fake-no-default/index (default)", $result);
     }
 }
 
diff --git a/tests/framework/console/controllers/MigrateControllerTest.php b/tests/framework/console/controllers/MigrateControllerTest.php
index 714b233b82b..8fdbce6e02f 100644
--- a/tests/framework/console/controllers/MigrateControllerTest.php
+++ b/tests/framework/console/controllers/MigrateControllerTest.php
@@ -26,7 +26,7 @@ class MigrateControllerTest extends TestCase
 {
     use MigrateControllerTestTrait;
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->migrateControllerClass = EchoMigrateController::className();
         $this->migrationBaseClass = Migration::className();
@@ -44,7 +44,7 @@ public function setUp()
         parent::setUp();
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         $this->tearDownMigrationPath();
         parent::tearDown();
@@ -419,8 +419,8 @@ public function testUpdatingLongNamedMigration()
         $result = $this->runMigrateControllerAction('up');
         $this->assertSame(ExitCode::UNSPECIFIED_ERROR, $this->getExitCode());
 
-        $this->assertContains('The migration name', $result);
-        $this->assertContains('is too long. Its not possible to apply this migration.', $result);
+        $this->assertStringContainsString('The migration name', $result);
+        $this->assertStringContainsString('is too long. Its not possible to apply this migration.', $result);
     }
 
     public function testNamedMigrationWithCustomLimit()
@@ -435,8 +435,8 @@ public function testNamedMigrationWithCustomLimit()
         $result = $this->runMigrateControllerAction('up');
         $this->assertSame(ExitCode::OK, $this->getExitCode());
 
-        $this->assertContains('1 migration was applied.', $result);
-        $this->assertContains('Migrated up successfully.', $result);
+        $this->assertStringContainsString('1 migration was applied.', $result);
+        $this->assertStringContainsString('Migrated up successfully.', $result);
     }
 
     public function testCreateLongNamedMigration()
@@ -478,11 +478,11 @@ public function testRefreshMigration($db)
         $this->assertSame(ExitCode::OK, $this->getExitCode());
 
         // Drop worked
-        $this->assertContains('Table hall_of_fame dropped.', $result);
-        $this->assertContains('View view_hall_of_fame dropped.', $result);
+        $this->assertStringContainsString('Table hall_of_fame dropped.', $result);
+        $this->assertStringContainsString('View view_hall_of_fame dropped.', $result);
 
         // Migration was restarted
-        $this->assertContains('No new migrations found. Your system is up-to-date.', $result);
+        $this->assertStringContainsString('No new migrations found. Your system is up-to-date.', $result);
     }
 
     public function refreshMigrationDataProvider()
diff --git a/tests/framework/console/controllers/MigrateControllerTestTrait.php b/tests/framework/console/controllers/MigrateControllerTestTrait.php
index bb71b5df1a9..da3223764ae 100644
--- a/tests/framework/console/controllers/MigrateControllerTestTrait.php
+++ b/tests/framework/console/controllers/MigrateControllerTestTrait.php
@@ -228,7 +228,7 @@ public function testCreate()
         $this->assertSame(ExitCode::OK, $this->getExitCode());
         $files = FileHelper::findFiles($this->migrationPath);
         $this->assertCount(1, $files, 'Unable to create new migration!');
-        $this->assertContains($migrationName, basename($files[0]), 'Wrong migration name!');
+        $this->assertStringContainsString($migrationName, basename($files[0]), 'Wrong migration name!');
     }
 
     public function testUp()
@@ -294,7 +294,7 @@ public function testDownAll()
     public function testHistory()
     {
         $output = $this->runMigrateControllerAction('history');
-        $this->assertContains('No migration', $output);
+        $this->assertStringContainsString('No migration', $output);
 
         $this->createMigration('test_history1');
         $this->createMigration('test_history2');
@@ -303,8 +303,8 @@ public function testHistory()
 
         $output = $this->runMigrateControllerAction('history');
         $this->assertSame(ExitCode::OK, $this->getExitCode());
-        $this->assertContains('_test_history1', $output);
-        $this->assertContains('_test_history2', $output);
+        $this->assertStringContainsString('_test_history1', $output);
+        $this->assertStringContainsString('_test_history2', $output);
     }
 
     /**
@@ -316,14 +316,14 @@ public function testNew()
 
         $output = $this->runMigrateControllerAction('new');
         $this->assertSame(ExitCode::OK, $this->getExitCode());
-        $this->assertContains('_test_new1', $output);
+        $this->assertStringContainsString('_test_new1', $output);
 
         $this->runMigrateControllerAction('up');
         $this->assertSame(ExitCode::OK, $this->getExitCode());
 
         $output = $this->runMigrateControllerAction('new');
         $this->assertSame(ExitCode::OK, $this->getExitCode());
-        $this->assertNotContains('_test_new1', $output);
+        $this->assertStringNotContainsString('_test_new1', $output);
     }
 
     public function testMark()
@@ -393,8 +393,8 @@ public function testNamespaceCreate()
         $this->assertSame(ExitCode::OK, $this->getExitCode());
         $files = FileHelper::findFiles($this->migrationPath);
         $fileContent = file_get_contents($files[0]);
-        $this->assertContains("namespace {$this->migrationNamespace};", $fileContent);
-        $this->assertRegExp('/class M[0-9]{12}' . ucfirst($migrationName) . '/s', $fileContent);
+        $this->assertStringContainsString("namespace {$this->migrationNamespace};", $fileContent);
+        $this->assertMatchesRegularExpression('/class M[0-9]{12}' . ucfirst($migrationName) . '/s', $fileContent);
         unlink($files[0]);
 
         // namespace specify :
@@ -406,7 +406,7 @@ public function testNamespaceCreate()
         $this->assertSame(ExitCode::OK, $this->getExitCode());
         $files = FileHelper::findFiles($this->migrationPath);
         $fileContent = file_get_contents($files[0]);
-        $this->assertContains("namespace {$this->migrationNamespace};", $fileContent);
+        $this->assertStringContainsString("namespace {$this->migrationNamespace};", $fileContent);
         unlink($files[0]);
 
         // no namespace:
@@ -418,7 +418,7 @@ public function testNamespaceCreate()
         $this->assertSame(ExitCode::OK, $this->getExitCode());
         $files = FileHelper::findFiles($this->migrationPath);
         $fileContent = file_get_contents($files[0]);
-        $this->assertNotContains("namespace {$this->migrationNamespace};", $fileContent);
+        $this->assertStringNotContainsString("namespace {$this->migrationNamespace};", $fileContent);
     }
 
     /**
@@ -478,7 +478,7 @@ public function testNamespaceHistory()
         ];
 
         $output = $this->runMigrateControllerAction('history', [], $controllerConfig);
-        $this->assertContains('No migration', $output);
+        $this->assertStringContainsString('No migration', $output);
 
         $this->createNamespaceMigration('history1');
         $this->createNamespaceMigration('history2');
@@ -487,8 +487,8 @@ public function testNamespaceHistory()
 
         $output = $this->runMigrateControllerAction('history', [], $controllerConfig);
         $this->assertSame(ExitCode::OK, $this->getExitCode());
-        $this->assertRegExp('/' . preg_quote($this->migrationNamespace) . '.*History1/s', $output);
-        $this->assertRegExp('/' . preg_quote($this->migrationNamespace) . '.*History2/s', $output);
+        $this->assertMatchesRegularExpression('/' . preg_quote($this->migrationNamespace) . '.*History1/s', $output);
+        $this->assertMatchesRegularExpression('/' . preg_quote($this->migrationNamespace) . '.*History2/s', $output);
     }
 
     /**
diff --git a/tests/framework/console/controllers/PHPMessageControllerTest.php b/tests/framework/console/controllers/PHPMessageControllerTest.php
index d3a8074a665..f2d9c06fdb6 100644
--- a/tests/framework/console/controllers/PHPMessageControllerTest.php
+++ b/tests/framework/console/controllers/PHPMessageControllerTest.php
@@ -18,14 +18,14 @@ class PHPMessageControllerTest extends BaseMessageControllerTest
 {
     protected $messagePath;
 
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->messagePath = Yii::getAlias('@yiiunit/runtime/test_messages');
         FileHelper::createDirectory($this->messagePath, 0777);
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         FileHelper::removeDirectory($this->messagePath);
@@ -165,7 +165,7 @@ public function testRemoveUnusedBehavior($category, $isUnused, $removeUnused, $i
         if ($isExpectedToExist) {
             $this->assertFileExists($filePath);
         } else {
-            $this->assertFileNotExists($filePath);
+            $this->assertFileDoesNotExist($filePath);
         }
     }
 }
diff --git a/tests/framework/console/controllers/POMessageControllerTest.php b/tests/framework/console/controllers/POMessageControllerTest.php
index 0aac7f2c8d3..25d165406b8 100644
--- a/tests/framework/console/controllers/POMessageControllerTest.php
+++ b/tests/framework/console/controllers/POMessageControllerTest.php
@@ -19,7 +19,7 @@ class POMessageControllerTest extends BaseMessageControllerTest
     protected $messagePath;
     protected $catalog = 'messages';
 
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -27,7 +27,7 @@ public function setUp()
         FileHelper::createDirectory($this->messagePath, 0777);
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         FileHelper::removeDirectory($this->messagePath);
diff --git a/tests/framework/console/controllers/ServeControllerTest.php b/tests/framework/console/controllers/ServeControllerTest.php
index 35a5db6d075..def6c808a25 100644
--- a/tests/framework/console/controllers/ServeControllerTest.php
+++ b/tests/framework/console/controllers/ServeControllerTest.php
@@ -19,7 +19,7 @@
  */
 class ServeControllerTest extends TestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication();
     }
@@ -46,7 +46,7 @@ public function testAddressTaken()
 
         $result = $serveController->flushStdOutBuffer();
 
-        $this->assertContains('http://localhost:8080 is taken by another process.', $result);
+        $this->assertStringContainsString('http://localhost:8080 is taken by another process.', $result);
     }
 
     public function testDefaultValues()
@@ -70,9 +70,9 @@ public function testDefaultValues()
 
         $result = $serveController->flushStdOutBuffer();
 
-        $this->assertContains('Server started on http://localhost:8080', $result);
-        $this->assertContains("Document root is \"{$docroot}\"", $result);
-        $this->assertContains('Quit the server with CTRL-C or COMMAND-C.', $result);
+        $this->assertStringContainsString('Server started on http://localhost:8080', $result);
+        $this->assertStringContainsString("Document root is \"{$docroot}\"", $result);
+        $this->assertStringContainsString('Quit the server with CTRL-C or COMMAND-C.', $result);
     }
 
     public function testDoocRootWithNoExistValue()
@@ -95,7 +95,7 @@ public function testDoocRootWithNoExistValue()
 
         $result = $serveController->flushStdOutBuffer();
 
-        $this->assertContains("Document root \"{$docroot}\" does not exist.", $result);
+        $this->assertStringContainsString("Document root \"{$docroot}\" does not exist.", $result);
     }
 
     public function testWithRouterNoExistValue()
@@ -121,7 +121,7 @@ public function testWithRouterNoExistValue()
 
         $result = $serveController->flushStdOutBuffer();
 
-        $this->assertContains("Routing file \"$router\" does not exist.", $result);
+        $this->assertStringContainsString("Routing file \"$router\" does not exist.", $result);
     }
 
     public function testWithRouterValue()
@@ -147,10 +147,10 @@ public function testWithRouterValue()
 
         $result = $serveController->flushStdOutBuffer();
 
-        $this->assertContains('Server started on http://localhost:8081', $result);
-        $this->assertContains("Document root is \"{$docroot}\"", $result);
-        $this->assertContains("Routing file is \"{$router}\"", $result);
-        $this->assertContains('Quit the server with CTRL-C or COMMAND-C.', $result);
+        $this->assertStringContainsString('Server started on http://localhost:8081', $result);
+        $this->assertStringContainsString("Document root is \"{$docroot}\"", $result);
+        $this->assertStringContainsString("Routing file is \"{$router}\"", $result);
+        $this->assertStringContainsString('Quit the server with CTRL-C or COMMAND-C.', $result);
     }
 }
 
diff --git a/tests/framework/console/widgets/TableTest.php b/tests/framework/console/widgets/TableTest.php
index 796c95ad1d6..44e9f4427a9 100644
--- a/tests/framework/console/widgets/TableTest.php
+++ b/tests/framework/console/widgets/TableTest.php
@@ -16,7 +16,7 @@
  */
 class TableTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -502,7 +502,7 @@ public function testColorizedInputStripsANSIMarkersInternally()
             ->setScreenWidth(200)
             ->run();
 
-        $columnWidths = \PHPUnit_Framework_Assert::readAttribute($table, "columnWidths");
+        $columnWidths = $this->getInaccessibleProperty($table, 'columnWidths');
 
         $this->assertArrayHasKey(1, $columnWidths);
         $this->assertEquals(4+2, $columnWidths[1]);
diff --git a/tests/framework/data/ActiveDataFilterTest.php b/tests/framework/data/ActiveDataFilterTest.php
index 9e4fbe7ca62..a4763fd81ad 100644
--- a/tests/framework/data/ActiveDataFilterTest.php
+++ b/tests/framework/data/ActiveDataFilterTest.php
@@ -13,7 +13,7 @@
 
 class ActiveDataFilterTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/data/ActiveDataProviderTest.php b/tests/framework/data/ActiveDataProviderTest.php
index 57f866ee809..af96dfef267 100644
--- a/tests/framework/data/ActiveDataProviderTest.php
+++ b/tests/framework/data/ActiveDataProviderTest.php
@@ -26,7 +26,7 @@
  */
 abstract class ActiveDataProviderTest extends DatabaseTestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
@@ -132,7 +132,7 @@ public function testQuery()
         ]);
         $orders = $provider->getModels();
         $this->assertCount(3, $orders);
-        $this->assertInternalType('array', $orders[0]);
+        $this->assertIsArray($orders[0]);
         $this->assertEquals([0, 1, 2], $provider->getKeys());
 
         $query = new Query();
diff --git a/tests/framework/data/ArrayDataProviderTest.php b/tests/framework/data/ArrayDataProviderTest.php
index 6c9af6e98bf..84944d511b6 100644
--- a/tests/framework/data/ArrayDataProviderTest.php
+++ b/tests/framework/data/ArrayDataProviderTest.php
@@ -15,7 +15,7 @@
  */
 class ArrayDataProviderTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/data/BaseDataProviderTest.php b/tests/framework/data/BaseDataProviderTest.php
index ea5ae21cb69..c06d4a09bc2 100644
--- a/tests/framework/data/BaseDataProviderTest.php
+++ b/tests/framework/data/BaseDataProviderTest.php
@@ -20,7 +20,7 @@ public function testGenerateId()
         $rc = new \ReflectionClass(BaseDataProvider::className());
         $rp = $rc->getProperty('counter');
         $rp->setAccessible(true);
-        $rp->setValue(null);
+        $rp->setValue(new ConcreteDataProvider(), null);
 
         $this->assertNull((new ConcreteDataProvider())->id);
         $this->assertNotNull((new ConcreteDataProvider())->id);
diff --git a/tests/framework/data/DataFilterTest.php b/tests/framework/data/DataFilterTest.php
index 1508a28ccde..aec273c9a5b 100644
--- a/tests/framework/data/DataFilterTest.php
+++ b/tests/framework/data/DataFilterTest.php
@@ -17,7 +17,7 @@
  */
 class DataFilterTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/data/PaginationTest.php b/tests/framework/data/PaginationTest.php
index a50cba3745c..4dee36e6d3e 100644
--- a/tests/framework/data/PaginationTest.php
+++ b/tests/framework/data/PaginationTest.php
@@ -16,7 +16,7 @@
  */
 class PaginationTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication([
diff --git a/tests/framework/data/SortTest.php b/tests/framework/data/SortTest.php
index c9bb1884212..27a4659cbc7 100644
--- a/tests/framework/data/SortTest.php
+++ b/tests/framework/data/SortTest.php
@@ -19,7 +19,7 @@
  */
 class SortTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/db/ActiveQueryModelConnectionTest.php b/tests/framework/db/ActiveQueryModelConnectionTest.php
index 86dff975fd4..e14b6824d4b 100644
--- a/tests/framework/db/ActiveQueryModelConnectionTest.php
+++ b/tests/framework/db/ActiveQueryModelConnectionTest.php
@@ -17,7 +17,7 @@ class ActiveQueryModelConnectionTest extends TestCase
     private $globalConnection;
     private $modelConnection;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->globalConnection = $this->getMockBuilder('yii\db\Connection')->getMock();
         $this->modelConnection = $this->getMockBuilder('yii\db\Connection')->getMock();
diff --git a/tests/framework/db/ActiveQueryTest.php b/tests/framework/db/ActiveQueryTest.php
index 3d3f451865c..3867d3ccb98 100644
--- a/tests/framework/db/ActiveQueryTest.php
+++ b/tests/framework/db/ActiveQueryTest.php
@@ -22,7 +22,7 @@
  */
 abstract class ActiveQueryTest extends DatabaseTestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
diff --git a/tests/framework/db/ActiveRecordTest.php b/tests/framework/db/ActiveRecordTest.php
index e50cca3e024..389f470c768 100644
--- a/tests/framework/db/ActiveRecordTest.php
+++ b/tests/framework/db/ActiveRecordTest.php
@@ -44,7 +44,7 @@ abstract class ActiveRecordTest extends DatabaseTestCase
 {
     use ActiveRecordTestTrait;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
@@ -199,7 +199,7 @@ public function testFindLazyViaTable()
         $this->assertCount(0, $order->books);
 
         $order = Order::find()->where(['id' => 1])->asArray()->one();
-        $this->assertInternalType('array', $order);
+        $this->assertIsArray($order);
     }
 
     public function testFindEagerViaTable()
@@ -225,10 +225,10 @@ public function testFindEagerViaTable()
         // https://github.com/yiisoft/yii2/issues/1402
         $orders = Order::find()->with('books')->orderBy('id')->asArray()->all();
         $this->assertCount(3, $orders);
-        $this->assertInternalType('array', $orders[0]['orderItems'][0]);
+        $this->assertIsArray($orders[0]['orderItems'][0]);
 
         $order = $orders[0];
-        $this->assertInternalType('array', $order);
+        $this->assertIsArray($order);
         $this->assertEquals(1, $order['id']);
         $this->assertCount(2, $order['books']);
         $this->assertEquals(1, $order['books'][0]['id']);
@@ -1123,7 +1123,7 @@ public function testFindSimpleRelationWithJoin()
         $this->assertInstanceOf('yiiunit\data\ar\Customer', $customerWithJoin);
 
         $customerWithJoinIndexOrdered = $order->customerJoinedWithProfileIndexOrdered;
-        $this->assertInternalType('array', $customerWithJoinIndexOrdered);
+        $this->assertIsArray($customerWithJoinIndexOrdered);
         $this->assertArrayHasKey('user1', $customerWithJoinIndexOrdered);
         $this->assertInstanceOf('yiiunit\data\ar\Customer', $customerWithJoinIndexOrdered['user1']);
     }
@@ -1424,9 +1424,6 @@ public function testUnlinkAllViaTable()
         $this->assertEquals(5, $itemClass::find()->count());
     }
 
-    /**
-     * @requires PHP 5.6
-     */
     public function testCastValues()
     {
         $model = new Type();
@@ -1447,13 +1444,13 @@ public function testCastValues()
         $this->assertSame(123, $model->int_col);
         $this->assertSame(456, $model->int_col2);
         $this->assertSame(42, $model->smallint_col);
-        $this->assertSame('1337', trim($model->char_col));
+        $this->assertSame('1337', trim((string) $model->char_col));
         $this->assertSame('test', $model->char_col2);
         $this->assertSame('test123', $model->char_col3);
-//        $this->assertSame(1337.42, $model->float_col);
-//        $this->assertSame(42.1337, $model->float_col2);
-//        $this->assertSame(true, $model->bool_col);
-//        $this->assertSame(false, $model->bool_col2);
+        $this->assertSame(3.742, $model->float_col);
+        $this->assertSame(42.1337, $model->float_col2);
+        $this->assertSame(true, $model->bool_col);
+        $this->assertSame(false, $model->bool_col2);
     }
 
     public function testIssues()
@@ -1937,6 +1934,8 @@ public function testLegalValuesForFindByCondition($modelClassName, $validFilter)
         /** @var Query $query */
         $query = $this->invokeMethod(\Yii::createObject($modelClassName), 'findByCondition', [$validFilter]);
         Customer::getDb()->queryBuilder->build($query);
+
+        $this->assertTrue(true);
     }
 
     public function illegalValuesForFindByCondition()
@@ -1973,8 +1972,8 @@ public function illegalValuesForFindByCondition()
      */
     public function testValueEscapingInFindByCondition($modelClassName, $filterWithInjection)
     {
-        $this->expectException('yii\base\InvalidArgumentException');
-        $this->expectExceptionMessageRegExp('/^Key "(.+)?" is not a column name and can not be used as a filter$/');
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessageMatches('/^Key "(.+)?" is not a column name and can not be used as a filter$/');
         /** @var Query $query */
         $query = $this->invokeMethod(\Yii::createObject($modelClassName), 'findByCondition', $filterWithInjection);
         Customer::getDb()->queryBuilder->build($query);
@@ -2090,15 +2089,6 @@ public function testResetNotSavedRelation()
         $this->assertEquals(1, sizeof($order->orderItems));
     }
 
-    public function testIssetException()
-    {
-        $cat = new Cat();
-        $this->assertFalse(isset($cat->exception));
-    }
-
-    /**
-     * @requires PHP 7
-     */
     public function testIssetThrowable()
     {
         $cat = new Cat();
diff --git a/tests/framework/db/BaseActiveRecordTest.php b/tests/framework/db/BaseActiveRecordTest.php
index 0427421cd81..a06fc68d992 100644
--- a/tests/framework/db/BaseActiveRecordTest.php
+++ b/tests/framework/db/BaseActiveRecordTest.php
@@ -6,7 +6,7 @@
 
 abstract class BaseActiveRecordTest extends DatabaseTestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
@@ -28,6 +28,10 @@ public function provideArrayValueWithChange()
                 ['pineapple' => 2, 'apple' => 5, 'banana' => 1],
                 ['pineapple' => 2, 'apple' => 3, 'banana' => 1],
             ],
+            'multi-dimensional array' => [
+                ['foo' => ['c', 'b', 'a']],
+                ['foo' => ['b', 'c', 'a']],
+            ],
 
             'filling an empty array' => [
                 [],
diff --git a/tests/framework/db/BatchQueryResultTest.php b/tests/framework/db/BatchQueryResultTest.php
index 54487083e72..3086bc19329 100644
--- a/tests/framework/db/BatchQueryResultTest.php
+++ b/tests/framework/db/BatchQueryResultTest.php
@@ -14,7 +14,7 @@
 
 abstract class BatchQueryResultTest extends DatabaseTestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
diff --git a/tests/framework/db/CommandTest.php b/tests/framework/db/CommandTest.php
index 041b788f3c1..cd3ecc6d686 100644
--- a/tests/framework/db/CommandTest.php
+++ b/tests/framework/db/CommandTest.php
@@ -193,7 +193,7 @@ public function testBindParamValue()
             $command->bindParam(':blob_col', $blobCol);
             $command->bindParam(':bool_col', $boolCol, \PDO::PARAM_BOOL);
         } else {
-            $floatCol = 1.23;
+            $floatCol = 1.230;
             $numericCol = '1.23';
             $blobCol = "\x10\x11\x12";
             $boolCol = false;
@@ -210,13 +210,13 @@ public function testBindParamValue()
         $row = $command->queryOne();
         $this->assertEquals($intCol, $row['int_col']);
         $this->assertEquals($charCol, $row['char_col']);
-        $this->assertEquals($floatCol, $row['float_col']);
+        $this->assertEquals($floatCol, (float) $row['float_col']);
         if ($this->driverName === 'mysql' || $this->driverName === 'sqlite' || $this->driverName === 'oci') {
             $this->assertEquals($blobCol, $row['blob_col']);
         } elseif (\defined('HHVM_VERSION') && $this->driverName === 'pgsql') {
             // HHVMs pgsql implementation does not seem to support blob columns correctly.
         } else {
-            $this->assertInternalType('resource', $row['blob_col']);
+            $this->assertIsResource($row['blob_col']);
             $this->assertEquals($blobCol, stream_get_contents($row['blob_col']));
         }
         $this->assertEquals($numericCol, $row['numeric_col']);
@@ -281,7 +281,7 @@ public function testFetchMode()
         $command = $db->createCommand($sql);
         $command->fetchMode = \PDO::FETCH_OBJ;
         $result = $command->queryOne();
-        $this->assertInternalType('object', $result);
+        $this->assertIsObject($result);
 
         // FETCH_NUM, customized in query method
         $sql = 'SELECT * FROM {{customer}}';
@@ -315,11 +315,7 @@ public function testBatchInsert()
 
     public function testBatchInsertWithYield()
     {
-        if (PHP_VERSION_ID < 50500) {
-            $this->markTestSkipped('The yield function is only supported with php 5.5 =< version');
-        } else {
-            include __DIR__ . '/testBatchInsertWithYield.php';
-        }
+        include __DIR__ . '/testBatchInsertWithYield.php';
     }
 
     /**
@@ -623,8 +619,7 @@ public function invalidSelectColumns()
      * Test INSERT INTO ... SELECT SQL statement with wrong query object.
      *
      * @dataProvider invalidSelectColumns
-     * @expectedException \yii\base\InvalidParamException
-     * @expectedExceptionMessage Expected select query object with enumerated (named) parameters
+     *
      * @param mixed $invalidSelectColumns
      */
     public function testInsertSelectFailed($invalidSelectColumns)
@@ -634,10 +629,13 @@ public function testInsertSelectFailed($invalidSelectColumns)
 
         $db = $this->getConnection();
         $command = $db->createCommand();
-        $command->insert(
-            '{{customer}}',
-            $query
-        )->execute();
+
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Expected select query object with enumerated (named) parameters');
+
+        $this->expectException('yii\base\InvalidParamException');
+        $this->expectExceptionMessage('Expected select query object with enumerated (named) parameters');
+        $command->insert('{{customer}}', $query)->execute();
     }
 
     public function testInsertExpression()
@@ -1208,9 +1206,13 @@ public function testAddDropUnique()
     public function testAddDropCheck()
     {
         $db = $this->getConnection(false);
+
+        if (version_compare($db->getServerVersion(), '8.0.16', '<')) {
+            $this->markTestSkipped('MySQL < 8.0.16 does not support CHECK constraints.');
+        }
+
         $tableName = 'test_ck';
         $name = 'test_ck_constraint';
-        /** @var \yii\db\pgsql\Schema $schema */
         $schema = $db->getSchema();
 
         if ($schema->getTableSchema($tableName) !== null) {
@@ -1222,9 +1224,13 @@ public function testAddDropCheck()
 
         $this->assertEmpty($schema->getTableChecks($tableName, true));
         $db->createCommand()->addCheck($name, $tableName, '[[int1]] > 1')->execute();
-        $this->assertRegExp('/^.*int1.*>.*1.*$/', $schema->getTableChecks($tableName, true)[0]->expression);
+        $this->assertMatchesRegularExpression(
+            '/^.*int1.*>.*1.*$/',
+            $schema->getTableChecks($tableName, true)[0]->expression
+        );
 
         $db->createCommand()->dropCheck($name, $tableName)->execute();
+
         $this->assertEmpty($schema->getTableChecks($tableName, true));
     }
 
diff --git a/tests/framework/db/ConnectionTest.php b/tests/framework/db/ConnectionTest.php
index a155517ffdf..8b3a4f65d6d 100644
--- a/tests/framework/db/ConnectionTest.php
+++ b/tests/framework/db/ConnectionTest.php
@@ -224,18 +224,20 @@ public function testTransactionIsolation()
         $this->assertTrue(true); // should not be any exception so far
     }
 
-    /**
-     * @expectedException \Exception
-     */
     public function testTransactionShortcutException()
     {
         $connection = $this->getConnection(true);
+
+        $this->expectException(\Exception::class);
+
         $connection->transaction(function () use ($connection) {
             $connection->createCommand()->insert('profile', ['description' => 'test transaction shortcut'])->execute();
             throw new \Exception('Exception in transaction shortcut');
         });
 
-        $profilesCount = $connection->createCommand("SELECT COUNT(*) FROM profile WHERE description = 'test transaction shortcut';")->queryScalar();
+        $profilesCount = $connection
+            ->createCommand("SELECT COUNT(*) FROM profile WHERE description = 'test transaction shortcut';")
+            ->queryScalar();
         $this->assertEquals(0, $profilesCount, 'profile should not be inserted in transaction shortcut');
     }
 
@@ -400,7 +402,11 @@ private function runExceptionTest($connection)
         try {
             $connection->createCommand('INSERT INTO qlog1(a) VALUES(:a);', [':a' => 1])->execute();
         } catch (\yii\db\Exception $e) {
-            $this->assertContains('INSERT INTO qlog1(a) VALUES(1);', $e->getMessage(), 'Exception message should contain raw SQL query: ' . (string) $e);
+            $this->assertStringContainsString(
+                'INSERT INTO qlog1(a) VALUES(1);',
+                $e->getMessage(),
+                'Exception message should contain raw SQL query: ' . (string) $e
+            );
             $thrown = true;
         }
         $this->assertTrue($thrown, 'An exception should have been thrown by the command.');
@@ -409,7 +415,10 @@ private function runExceptionTest($connection)
         try {
             $connection->createCommand('SELECT * FROM qlog1 WHERE id=:a ORDER BY nonexistingcolumn;', [':a' => 1])->queryAll();
         } catch (\yii\db\Exception $e) {
-            $this->assertContains('SELECT * FROM qlog1 WHERE id=1 ORDER BY nonexistingcolumn;', $e->getMessage(), 'Exception message should contain raw SQL query: ' . (string) $e);
+            $this->assertStringContainsString(
+                'SELECT * FROM qlog1 WHERE id=1 ORDER BY nonexistingcolumn;',
+                $e->getMessage(), 'Exception message should contain raw SQL query: ' . (string) $e,
+            );
             $thrown = true;
         }
         $this->assertTrue($thrown, 'An exception should have been thrown by the command.');
diff --git a/tests/framework/db/DatabaseTestCase.php b/tests/framework/db/DatabaseTestCase.php
index 53ea945623e..c9275ebcfaf 100644
--- a/tests/framework/db/DatabaseTestCase.php
+++ b/tests/framework/db/DatabaseTestCase.php
@@ -24,7 +24,7 @@ abstract class DatabaseTestCase extends TestCase
     private $_db;
 
 
-    protected function setUp()
+    protected function setUp(): void
     {
         if ($this->driverName === null) {
             throw new \Exception('driverName is not set for a DatabaseTestCase.');
@@ -44,7 +44,7 @@ protected function setUp()
         $this->mockApplication();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         if ($this->_db) {
             $this->_db->close();
diff --git a/tests/framework/db/QueryTest.php b/tests/framework/db/QueryTest.php
index 4de29107045..515f70a485a 100644
--- a/tests/framework/db/QueryTest.php
+++ b/tests/framework/db/QueryTest.php
@@ -333,8 +333,7 @@ public function testLimitOffsetWithExpression()
         $this->assertCount(2, $result);
 
         $this->assertNotContains(1, $result);
-        $this->assertContains(2, $result);
-        $this->assertContains(3, $result);
+        $this->assertEquals([2, 3], $result);
     }
 
     public function testUnion()
diff --git a/tests/framework/db/SchemaTest.php b/tests/framework/db/SchemaTest.php
index af02b2170b6..ecbc35490d5 100644
--- a/tests/framework/db/SchemaTest.php
+++ b/tests/framework/db/SchemaTest.php
@@ -528,7 +528,7 @@ public function testColumnSchema()
             $this->assertSame($expected['precision'], $column->precision, "precision of column $name does not match.");
             $this->assertSame($expected['scale'], $column->scale, "scale of column $name does not match.");
             if (\is_object($expected['defaultValue'])) {
-                $this->assertInternalType('object', $column->defaultValue, "defaultValue of column $name is expected to be an object but it is not.");
+                $this->assertIsObject($column->defaultValue, "defaultValue of column $name is expected to be an object but it is not.");
                 $this->assertEquals((string)$expected['defaultValue'], (string)$column->defaultValue, "defaultValue of column $name does not match.");
             } else {
                 $this->assertEquals($expected['defaultValue'], $column->defaultValue, "defaultValue of column $name does not match.");
@@ -545,6 +545,39 @@ public function testColumnSchemaDbTypecastWithEmptyCharType()
         $this->assertSame('', $columnSchema->dbTypecast(''));
     }
 
+    /**
+     * @dataProvider columnSchemaDbTypecastBooleanPhpTypeProvider
+     * @param mixed $value
+     * @param bool $expected
+     */
+    public function testColumnSchemaDbTypecastBooleanPhpType($value, $expected)
+    {
+        $columnSchema = new ColumnSchema(['phpType' => Schema::TYPE_BOOLEAN]);
+        $this->assertSame($expected, $columnSchema->dbTypecast($value));
+    }
+
+    public function columnSchemaDbTypecastBooleanPhpTypeProvider()
+    {
+        return [
+            [1, true],
+            [0, false],
+            ['1', true],
+            ['0', false],
+
+            // https://github.com/yiisoft/yii2/issues/9006
+            ["\1", true],
+            ["\0", false],
+
+            // https://github.com/yiisoft/yii2/pull/20122
+            ['TRUE', true],
+            ['FALSE', false],
+            ['true', true],
+            ['false', false],
+            ['True', true],
+            ['False', false],
+        ];
+    }
+
     public function testFindUniqueIndexes()
     {
         if ($this->driverName === 'sqlsrv') {
@@ -780,14 +813,27 @@ public function testTableSchemaConstraintsWithPdoLowercase($tableName, $type, $e
         $this->assertMetadataEquals($expected, $constraints);
     }
 
-    private function assertMetadataEquals($expected, $actual)
+    protected function assertMetadataEquals($expected, $actual)
     {
-        $this->assertInternalType(strtolower(\gettype($expected)), $actual);
+        switch (\strtolower(\gettype($expected))) {
+            case 'object':
+                $this->assertIsObject($actual);
+                break;
+            case 'array':
+                $this->assertIsArray($actual);
+                break;
+            case 'null':
+                $this->assertNull($actual);
+                break;
+        }
+
         if (\is_array($expected)) {
             $this->normalizeArrayKeys($expected, false);
             $this->normalizeArrayKeys($actual, false);
         }
+
         $this->normalizeConstraints($expected, $actual);
+
         if (\is_array($expected)) {
             $this->normalizeArrayKeys($expected, true);
             $this->normalizeArrayKeys($actual, true);
@@ -795,7 +841,7 @@ private function assertMetadataEquals($expected, $actual)
         $this->assertEquals($expected, $actual);
     }
 
-    private function normalizeArrayKeys(array &$array, $caseSensitive)
+    protected function normalizeArrayKeys(array &$array, $caseSensitive)
     {
         $newArray = [];
         foreach ($array as $value) {
@@ -819,7 +865,7 @@ private function normalizeArrayKeys(array &$array, $caseSensitive)
         $array = $newArray;
     }
 
-    private function normalizeConstraints(&$expected, &$actual)
+    protected function normalizeConstraints(&$expected, &$actual)
     {
         if (\is_array($expected)) {
             foreach ($expected as $key => $value) {
@@ -834,7 +880,7 @@ private function normalizeConstraints(&$expected, &$actual)
         }
     }
 
-    private function normalizeConstraintPair(Constraint $expectedConstraint, Constraint $actualConstraint)
+    protected function normalizeConstraintPair(Constraint $expectedConstraint, Constraint $actualConstraint)
     {
         if ($expectedConstraint::className() !== $actualConstraint::className()) {
             return;
diff --git a/tests/framework/db/mssql/ActiveRecordTest.php b/tests/framework/db/mssql/ActiveRecordTest.php
index 6b6841fa138..d126436bdcd 100644
--- a/tests/framework/db/mssql/ActiveRecordTest.php
+++ b/tests/framework/db/mssql/ActiveRecordTest.php
@@ -11,6 +11,7 @@
 use yii\db\Expression;
 use yiiunit\data\ar\TestTrigger;
 use yiiunit\data\ar\TestTriggerAlert;
+use yiiunit\data\ar\Type;
 
 /**
  * @group db
@@ -25,6 +26,35 @@ public function testExplicitPkOnAutoIncrement()
         $this->markTestSkipped('MSSQL does not support explicit value for an IDENTITY column.');
     }
 
+    public function testCastValues()
+    {
+        $model = new Type();
+        $model->int_col = 123;
+        $model->int_col2 = 456;
+        $model->smallint_col = 42;
+        $model->char_col = '1337';
+        $model->char_col2 = 'test';
+        $model->char_col3 = 'test123';
+        $model->float_col = 3.742;
+        $model->float_col2 = 42.1337;
+        $model->bool_col = true;
+        $model->bool_col2 = false;
+        $model->save(false);
+
+        /* @var $model Type */
+        $model = Type::find()->one();
+        $this->assertSame(123, $model->int_col);
+        $this->assertSame(456, $model->int_col2);
+        $this->assertSame(42, $model->smallint_col);
+        $this->assertSame('1337', trim((string) $model->char_col));
+        $this->assertSame('test', $model->char_col2);
+        $this->assertSame('test123', $model->char_col3);
+        //$this->assertSame(3.742, $model->float_col);
+        //$this->assertSame(42.1337, $model->float_col2);
+        //$this->assertSame(true, $model->bool_col);
+        //$this->assertSame(false, $model->bool_col2);
+    }
+
     /**
      * @throws Exception
      */
diff --git a/tests/framework/db/mssql/CommandTest.php b/tests/framework/db/mssql/CommandTest.php
index 25a58a3a9e4..76c68cc8127 100644
--- a/tests/framework/db/mssql/CommandTest.php
+++ b/tests/framework/db/mssql/CommandTest.php
@@ -55,7 +55,7 @@ public function testBindParamValue()
         $command = $db->createCommand($sql);
         $intCol = 123;
         $charCol = 'abc';
-        $floatCol = 1.23;
+        $floatCol = 1.230;
         $blobCol = "\x10\x11\x12";
         $numericCol = '1.23';
         $boolCol = false;
@@ -69,9 +69,10 @@ public function testBindParamValue()
 
         $sql = 'SELECT int_col, char_col, float_col, CONVERT([nvarchar], blob_col) AS blob_col, numeric_col FROM type';
         $row = $db->createCommand($sql)->queryOne();
+
         $this->assertEquals($intCol, $row['int_col']);
         $this->assertEquals($charCol, trim($row['char_col']));
-        $this->assertEquals($floatCol, $row['float_col']);
+        $this->assertEquals($floatCol, (float) $row['float_col']);
         $this->assertEquals($blobCol, $row['blob_col']);
         $this->assertEquals($numericCol, $row['numeric_col']);
 
@@ -113,7 +114,7 @@ public function testAddDropDefaultValue()
 
         $this->assertEmpty($schema->getTableDefaultValues($tableName, true));
         $db->createCommand()->addDefaultValue($name, $tableName, 'int1', 41)->execute();
-        $this->assertRegExp('/^.*41.*$/', $schema->getTableDefaultValues($tableName, true)[0]->value);
+        $this->assertMatchesRegularExpression('/^.*41.*$/', $schema->getTableDefaultValues($tableName, true)[0]->value);
 
         $db->createCommand()->dropDefaultValue($name, $tableName)->execute();
         $this->assertEmpty($schema->getTableDefaultValues($tableName, true));
diff --git a/tests/framework/db/mssql/type/VarbinaryTest.php b/tests/framework/db/mssql/type/VarbinaryTest.php
index b72a2b4c469..0840996f703 100644
--- a/tests/framework/db/mssql/type/VarbinaryTest.php
+++ b/tests/framework/db/mssql/type/VarbinaryTest.php
@@ -5,7 +5,7 @@
  * @license https://www.yiiframework.com/license/
  */
 
-namespace yiiunit\framework\db\mssql\Type;
+namespace yiiunit\framework\db\mssql\type;
 
 use yii\db\Query;
 use yiiunit\framework\db\DatabaseTestCase;
diff --git a/tests/framework/db/mysql/ActiveRecordTest.php b/tests/framework/db/mysql/ActiveRecordTest.php
index 27105693fed..95b91001179 100644
--- a/tests/framework/db/mysql/ActiveRecordTest.php
+++ b/tests/framework/db/mysql/ActiveRecordTest.php
@@ -8,6 +8,7 @@
 namespace yiiunit\framework\db\mysql;
 
 use yiiunit\data\ar\Storage;
+use yiiunit\data\ar\Type;
 
 /**
  * @group db
@@ -17,6 +18,35 @@ class ActiveRecordTest extends \yiiunit\framework\db\ActiveRecordTest
 {
     public $driverName = 'mysql';
 
+    public function testCastValues()
+    {
+        $model = new Type();
+        $model->int_col = 123;
+        $model->int_col2 = 456;
+        $model->smallint_col = 42;
+        $model->char_col = '1337';
+        $model->char_col2 = 'test';
+        $model->char_col3 = 'test123';
+        $model->float_col = 3.742;
+        $model->float_col2 = 42.1337;
+        $model->bool_col = true;
+        $model->bool_col2 = false;
+        $model->save(false);
+
+        /* @var $model Type */
+        $model = Type::find()->one();
+        $this->assertSame(123, $model->int_col);
+        $this->assertSame(456, $model->int_col2);
+        $this->assertSame(42, $model->smallint_col);
+        $this->assertSame('1337', trim((string) $model->char_col));
+        $this->assertSame('test', $model->char_col2);
+        $this->assertSame('test123', $model->char_col3);
+        $this->assertSame(3.742, $model->float_col);
+        $this->assertSame(42.1337, $model->float_col2);
+        //$this->assertSame(true, $model->bool_col);
+        //$this->assertSame(false, $model->bool_col2);
+    }
+
     public function testJsonColumn()
     {
         if (version_compare($this->getConnection()->getSchema()->getServerVersion(), '5.7', '<')) {
diff --git a/tests/framework/db/mysql/BaseActiveRecordTest.php b/tests/framework/db/mysql/BaseActiveRecordTest.php
index 394922e87f7..8acdc27ac8a 100644
--- a/tests/framework/db/mysql/BaseActiveRecordTest.php
+++ b/tests/framework/db/mysql/BaseActiveRecordTest.php
@@ -4,6 +4,10 @@
 
 use yiiunit\data\ar\Storage;
 
+/**
+ * @group db
+ * @group mysql
+ */
 class BaseActiveRecordTest extends \yiiunit\framework\db\BaseActiveRecordTest
 {
     public $driverName = 'mysql';
diff --git a/tests/framework/db/mysql/CommandTest.php b/tests/framework/db/mysql/CommandTest.php
index 0cd6e63aabf..6619a93e636 100644
--- a/tests/framework/db/mysql/CommandTest.php
+++ b/tests/framework/db/mysql/CommandTest.php
@@ -17,8 +17,61 @@ class CommandTest extends \yiiunit\framework\db\CommandTest
 
     protected $upsertTestCharCast = 'CONVERT([[address]], CHAR)';
 
-    public function testAddDropCheck()
+    public function testAddDropCheckSeveral()
     {
-        $this->markTestSkipped('MySQL does not support adding/dropping check constraints.');
+        $db = $this->getConnection(false);
+
+        if (version_compare($db->getServerVersion(), '8.0.16', '<')) {
+            $this->markTestSkipped('MySQL < 8.0.16 does not support CHECK constraints.');
+        }
+
+        $tableName = 'test_ck_several';
+        $schema = $db->getSchema();
+
+        if ($schema->getTableSchema($tableName) !== null) {
+            $db->createCommand()->dropTable($tableName)->execute();
+        }
+        $db->createCommand()->createTable($tableName, [
+            'int1' => 'integer',
+            'int2' => 'integer',
+            'int3' => 'integer',
+            'int4' => 'integer',
+        ])->execute();
+
+        $this->assertEmpty($schema->getTableChecks($tableName, true));
+
+        $constraints = [
+            ['name' => 'check_int1_positive', 'expression' => '[[int1]] > 0', 'expected' => '(`int1` > 0)'],
+            ['name' => 'check_int2_nonzero', 'expression' => '[[int2]] <> 0', 'expected' => '(`int2` <> 0)'],
+            ['name' => 'check_int3_less_than_100', 'expression' => '[[int3]] < 100', 'expected' => '(`int3` < 100)'],
+            ['name' => 'check_int1_less_than_int2', 'expression' => '[[int1]] < [[int2]]', 'expected' => '(`int1` < `int2`)'],
+        ];
+
+        if (\stripos($db->getServerVersion(), 'MariaDb') !== false) {
+            $constraints[0]['expected'] = '`int1` > 0';
+            $constraints[1]['expected'] = '`int2` <> 0';
+            $constraints[2]['expected'] = '`int3` < 100';
+            $constraints[3]['expected'] = '`int1` < `int2`';
+        }
+
+        foreach ($constraints as $constraint) {
+            $db->createCommand()->addCheck($constraint['name'], $tableName, $constraint['expression'])->execute();
+        }
+
+        $tableChecks = $schema->getTableChecks($tableName, true);
+        $this->assertCount(4, $tableChecks);
+
+        foreach ($constraints as $index => $constraint) {
+            $this->assertSame(
+                $constraints[$index]['expected'],
+                $tableChecks[$index]->expression
+            );
+        }
+
+        foreach ($constraints as $constraint) {
+            $db->createCommand()->dropCheck($constraint['name'], $tableName)->execute();
+        }
+
+        $this->assertEmpty($schema->getTableChecks($tableName, true));
     }
 }
diff --git a/tests/framework/db/mysql/QueryBuilderTest.php b/tests/framework/db/mysql/QueryBuilderTest.php
index 659bf1a9ee2..7097b8d2b61 100644
--- a/tests/framework/db/mysql/QueryBuilderTest.php
+++ b/tests/framework/db/mysql/QueryBuilderTest.php
@@ -196,11 +196,6 @@ public function uniquesProvider()
         return $result;
     }
 
-    public function checksProvider()
-    {
-        $this->markTestSkipped('Adding/dropping check constraints is not supported in MySQL.');
-    }
-
     public function defaultValuesProvider()
     {
         $this->markTestSkipped('Adding/dropping default constraints is not supported in MySQL.');
@@ -272,35 +267,35 @@ public function conditionProvider()
             // json conditions
             [
                 ['=', 'jsoncol', new JsonExpression(['lang' => 'uk', 'country' => 'UA'])],
-                '[[jsoncol]] = CAST(:qp0 AS JSON)', [':qp0' => '{"lang":"uk","country":"UA"}'],
+                '[[jsoncol]] = :qp0', [':qp0' => '{"lang":"uk","country":"UA"}'],
             ],
             [
                 ['=', 'jsoncol', new JsonExpression([false])],
-                '[[jsoncol]] = CAST(:qp0 AS JSON)', [':qp0' => '[false]']
+                '[[jsoncol]] = :qp0', [':qp0' => '[false]']
             ],
             'object with type. Type is ignored for MySQL' => [
                 ['=', 'prices', new JsonExpression(['seeds' => 15, 'apples' => 25], 'jsonb')],
-                '[[prices]] = CAST(:qp0 AS JSON)', [':qp0' => '{"seeds":15,"apples":25}'],
+                '[[prices]] = :qp0', [':qp0' => '{"seeds":15,"apples":25}'],
             ],
             'nested json' => [
                 ['=', 'data', new JsonExpression(['user' => ['login' => 'silverfire', 'password' => 'c4ny0ur34d17?'], 'props' => ['mood' => 'good']])],
-                '[[data]] = CAST(:qp0 AS JSON)', [':qp0' => '{"user":{"login":"silverfire","password":"c4ny0ur34d17?"},"props":{"mood":"good"}}']
+                '[[data]] = :qp0', [':qp0' => '{"user":{"login":"silverfire","password":"c4ny0ur34d17?"},"props":{"mood":"good"}}']
             ],
             'null value' => [
                 ['=', 'jsoncol', new JsonExpression(null)],
-                '[[jsoncol]] = CAST(:qp0 AS JSON)', [':qp0' => 'null']
+                '[[jsoncol]] = :qp0', [':qp0' => 'null']
             ],
             'null as array value' => [
                 ['=', 'jsoncol', new JsonExpression([null])],
-                '[[jsoncol]] = CAST(:qp0 AS JSON)', [':qp0' => '[null]']
+                '[[jsoncol]] = :qp0', [':qp0' => '[null]']
             ],
             'null as object value' => [
                 ['=', 'jsoncol', new JsonExpression(['nil' => null])],
-                '[[jsoncol]] = CAST(:qp0 AS JSON)', [':qp0' => '{"nil":null}']
+                '[[jsoncol]] = :qp0', [':qp0' => '{"nil":null}']
             ],
             'with object as value' => [
                 ['=', 'jsoncol', new JsonExpression(new DynamicModel(['a' => 1, 'b' => 2]))],
-                '[[jsoncol]] = CAST(:qp0 AS JSON)', [':qp0' => '{"a":1,"b":2}']
+                '[[jsoncol]] = :qp0', [':qp0' => '{"a":1,"b":2}']
             ],
             'query' => [
                 ['=', 'jsoncol', new JsonExpression((new Query())->select('params')->from('user')->where(['id' => 1]))],
@@ -312,7 +307,7 @@ public function conditionProvider()
             ],
             'nested and combined json expression' => [
                 ['=', 'jsoncol', new JsonExpression(new JsonExpression(['a' => 1, 'b' => 2, 'd' => new JsonExpression(['e' => 3])]))],
-                "[[jsoncol]] = CAST(:qp0 AS JSON)", [':qp0' => '{"a":1,"b":2,"d":{"e":3}}']
+                "[[jsoncol]] = :qp0", [':qp0' => '{"a":1,"b":2,"d":{"e":3}}']
             ],
             'search by property in JSON column (issue #15838)' => [
                 ['=', new Expression("(jsoncol->>'$.someKey')"), '42'],
@@ -333,7 +328,7 @@ public function updateProvider()
             [
                 'id' => 1,
             ],
-            $this->replaceQuotes('UPDATE [[profile]] SET [[description]]=CAST(:qp0 AS JSON) WHERE [[id]]=:qp1'),
+            $this->replaceQuotes('UPDATE [[profile]] SET [[description]]=:qp0 WHERE [[id]]=:qp1'),
             [
                 ':qp0' => '{"abc":"def","0":123,"1":null}',
                 ':qp1' => 1,
@@ -403,7 +398,7 @@ public function testDefaultValues()
         // primary key columns should have NULL as value
         $sql = $command->insert('null_values', [])->getRawSql();
         $this->assertEquals("INSERT INTO `null_values` (`id`) VALUES (NULL)", $sql);
-        
+
         // non-primary key columns should have DEFAULT as value
         $sql = $command->insert('negative_default_values', [])->getRawSql();
         $this->assertEquals("INSERT INTO `negative_default_values` (`tinyint_col`) VALUES (DEFAULT)", $sql);
diff --git a/tests/framework/db/mysql/QueryTest.php b/tests/framework/db/mysql/QueryTest.php
index 9f647308c6f..8d4847d6679 100644
--- a/tests/framework/db/mysql/QueryTest.php
+++ b/tests/framework/db/mysql/QueryTest.php
@@ -45,7 +45,6 @@ public function testLimitOffsetWithExpression()
         $this->assertCount(2, $result);
 
         $this->assertNotContains(1, $result);
-        $this->assertContains(2, $result);
-        $this->assertContains(3, $result);
+        $this->assertEquals([2, 3], $result);
     }
 }
diff --git a/tests/framework/db/mysql/SchemaTest.php b/tests/framework/db/mysql/SchemaTest.php
index 43a66a60b57..fc9aa46d652 100644
--- a/tests/framework/db/mysql/SchemaTest.php
+++ b/tests/framework/db/mysql/SchemaTest.php
@@ -77,19 +77,126 @@ public function testGetSchemaNames()
     public function constraintsProvider()
     {
         $result = parent::constraintsProvider();
-        $result['1: check'][2] = false;
 
+        $result['1: check'][2][0]->columnNames = null;
+        $result['1: check'][2][0]->expression = "`C_check` <> ''";
         $result['2: primary key'][2]->name = null;
-        $result['2: check'][2] = false;
 
         // Work aroung bug in MySQL 5.1 - it creates only this table in lowercase. O_o
         $result['3: foreign key'][2][0]->foreignTableName = new AnyCaseValue('T_constraints_2');
-        $result['3: check'][2] = false;
 
-        $result['4: check'][2] = false;
         return $result;
     }
 
+    /**
+     * @dataProvider constraintsProvider
+     * @param string $tableName
+     * @param string $type
+     * @param mixed $expected
+     */
+    public function testTableSchemaConstraints($tableName, $type, $expected)
+    {
+        $version = $this->getConnection(false)->getServerVersion();
+
+        if ($expected === false) {
+            $this->expectException('yii\base\NotSupportedException');
+        }
+
+        if (
+            $this->driverName === 'mysql' &&
+            \stripos($version, 'MariaDb') === false &&
+            version_compare($version, '8.0.16', '<') &&
+            $type === 'checks'
+        ) {
+            $this->expectException('yii\base\NotSupportedException');
+        } elseif (
+            $this->driverName === 'mysql' &&
+            \stripos($version, 'MariaDb') === false &&
+            version_compare($version, '8.0.16', '>=') &&
+            $tableName === 'T_constraints_1' &&
+            $type === 'checks'
+        ) {
+            $expected[0]->expression = "(`C_check` <> _utf8mb4\\'\\')";
+        }
+
+        $constraints = $this->getConnection(false)->getSchema()->{'getTable' . ucfirst($type)}($tableName);
+        $this->assertMetadataEquals($expected, $constraints);
+    }
+
+    /**
+     * @dataProvider uppercaseConstraintsProvider
+     * @param string $tableName
+     * @param string $type
+     * @param mixed $expected
+     */
+    public function testTableSchemaConstraintsWithPdoUppercase($tableName, $type, $expected)
+    {
+        $version = $this->getConnection(false)->getServerVersion();
+
+        if ($expected === false) {
+            $this->expectException('yii\base\NotSupportedException');
+        }
+
+        if (
+            $this->driverName === 'mysql' &&
+            \stripos($version, 'MariaDb') === false &&
+            version_compare($version, '8.0.16', '<') &&
+            $type === 'checks'
+        ) {
+            $this->expectException('yii\base\NotSupportedException');
+        } elseif (
+            $this->driverName === 'mysql' &&
+            \stripos($version, 'MariaDb') === false &&
+            version_compare($version, '8.0.16', '>=') &&
+            $tableName === 'T_constraints_1' &&
+            $type === 'checks'
+        ) {
+            $expected[0]->expression = "(`C_check` <> _utf8mb4\\'\\')";
+        }
+
+        $connection = $this->getConnection(false);
+        $connection->getSlavePdo(true)->setAttribute(\PDO::ATTR_CASE, \PDO::CASE_UPPER);
+        $constraints = $connection->getSchema()->{'getTable' . ucfirst($type)}($tableName, true);
+        $this->assertMetadataEquals($expected, $constraints);
+    }
+
+    /**
+     * @dataProvider lowercaseConstraintsProvider
+     * @param string $tableName
+     * @param string $type
+     * @param mixed $expected
+     */
+    public function testTableSchemaConstraintsWithPdoLowercase($tableName, $type, $expected)
+    {
+        $version = $this->getConnection(false)->getServerVersion();
+
+        if ($expected === false) {
+            $this->expectException('yii\base\NotSupportedException');
+        }
+
+        if (
+            $this->driverName === 'mysql' &&
+            \stripos($version, 'MariaDb') === false &&
+            version_compare($version, '8.0.16', '<') &&
+            $type === 'checks'
+        ) {
+            $this->expectException('yii\base\NotSupportedException');
+        } elseif (
+            $this->driverName === 'mysql' &&
+            \stripos($version, 'MariaDb') === false &&
+            version_compare($version, '8.0.16', '>=') &&
+            $tableName === 'T_constraints_1' &&
+            $type === 'checks'
+        ) {
+            $expected[0]->expression = "(`C_check` <> _utf8mb4\\'\\')";
+        }
+
+        $connection = $this->getConnection(false);
+        $connection->getSlavePdo(true)->setAttribute(\PDO::ATTR_CASE, \PDO::CASE_LOWER);
+        $constraints = $connection->getSchema()->{'getTable' . ucfirst($type)}($tableName, true);
+        $this->assertMetadataEquals($expected, $constraints);
+    }
+
     /**
      * When displayed in the INFORMATION_SCHEMA.COLUMNS table, a default CURRENT TIMESTAMP is displayed
      * as CURRENT_TIMESTAMP up until MariaDB 10.2.2, and as current_timestamp() from MariaDB 10.2.3.
@@ -148,87 +255,108 @@ public function testAlternativeDisplayOfDefaultCurrentTimestampAsNullInMariaDB()
 
     public function getExpectedColumns()
     {
-        $version = $this->getConnection()->getSchema()->getServerVersion();
+        $version = $this->getConnection(false)->getServerVersion();
 
         $columns = array_merge(
             parent::getExpectedColumns(),
             [
                 'int_col' => [
                     'type' => 'integer',
-                    'dbType' => \version_compare($version, '8.0.17', '>') ? 'int' : 'int(11)',
+                    'dbType' => 'int(11)',
                     'phpType' => 'integer',
                     'allowNull' => false,
                     'autoIncrement' => false,
                     'enumValues' => null,
-                    'size' => \version_compare($version, '8.0.17', '>') ? null : 11,
-                    'precision' => \version_compare($version, '8.0.17', '>') ? null : 11,
+                    'size' => 11,
+                    'precision' => 11,
                     'scale' => null,
                     'defaultValue' => null,
                 ],
                 'int_col2' => [
                     'type' => 'integer',
-                    'dbType' => \version_compare($version, '8.0.17', '>') ? 'int' : 'int(11)',
+                    'dbType' => 'int(11)',
                     'phpType' => 'integer',
                     'allowNull' => true,
                     'autoIncrement' => false,
                     'enumValues' => null,
-                    'size' => \version_compare($version, '8.0.17', '>') ? null : 11,
-                    'precision' => \version_compare($version, '8.0.17', '>') ? null : 11,
+                    'size' => 11,
+                    'precision' => 11,
                     'scale' => null,
                     'defaultValue' => 1,
                 ],
                 'int_col3' => [
                     'type' => 'integer',
-                    'dbType' => \version_compare($version, '8.0.17', '>') ? 'int unsigned' : 'int(11) unsigned',
+                    'dbType' => 'int(11) unsigned',
                     'phpType' => 'integer',
                     'allowNull' => true,
                     'autoIncrement' => false,
                     'enumValues' => null,
-                    'size' => \version_compare($version, '8.0.17', '>') ? null : 11,
-                    'precision' => \version_compare($version, '8.0.17', '>') ? null : 11,
+                    'size' => 11,
+                    'precision' => 11,
                     'scale' => null,
                     'defaultValue' => 1,
                 ],
                 'tinyint_col' => [
                     'type' => 'tinyint',
-                    'dbType' => \version_compare($version, '8.0.17', '>') ? 'tinyint' : 'tinyint(3)',
+                    'dbType' => 'tinyint(3)',
                     'phpType' => 'integer',
                     'allowNull' => true,
                     'autoIncrement' => false,
                     'enumValues' => null,
-                    'size' => \version_compare($version, '8.0.17', '>') ? null : 3,
-                    'precision' => \version_compare($version, '8.0.17', '>') ? null : 3,
+                    'size' => 3,
+                    'precision' => 3,
                     'scale' => null,
                     'defaultValue' => 1,
                 ],
                 'smallint_col' => [
                     'type' => 'smallint',
-                    'dbType' =>  \version_compare($version, '8.0.17', '>') ? 'smallint' : 'smallint(1)',
+                    'dbType' =>  'smallint(1)',
                     'phpType' => 'integer',
                     'allowNull' => true,
                     'autoIncrement' => false,
                     'enumValues' => null,
-                    'size' => \version_compare($version, '8.0.17', '>') ? null : 1,
-                    'precision' => \version_compare($version, '8.0.17', '>') ? null : 1,
+                    'size' => 1,
+                    'precision' => 1,
                     'scale' => null,
                     'defaultValue' => 1,
                 ],
                 'bigint_col' => [
                     'type' => 'bigint',
-                    'dbType' => \version_compare($version, '8.0.17', '>') ? 'bigint unsigned' : 'bigint(20) unsigned',
+                    'dbType' => 'bigint(20) unsigned',
                     'phpType' => 'string',
                     'allowNull' => true,
                     'autoIncrement' => false,
                     'enumValues' => null,
-                    'size' => \version_compare($version, '8.0.17', '>') ? null : 20,
-                    'precision' => \version_compare($version, '8.0.17', '>') ? null : 20,
+                    'size' => 20,
+                    'precision' => 20,
                     'scale' => null,
                     'defaultValue' => null,
                 ],
             ]
         );
 
-        if (version_compare($version, '5.7', '<')) {
+        if (\version_compare($version, '8.0.17', '>') && \stripos($version, 'MariaDb') === false) {
+            $columns['int_col']['dbType'] = 'int';
+            $columns['int_col']['size'] = null;
+            $columns['int_col']['precision'] = null;
+            $columns['int_col2']['dbType'] = 'int';
+            $columns['int_col2']['size'] = null;
+            $columns['int_col2']['precision'] = null;
+            $columns['int_col3']['dbType'] = 'int unsigned';
+            $columns['int_col3']['size'] = null;
+            $columns['int_col3']['precision'] = null;
+            $columns['tinyint_col']['dbType'] = 'tinyint';
+            $columns['tinyint_col']['size'] = null;
+            $columns['tinyint_col']['precision'] = null;
+            $columns['smallint_col']['dbType'] = 'smallint';
+            $columns['smallint_col']['size'] = null;
+            $columns['smallint_col']['precision'] = null;
+            $columns['bigint_col']['dbType'] = 'bigint unsigned';
+            $columns['bigint_col']['size'] = null;
+            $columns['bigint_col']['precision'] = null;
+        }
+
+        if (version_compare($version, '5.7', '<') && \stripos($version, 'MariaDb') === false) {
             $columns['int_col3']['phpType'] = 'string';
             $columns['json_col']['type'] = 'text';
             $columns['json_col']['dbType'] = 'longtext';
diff --git a/tests/framework/db/mysql/connection/DeadLockTest.php b/tests/framework/db/mysql/connection/DeadLockTest.php
index 6e3da047eea..550b2852a69 100644
--- a/tests/framework/db/mysql/connection/DeadLockTest.php
+++ b/tests/framework/db/mysql/connection/DeadLockTest.php
@@ -31,6 +31,9 @@ class DeadLockTest extends \yiiunit\framework\db\mysql\ConnectionTest
      */
     public function testDeadlockException()
     {
+        if (\stripos($this->getConnection(false)->getServerVersion(), 'MariaDB') !== false) {
+            $this->markTestSkipped('MariaDB does not support this test');
+        }
         if (PHP_VERSION_ID >= 70400 && PHP_VERSION_ID < 70500) {
             $this->markTestSkipped('Stable failed in PHP 7.4');
         }
diff --git a/tests/framework/db/mysql/type/JsonTest.php b/tests/framework/db/mysql/type/JsonTest.php
new file mode 100644
index 00000000000..b955c7221cd
--- /dev/null
+++ b/tests/framework/db/mysql/type/JsonTest.php
@@ -0,0 +1,85 @@
+<?php
+/**
+ * @link https://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license https://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\framework\db\mysql\type;
+
+use yii\db\JsonExpression;
+use yii\db\mysql\Schema;
+use yiiunit\framework\db\DatabaseTestCase;
+
+/**
+ * @group db
+ * @group mysql
+ */
+class JsonTest extends DatabaseTestCase
+{
+    protected $driverName = 'mysql';
+
+    public function testCreateTable(): void
+    {
+        $db = $this->getConnection();
+
+        if ($db->getSchema()->getTableSchema('json') !== null) {
+            $db->createCommand()->dropTable('json')->execute();
+        }
+
+        $command = $db->createCommand();
+        $command->createTable('json', ['id' => Schema::TYPE_PK, 'data' => Schema::TYPE_JSON])->execute();
+
+        $this->assertTrue($db->getTableSchema('json') !== null);
+        $this->assertSame('data', $db->getTableSchema('json')->getColumn('data')->name);
+        $this->assertSame('json', $db->getTableSchema('json')->getColumn('data')->type);
+    }
+
+    public function testInsertAndSelect(): void
+    {
+        $db = $this->getConnection(true);
+        $version = $db->getServerVersion();
+
+        $command = $db->createCommand();
+        $command->insert('storage', ['data' => ['a' => 1, 'b' => 2]])->execute();
+
+        if (\stripos($version, 'MariaDb') === false) {
+            $rowExpected = '{"a": 1, "b": 2}';
+        } else {
+            $rowExpected = '{"a":1,"b":2}';
+        }
+
+        $this->assertSame(
+            $rowExpected,
+            $command->setSql(
+                <<<SQL
+                SELECT `data` FROM `storage`
+                SQL,
+            )->queryScalar(),
+        );
+    }
+
+    public function testInsertJsonExpressionAndSelect(): void
+    {
+        $db = $this->getConnection(true);
+        $version = $db->getServerVersion();
+
+        $command = $db->createCommand();
+        $command->insert('storage', ['data' => new JsonExpression(['a' => 1, 'b' => 2])])->execute();
+
+        if (\stripos($version, 'MariaDb') === false) {
+            $rowExpected = '{"a": 1, "b": 2}';
+        } else {
+            $rowExpected = '{"a":1,"b":2}';
+        }
+
+        $this->assertSame(
+            $rowExpected,
+            $command->setSql(
+                <<<SQL
+                SELECT `data` FROM `storage`
+                SQL,
+            )->queryScalar(),
+        );
+    }
+}
diff --git a/tests/framework/db/oci/ActiveRecordTest.php b/tests/framework/db/oci/ActiveRecordTest.php
index 6be10ccc352..c7a11d722a8 100644
--- a/tests/framework/db/oci/ActiveRecordTest.php
+++ b/tests/framework/db/oci/ActiveRecordTest.php
@@ -26,7 +26,6 @@ class ActiveRecordTest extends \yiiunit\framework\db\ActiveRecordTest
     public function testCastValues()
     {
         // pass, because boolean casting is not available
-        return;
         $model = new Type();
         $model->int_col = 123;
         $model->int_col2 = 456;
@@ -48,7 +47,7 @@ public function testCastValues()
         $this->assertSame('1337', trim($model->char_col));
         $this->assertSame('test', $model->char_col2);
         $this->assertSame('test123', $model->char_col3);
-        $this->assertSame(1337.42, $model->float_col);
+        $this->assertSame(3.742, $model->float_col);
         $this->assertSame(42.1337, $model->float_col2);
         $this->assertEquals('1', $model->bool_col);
         $this->assertEquals('0', $model->bool_col2);
diff --git a/tests/framework/db/oci/ConnectionTest.php b/tests/framework/db/oci/ConnectionTest.php
index 0d0bf842ef6..76992cce915 100644
--- a/tests/framework/db/oci/ConnectionTest.php
+++ b/tests/framework/db/oci/ConnectionTest.php
@@ -85,6 +85,8 @@ public function testTransactionIsolation()
 
         $transaction = $connection->beginTransaction(Transaction::SERIALIZABLE);
         $transaction->commit();
+
+        $this->assertTrue(true);
     }
 
     /**
diff --git a/tests/framework/db/oci/QueryBuilderTest.php b/tests/framework/db/oci/QueryBuilderTest.php
index 5bf3b831636..d7ed58cd3ba 100644
--- a/tests/framework/db/oci/QueryBuilderTest.php
+++ b/tests/framework/db/oci/QueryBuilderTest.php
@@ -305,7 +305,7 @@ public function testUpsert($table, $insertColumns, $updateColumns, $expectedSQL,
         if (is_string($expectedSQL)) {
             $this->assertEqualsWithoutLE($expectedSQL, $actualSQL);
         } else {
-            $this->assertContains($actualSQL, $expectedSQL);
+            $this->assertStringContainsString($actualSQL, $expectedSQL);
         }
         if (ArrayHelper::isAssociative($expectedParams)) {
             $this->assertSame($expectedParams, $actualParams);
diff --git a/tests/framework/db/pgsql/ArrayParserTest.php b/tests/framework/db/pgsql/ArrayParserTest.php
index 1962676180a..fdea8c9b20a 100644
--- a/tests/framework/db/pgsql/ArrayParserTest.php
+++ b/tests/framework/db/pgsql/ArrayParserTest.php
@@ -12,7 +12,7 @@ class ArrayParserTest extends TestCase
      */
     protected $arrayParser;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/db/pgsql/BaseActiveRecordTest.php b/tests/framework/db/pgsql/BaseActiveRecordTest.php
index a4993685249..db6f1264815 100644
--- a/tests/framework/db/pgsql/BaseActiveRecordTest.php
+++ b/tests/framework/db/pgsql/BaseActiveRecordTest.php
@@ -5,6 +5,10 @@
 use yii\db\JsonExpression;
 use yiiunit\data\ar\ActiveRecord;
 
+/**
+ * @group db
+ * @group pgsql
+ */
 class BaseActiveRecordTest extends \yiiunit\framework\db\BaseActiveRecordTest
 {
     public $driverName = 'pgsql';
diff --git a/tests/framework/db/pgsql/ConnectionTest.php b/tests/framework/db/pgsql/ConnectionTest.php
index 2baa79e3b8d..c3a6d0c68eb 100644
--- a/tests/framework/db/pgsql/ConnectionTest.php
+++ b/tests/framework/db/pgsql/ConnectionTest.php
@@ -19,7 +19,7 @@ class ConnectionTest extends \yiiunit\framework\db\ConnectionTest
 
     public function testConnection()
     {
-        $this->assertInternalType('object', $this->getConnection(true));
+        $this->assertIsObject($this->getConnection(true));
     }
 
     public function testQuoteValue()
diff --git a/tests/framework/di/ContainerTest.php b/tests/framework/di/ContainerTest.php
index 4df6140a819..2555f43c2d6 100644
--- a/tests/framework/di/ContainerTest.php
+++ b/tests/framework/di/ContainerTest.php
@@ -40,7 +40,7 @@
  */
 class ContainerTest extends TestCase
 {
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Yii::$container = new Container();
@@ -252,7 +252,7 @@ public function testOptionalDependencies()
     {
         $container = new Container();
         // Test optional unresolvable dependency.
-        $closure = function (QuxInterface $test = null) {
+        $closure = function (?QuxInterface $test = null) {
             return $test;
         };
         $this->assertNull($container->invoke($closure));
@@ -443,11 +443,10 @@ public function testGetByClassIndirectly()
         $this->assertSame(42, $qux->a);
     }
 
-    /**
-     * @expectedException \yii\base\InvalidConfigException
-     */
     public function testThrowingNotFoundException()
     {
+        $this->expectException(\yii\di\NotInstantiableException::class);
+
         $container = new Container();
         $container->get('non_existing');
     }
@@ -480,9 +479,6 @@ public function testContainerSingletons()
         $this->assertSame($foo, $sameFoo);
     }
 
-    /**
-     * @requires PHP 5.6
-     */
     public function testVariadicConstructor()
     {
         if (\defined('HHVM_VERSION')) {
@@ -491,11 +487,10 @@ public function testVariadicConstructor()
 
         $container = new Container();
         $container->get('yiiunit\framework\di\stubs\Variadic');
+
+        $this->assertTrue(true);
     }
 
-    /**
-     * @requires PHP 5.6
-     */
     public function testVariadicCallable()
     {
         if (\defined('HHVM_VERSION')) {
@@ -503,6 +498,8 @@ public function testVariadicCallable()
         }
 
         require __DIR__ . '/testContainerWithVariadicCallable.php';
+
+        $this->assertTrue(true);
     }
 
     /**
@@ -535,6 +532,8 @@ public function testDelayedInitializationOfSubArray()
 
         Yii::$container->set('setLater', new Qux());
         Yii::$container->get('test');
+
+        $this->assertTrue(true);
     }
 
     /**
@@ -610,11 +609,6 @@ public function testNotInstantiableException($class)
 
     public function testNullTypeConstructorParameters()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
-
         $zeta = (new Container())->get(Zeta::className());
         $this->assertInstanceOf(Beta::className(), $zeta->beta);
         $this->assertInstanceOf(Beta::className(), $zeta->betaNull);
diff --git a/tests/framework/di/InstanceTest.php b/tests/framework/di/InstanceTest.php
index fe61a6bdf95..78044062ed3 100644
--- a/tests/framework/di/InstanceTest.php
+++ b/tests/framework/di/InstanceTest.php
@@ -21,7 +21,7 @@
  */
 class InstanceTest extends TestCase
 {
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Yii::$container = new Container();
@@ -59,7 +59,7 @@ public function testEnsure_NonExistingComponentException()
     {
         $container = new Container();
         $this->expectException('yii\base\InvalidConfigException');
-        $this->expectExceptionMessageRegExp('/^Failed to instantiate component or class/i');
+        $this->expectExceptionMessageMatches('/^Failed to instantiate component or class/i');
         Instance::ensure('cache', 'yii\cache\Cache', $container);
     }
 
@@ -70,7 +70,7 @@ public function testEnsure_NonExistingClassException()
     {
         $container = new Container();
         $this->expectException('yii\base\InvalidConfigException');
-        $this->expectExceptionMessageRegExp('/^Failed to instantiate component or class/i');
+        $this->expectExceptionMessageMatches('/^Failed to instantiate component or class/i');
         Instance::ensure('yii\cache\DoesNotExist', 'yii\cache\Cache', $container);
     }
 
@@ -171,7 +171,10 @@ public function testRestoreAfterVarExport()
         $instance = Instance::of('something');
         $export = var_export($instance, true);
 
-        $this->assertRegExp('~yii\\\\di\\\\Instance::__set_state\(array\(\s+\'id\' => \'something\',\s+\'optional\' => false,\s+\)\)~', $export);
+        $this->assertMatchesRegularExpression(
+            '~yii\\\\di\\\\Instance::__set_state\(array\(\s+\'id\' => \'something\',\s+\'optional\' => false,\s+\)\)~',
+            $export
+        );
 
         $this->assertEquals($instance, Instance::__set_state([
             'id' => 'something',
diff --git a/tests/framework/di/stubs/Alpha.php b/tests/framework/di/stubs/Alpha.php
index 151d2f109bb..a5af3ffed78 100644
--- a/tests/framework/di/stubs/Alpha.php
+++ b/tests/framework/di/stubs/Alpha.php
@@ -12,10 +12,10 @@ class Alpha extends BaseObject
     public $color = true;
 
     public function __construct(
-        Beta $beta = null,
-        QuxInterface $omega = null,
-        Unknown $unknown = null,
-        AbstractColor $color = null
+        ?Beta $beta = null,
+        ?QuxInterface $omega = null,
+        ?Unknown $unknown = null,
+        ?AbstractColor $color = null
     ) {
         $this->beta = $beta;
         $this->omega = $omega;
diff --git a/tests/framework/filters/AccessRuleTest.php b/tests/framework/filters/AccessRuleTest.php
index 620766788d8..56bcd341574 100644
--- a/tests/framework/filters/AccessRuleTest.php
+++ b/tests/framework/filters/AccessRuleTest.php
@@ -23,7 +23,7 @@
  */
 class AccessRuleTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/filters/ContentNegotiatorTest.php b/tests/framework/filters/ContentNegotiatorTest.php
index d52bb367c93..221716b80ec 100644
--- a/tests/framework/filters/ContentNegotiatorTest.php
+++ b/tests/framework/filters/ContentNegotiatorTest.php
@@ -20,7 +20,7 @@
  */
 class ContentNegotiatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -55,10 +55,6 @@ public function testWhenLanguageGETParamIsArray()
         $this->assertEquals($targetLanguage, Yii::$app->language);
     }
 
-    /**
-     * @expectedException yii\web\BadRequestHttpException
-     * @expectedExceptionMessageRegExp |Invalid data received for GET parameter '.+'|
-     */
     public function testWhenFormatGETParamIsArray()
     {
         list($action, $filter) = $this->mockActionAndFilter();
@@ -74,6 +70,9 @@ public function testWhenFormatGETParamIsArray()
             'application/xml' => Response::FORMAT_XML,
         ];
 
+        $this->expectException(\yii\web\BadRequestHttpException::class);
+        $this->expectExceptionMessage('Invalid data received for GET parameter');
+
         $filter->beforeAction($action);
     }
 
diff --git a/tests/framework/filters/HostControlTest.php b/tests/framework/filters/HostControlTest.php
index 39478fe00ed..4f5a32eb8bc 100644
--- a/tests/framework/filters/HostControlTest.php
+++ b/tests/framework/filters/HostControlTest.php
@@ -19,7 +19,7 @@
  */
 class HostControlTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/filters/HttpCacheTest.php b/tests/framework/filters/HttpCacheTest.php
index 8f0f0da6054..a5be733520a 100644
--- a/tests/framework/filters/HttpCacheTest.php
+++ b/tests/framework/filters/HttpCacheTest.php
@@ -15,7 +15,7 @@
  */
 class HttpCacheTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/filters/PageCacheTest.php b/tests/framework/filters/PageCacheTest.php
index 6dc5ef5f9a6..b89259168cf 100644
--- a/tests/framework/filters/PageCacheTest.php
+++ b/tests/framework/filters/PageCacheTest.php
@@ -25,14 +25,14 @@
  */
 class PageCacheTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $_SERVER['SCRIPT_FILENAME'] = '/index.php';
         $_SERVER['SCRIPT_NAME'] = '/index.php';
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         CacheTestCase::$time = null;
         CacheTestCase::$microtime = null;
diff --git a/tests/framework/filters/RateLimiterTest.php b/tests/framework/filters/RateLimiterTest.php
index 1bbaad6e299..e98736614d1 100644
--- a/tests/framework/filters/RateLimiterTest.php
+++ b/tests/framework/filters/RateLimiterTest.php
@@ -22,7 +22,7 @@
  */
 class RateLimiterTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -30,7 +30,7 @@ protected function setUp()
 
         $this->mockWebApplication();
     }
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         Yii::setLogger(null);
@@ -84,7 +84,10 @@ public function testBeforeActionUserNotInstanceOfRateLimitInterface()
 
         $result = $rateLimiter->beforeAction('test');
 
-        $this->assertContains('Rate limit skipped: "user" does not implement RateLimitInterface.', Yii::getLogger()->messages);
+        $this->assertContains(
+            'Rate limit skipped: "user" does not implement RateLimitInterface.',
+            Yii::getLogger()->messages
+        );
         $this->assertTrue($result);
     }
 
@@ -164,6 +167,9 @@ public function testUserWithClosureFunction()
         // testing the evaluation of user closure, which in this case returns not the expect object and therefore
         // the log message "does not implement RateLimitInterface" is expected.
         $this->assertInstanceOf(User::className(), $rateLimiter->user);
-        $this->assertContains('Rate limit skipped: "user" does not implement RateLimitInterface.', Yii::getLogger()->messages);
+        $this->assertContains(
+            'Rate limit skipped: "user" does not implement RateLimitInterface.',
+            Yii::getLogger()->messages
+        );
     }
 }
diff --git a/tests/framework/filters/auth/AuthMethodTest.php b/tests/framework/filters/auth/AuthMethodTest.php
index beea7740c19..f045b26b6ad 100644
--- a/tests/framework/filters/auth/AuthMethodTest.php
+++ b/tests/framework/filters/auth/AuthMethodTest.php
@@ -16,7 +16,7 @@
 
 class AuthMethodTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/filters/auth/AuthTest.php b/tests/framework/filters/auth/AuthTest.php
index 102d215064e..1c4a7086655 100644
--- a/tests/framework/filters/auth/AuthTest.php
+++ b/tests/framework/filters/auth/AuthTest.php
@@ -25,7 +25,7 @@
  */
 class AuthTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/filters/auth/CompositeAuthTest.php b/tests/framework/filters/auth/CompositeAuthTest.php
index 6a9245c5e2b..c378550883a 100644
--- a/tests/framework/filters/auth/CompositeAuthTest.php
+++ b/tests/framework/filters/auth/CompositeAuthTest.php
@@ -103,7 +103,7 @@ public function behaviors()
  */
 class CompositeAuthTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/grid/ActionColumnTest.php b/tests/framework/grid/ActionColumnTest.php
index 7b15414d43c..c5d9bcfa9f0 100644
--- a/tests/framework/grid/ActionColumnTest.php
+++ b/tests/framework/grid/ActionColumnTest.php
@@ -70,34 +70,34 @@ public function testRenderDataCell()
 
         //test default visible button
         $columnContents = $column->renderDataCell(['id' => 1], 1, 0);
-        $this->assertContains('update_button', $columnContents);
+        $this->assertStringContainsString('update_button', $columnContents);
 
         //test visible button
         $column->visibleButtons = [
             'update' => true,
         ];
         $columnContents = $column->renderDataCell(['id' => 1], 1, 0);
-        $this->assertContains('update_button', $columnContents);
+        $this->assertStringContainsString('update_button', $columnContents);
 
         //test visible button (condition is callback)
         $column->visibleButtons = [
             'update' => function ($model, $key, $index) {return $model['id'] == 1;},
         ];
         $columnContents = $column->renderDataCell(['id' => 1], 1, 0);
-        $this->assertContains('update_button', $columnContents);
+        $this->assertStringContainsString('update_button', $columnContents);
 
         //test invisible button
         $column->visibleButtons = [
             'update' => false,
         ];
         $columnContents = $column->renderDataCell(['id' => 1], 1, 0);
-        $this->assertNotContains('update_button', $columnContents);
+        $this->assertStringNotContainsString('update_button', $columnContents);
 
         //test invisible button (condition is callback)
         $column->visibleButtons = [
             'update' => function ($model, $key, $index) {return $model['id'] != 1;},
         ];
         $columnContents = $column->renderDataCell(['id' => 1], 1, 0);
-        $this->assertNotContains('update_button', $columnContents);
+        $this->assertStringNotContainsString('update_button', $columnContents);
     }
 }
diff --git a/tests/framework/grid/CheckboxColumnTest.php b/tests/framework/grid/CheckboxColumnTest.php
index 6a2442019c7..b652ff2dc60 100644
--- a/tests/framework/grid/CheckboxColumnTest.php
+++ b/tests/framework/grid/CheckboxColumnTest.php
@@ -21,7 +21,7 @@
  */
 class CheckboxColumnTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         IntlTestHelper::resetIntlStatus();
@@ -35,34 +35,34 @@ protected function setUp()
     public function testInputName()
     {
         $column = new CheckboxColumn(['name' => 'selection', 'grid' => $this->getGrid()]);
-        $this->assertContains('name="selection_all"', $column->renderHeaderCell());
+        $this->assertStringContainsString('name="selection_all"', $column->renderHeaderCell());
 
         $column = new CheckboxColumn(['name' => 'selections[]', 'grid' => $this->getGrid()]);
-        $this->assertContains('name="selections_all"', $column->renderHeaderCell());
+        $this->assertStringContainsString('name="selections_all"', $column->renderHeaderCell());
 
         $column = new CheckboxColumn(['name' => 'MyForm[grid1]', 'grid' => $this->getGrid()]);
-        $this->assertContains('name="MyForm[grid1_all]"', $column->renderHeaderCell());
+        $this->assertStringContainsString('name="MyForm[grid1_all]"', $column->renderHeaderCell());
 
         $column = new CheckboxColumn(['name' => 'MyForm[grid1][]', 'grid' => $this->getGrid()]);
-        $this->assertContains('name="MyForm[grid1_all]"', $column->renderHeaderCell());
+        $this->assertStringContainsString('name="MyForm[grid1_all]"', $column->renderHeaderCell());
 
         $column = new CheckboxColumn(['name' => 'MyForm[grid1][key]', 'grid' => $this->getGrid()]);
-        $this->assertContains('name="MyForm[grid1][key_all]"', $column->renderHeaderCell());
+        $this->assertStringContainsString('name="MyForm[grid1][key_all]"', $column->renderHeaderCell());
 
         $column = new CheckboxColumn(['name' => 'MyForm[grid1][key][]', 'grid' => $this->getGrid()]);
-        $this->assertContains('name="MyForm[grid1][key_all]"', $column->renderHeaderCell());
+        $this->assertStringContainsString('name="MyForm[grid1][key_all]"', $column->renderHeaderCell());
     }
 
     public function testInputValue()
     {
         $column = new CheckboxColumn(['grid' => $this->getGrid()]);
-        $this->assertContains('value="1"', $column->renderDataCell([], 1, 0));
-        $this->assertContains('value="42"', $column->renderDataCell([], 42, 0));
-        $this->assertContains('value="[1,42]"', $column->renderDataCell([], [1, 42], 0));
+        $this->assertStringContainsString('value="1"', $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString('value="42"', $column->renderDataCell([], 42, 0));
+        $this->assertStringContainsString('value="[1,42]"', $column->renderDataCell([], [1, 42], 0));
 
         $column = new CheckboxColumn(['checkboxOptions' => ['value' => 42], 'grid' => $this->getGrid()]);
-        $this->assertNotContains('value="1"', $column->renderDataCell([], 1, 0));
-        $this->assertContains('value="42"', $column->renderDataCell([], 1, 0));
+        $this->assertStringNotContainsString('value="1"', $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString('value="42"', $column->renderDataCell([], 1, 0));
 
         $column = new CheckboxColumn([
             'checkboxOptions' => function ($model, $key, $index, $column) {
@@ -70,9 +70,9 @@ public function testInputValue()
             },
             'grid' => $this->getGrid(),
         ]);
-        $this->assertContains('value="1"', $column->renderDataCell([], 1, 0));
-        $this->assertContains('value="42"', $column->renderDataCell([], 42, 0));
-        $this->assertContains('value="[1,42]"', $column->renderDataCell([], [1, 42], 0));
+        $this->assertStringContainsString('value="1"', $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString('value="42"', $column->renderDataCell([], 42, 0));
+        $this->assertStringContainsString('value="[1,42]"', $column->renderDataCell([], [1, 42], 0));
 
         $column = new CheckboxColumn([
             'checkboxOptions' => function ($model, $key, $index, $column) {
@@ -80,8 +80,8 @@ public function testInputValue()
             },
             'grid' => $this->getGrid(),
         ]);
-        $this->assertNotContains('value="1"', $column->renderDataCell([], 1, 0));
-        $this->assertContains('value="42"', $column->renderDataCell([], 1, 0));
+        $this->assertStringNotContainsString('value="1"', $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString('value="42"', $column->renderDataCell([], 1, 0));
     }
 
     public function testContent()
@@ -92,7 +92,7 @@ public function testContent()
             },
             'grid' => $this->getGrid(),
         ]);
-        $this->assertContains('<td></td>', $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString('<td></td>', $column->renderDataCell([], 1, 0));;
 
         $column = new CheckboxColumn([
             'content' => function ($model, $key, $index, $column) {
@@ -100,7 +100,7 @@ public function testContent()
             },
             'grid' => $this->getGrid(),
         ]);
-        $this->assertContains(Html::checkBox('checkBoxInput', false), $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString(Html::checkBox('checkBoxInput', false), $column->renderDataCell([], 1, 0));
     }
 
     /**
diff --git a/tests/framework/grid/GridViewTest.php b/tests/framework/grid/GridViewTest.php
index b698011493b..cdf63756c8f 100644
--- a/tests/framework/grid/GridViewTest.php
+++ b/tests/framework/grid/GridViewTest.php
@@ -20,7 +20,7 @@
  */
 class GridViewTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication([
@@ -156,7 +156,6 @@ public function testFooter() {
     public function testHeaderLabels()
     {
         // Ensure GridView does not call Model::generateAttributeLabel() to generate labels unless the labels are explicitly used.
-
         $this->mockApplication([
             'components' => [
                 'db' => [
@@ -198,7 +197,8 @@ public function testHeaderLabels()
             'attributes' => ['attr1', 'attr2'],
         ]);
         $grid->renderTableHeader();
-
         // If NoAutoLabels::generateAttributeLabel() has not been called no exception will be thrown meaning this test passed successfully.
+
+        $this->assertTrue(true);
 	}
 }
diff --git a/tests/framework/grid/RadiobuttonColumnTest.php b/tests/framework/grid/RadiobuttonColumnTest.php
index 51292d3d2ce..bdd15ccef67 100644
--- a/tests/framework/grid/RadiobuttonColumnTest.php
+++ b/tests/framework/grid/RadiobuttonColumnTest.php
@@ -22,12 +22,11 @@
  */
 class RadiobuttonColumnTest extends TestCase
 {
-    /**
-     * @expectedException \yii\base\InvalidConfigException
-     * @expectedExceptionMessage The "name" property must be set.
-     */
     public function testException()
     {
+        $this->expectException(\yii\base\InvalidConfigException::class);
+        $this->expectExceptionMessage('The "name" property must be set.');
+
         new RadioButtonColumn([
             'name' => null,
         ]);
@@ -67,14 +66,14 @@ public function testContent()
                 return null;
             }
         ]);
-        $this->assertContains('<td></td>', $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString('<td></td>', $column->renderDataCell([], 1, 0));
 
         $column = new RadioButtonColumn([
             'content' => function ($model, $key, $index, $column) {
                 return Html::radio('radioButtonInput', false);
             }
         ]);
-        $this->assertContains(Html::radio('radioButtonInput', false), $column->renderDataCell([], 1, 0));
+        $this->assertStringContainsString(Html::radio('radioButtonInput', false), $column->renderDataCell([], 1, 0));
     }
 
     public function testMultipleInGrid()
diff --git a/tests/framework/helpers/ArrayHelperTest.php b/tests/framework/helpers/ArrayHelperTest.php
index 0d706bc552f..f450b281f7a 100644
--- a/tests/framework/helpers/ArrayHelperTest.php
+++ b/tests/framework/helpers/ArrayHelperTest.php
@@ -20,7 +20,7 @@
  */
 class ArrayHelperTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -759,7 +759,7 @@ public function testKeyExistsWithFloat()
         if (version_compare(PHP_VERSION, '8.1.0', '>=')) {
             $this->markTestSkipped('Using floats as array key is deprecated.');
         }
-
+        
         $array = [
             1 => 3,
             2.2 => 4, // Note: Floats are cast to ints, which means that the fractional part will be truncated.
@@ -876,13 +876,12 @@ public function testGetValueObjects()
 
     public function testGetValueNonexistingProperties1()
     {
-        if (PHP_VERSION_ID < 80000) {
-            $this->expectException('PHPUnit_Framework_Error_Notice');
-        } else {
-            $this->expectException('PHPUnit_Framework_Error_Warning');
+        try {
+            $object = new Post1();
+            ArrayHelper::getValue($object, 'nonExisting');
+        } catch (\Throwable $th) {
+            $this->assertEquals('Undefined property: yiiunit\framework\helpers\Post1::$nonExisting', $th->getMessage());
         }
-        $object = new Post1();
-        ArrayHelper::getValue($object, 'nonExisting');
     }
 
     public function testGetValueNonexistingPropertiesForArrayObject()
diff --git a/tests/framework/helpers/BaseConsoleTest.php b/tests/framework/helpers/BaseConsoleTest.php
index d9a4391dc10..aa7bc11061e 100644
--- a/tests/framework/helpers/BaseConsoleTest.php
+++ b/tests/framework/helpers/BaseConsoleTest.php
@@ -12,7 +12,7 @@
  */
 class BaseConsoleTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/helpers/BaseUrlTest.php b/tests/framework/helpers/BaseUrlTest.php
new file mode 100644
index 00000000000..9bcd39ef981
--- /dev/null
+++ b/tests/framework/helpers/BaseUrlTest.php
@@ -0,0 +1,116 @@
+<?php
+
+namespace yiiunit\framework\helpers;
+
+use PHPUnit\Framework\TestCase;
+use yii\helpers\BaseUrl;
+
+/**
+ * @group helpers
+ */
+class BaseUrlTest extends TestCase
+{
+    /** @dataProvider relativeTrueUrlProvider */
+    public function testIsRelativeWillReturnTrue($url)
+    {
+        $this->assertTrue(BaseUrl::isRelative($url));
+    }
+
+    /** @dataProvider relativeFalseUrlProvider */
+    public function testIsRelativeWillReturnFalse($url)
+    {
+        $this->assertFalse(BaseUrl::isRelative($url));
+    }
+
+    /** @dataProvider ensureSchemeUrlProvider */
+    public function testEnsureScheme($url, $scheme, $expected)
+    {
+        $this->assertEquals($expected, BaseUrl::ensureScheme($url, $scheme));
+    }
+
+    public function ensureSchemeUrlProvider()
+    {
+        return [
+            'relative url and https scheme will return input url' => [
+                'url' => 'acme.com?name=bugs.bunny',
+                'scheme' => 'https',
+                'expected result' => 'acme.com?name=bugs.bunny',
+            ],
+            'relative url and another url as parameter will return input url' => [
+                'url' => 'acme.com/test?tnt-link=https://tnt.com/',
+                'scheme' => 'https',
+                'expected' => 'acme.com/test?tnt-link=https://tnt.com/',
+            ],
+            'url with scheme not a string will return input url' => [
+                'url' => 'acme.com?name=bugs.bunny',
+                'scheme' => 123,
+                'expected' => 'acme.com?name=bugs.bunny',
+            ],
+            'protocol relative url and https scheme will be processed' => [
+                'url' => '//acme.com?characters/list',
+                'scheme' => 'https',
+                'expected' => 'https://acme.com?characters/list',
+            ],
+            'protocol relative url and empty scheme will be returned' => [
+                'url' => '//acme.com?characters/list',
+                'scheme' => '',
+                'expected' => '//acme.com?characters/list',
+            ],
+            'absolute url and empty scheme will create protocol relative url' => [
+                'url' => 'https://acme.com?characters/list',
+                'scheme' => '',
+                'expected' => '//acme.com?characters/list',
+            ],
+            'absolute url and different scheme will be processed' => [
+                'url' => 'http://acme.com/test?tnt-link=https://tnt.com/',
+                'scheme' => 'https',
+                'expected' => 'https://acme.com/test?tnt-link=https://tnt.com/',
+            ]
+        ];
+    }
+
+    public function relativeTrueUrlProvider()
+    {
+        return [
+            'url url without protocol' => [
+                'url' => 'acme.com/tnt-room=123',
+            ],
+            'url without protocol and another url in a parameter value' => [
+                'url' => 'acme.com?tnt-room-link=https://tnt.com',
+            ],
+            'path only' => [
+                'url' => '/path',
+            ],
+            'path with param' => [
+                'url' => '/path=/home/user',
+            ],
+        ];
+    }
+
+    public function relativeFalseUrlProvider()
+    {
+        return [
+            'url with https protocol' => [
+                'url' => 'https://acme.com',
+            ],
+            'url with https protocol and ending slash' => [
+                'url' => 'https://acme.com/',
+            ],
+            'url with https protocol and another url as param value' => [
+                'url' => 'https://acme.com?tnt-link=https://tnt.com',
+            ],
+            'url starting with two slashes' => [
+                'url' => '//example.com',
+            ],
+            'url with ftp protocol' => [
+                'url' => 'ftp://ftp.acme.com/tnt-suppliers.txt',
+            ],
+            'url with http protocol' => [
+                'url' => 'http://no-protection.acme.com',
+            ],
+            'file url' => [
+                'url' => 'file:///home/User/2ndFile.html',
+            ]
+        ];
+    }
+}
diff --git a/tests/framework/helpers/ConsoleTest.php b/tests/framework/helpers/ConsoleTest.php
index cbd1b322ee5..eb16d3056c7 100644
--- a/tests/framework/helpers/ConsoleTest.php
+++ b/tests/framework/helpers/ConsoleTest.php
@@ -18,7 +18,7 @@
  */
 class ConsoleTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/helpers/FileHelperTest.php b/tests/framework/helpers/FileHelperTest.php
index 448e6148fd4..c8b3f34427f 100644
--- a/tests/framework/helpers/FileHelperTest.php
+++ b/tests/framework/helpers/FileHelperTest.php
@@ -21,7 +21,7 @@ class FileHelperTest extends TestCase
      */
     private $testFilePath = '';
 
-    public function setUp()
+    protected function setUp(): void
     {
         $this->testFilePath = Yii::getAlias('@yiiunit/runtime') . DIRECTORY_SEPARATOR . get_class($this);
         $this->createDir($this->testFilePath);
@@ -56,7 +56,7 @@ private function isChmodReliable()
         return $mode === '0700';
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         $this->removeDir($this->testFilePath);
     }
@@ -140,7 +140,7 @@ protected function createFileStructure(array $items, $basePath = '')
      */
     protected function assertFileMode($expectedMode, $fileName, $message = '')
     {
-        $expectedMode = sprintf('%o', $expectedMode);
+        $expectedMode = sprintf('%04o', $expectedMode);
         $this->assertEquals($expectedMode, $this->getMode($fileName), $message);
     }
 
@@ -258,7 +258,7 @@ public function testCopyDirectoryNotRecursive()
             $fileName = $dstDirName . DIRECTORY_SEPARATOR . $name;
 
             if (is_array($content)) {
-                $this->assertFileNotExists($fileName);
+                $this->assertFileDoesNotExist($fileName);
             } else {
                 $this->assertFileExists($fileName);
                 $this->assertStringEqualsFile($fileName, $content, 'Incorrect file content!');
@@ -368,6 +368,8 @@ public function testCopyDirWithSameName()
             $this->testFilePath . DIRECTORY_SEPARATOR . 'data',
             $this->testFilePath . DIRECTORY_SEPARATOR . 'data-backup'
         );
+
+        $this->assertTrue(true);
     }
 
     public function testRemoveDirectory()
@@ -389,7 +391,7 @@ public function testRemoveDirectory()
 
         FileHelper::removeDirectory($dirName);
 
-        $this->assertFileNotExists($dirName, 'Unable to remove directory!');
+        $this->assertFileDoesNotExist($dirName, 'Unable to remove directory!');
 
         // should be silent about non-existing directories
         FileHelper::removeDirectory($basePath . DIRECTORY_SEPARATOR . 'nonExisting');
@@ -432,10 +434,10 @@ public function testRemoveDirectorySymlinks1()
         $this->assertTrue(is_dir($basePath . 'directory'));
         $this->assertFileExists($basePath . 'directory' . DIRECTORY_SEPARATOR . 'standard-file-1'); // symlinked directory still have it's file
         $this->assertFalse(is_dir($basePath . 'symlinks'));
-        $this->assertFileNotExists($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'standard-file-2');
-        $this->assertFileNotExists($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-file');
+        $this->assertFileDoesNotExist($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'standard-file-2');
+        $this->assertFileDoesNotExist($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-file');
         $this->assertFalse(is_dir($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-directory'));
-        $this->assertFileNotExists($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-directory' . DIRECTORY_SEPARATOR . 'standard-file-1');
+        $this->assertFileDoesNotExist($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-directory' . DIRECTORY_SEPARATOR . 'standard-file-1');
     }
 
     public function testRemoveDirectorySymlinks2()
@@ -473,12 +475,12 @@ public function testRemoveDirectorySymlinks2()
 
         $this->assertFileExists($basePath . 'file');
         $this->assertTrue(is_dir($basePath . 'directory'));
-        $this->assertFileNotExists($basePath . 'directory' . DIRECTORY_SEPARATOR . 'standard-file-1'); // symlinked directory doesn't have it's file now
+        $this->assertFileDoesNotExist($basePath . 'directory' . DIRECTORY_SEPARATOR . 'standard-file-1'); // symlinked directory doesn't have it's file now
         $this->assertFalse(is_dir($basePath . 'symlinks'));
-        $this->assertFileNotExists($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'standard-file-2');
-        $this->assertFileNotExists($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-file');
+        $this->assertFileDoesNotExist($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'standard-file-2');
+        $this->assertFileDoesNotExist($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-file');
         $this->assertFalse(is_dir($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-directory'));
-        $this->assertFileNotExists($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-directory' . DIRECTORY_SEPARATOR . 'standard-file-1');
+        $this->assertFileDoesNotExist($basePath . 'symlinks' . DIRECTORY_SEPARATOR . 'symlinked-directory' . DIRECTORY_SEPARATOR . 'standard-file-1');
     }
 
     public function testFindFiles()
@@ -910,8 +912,8 @@ public function testCopyDirectoryNoEmptyDirectories()
         $this->assertFileExists($dstDirName . DIRECTORY_SEPARATOR . 'dir1');
         $this->assertFileExists($dstDirName . DIRECTORY_SEPARATOR . 'dir1' . DIRECTORY_SEPARATOR . 'file1.txt');
         $this->assertFileExists($dstDirName . DIRECTORY_SEPARATOR . 'dir1' . DIRECTORY_SEPARATOR . 'file2.txt');
-        $this->assertFileNotExists($dstDirName . DIRECTORY_SEPARATOR . 'dir2');
-        $this->assertFileNotExists($dstDirName . DIRECTORY_SEPARATOR . 'dir3');
+        $this->assertFileDoesNotExist($dstDirName . DIRECTORY_SEPARATOR . 'dir2');
+        $this->assertFileDoesNotExist($dstDirName . DIRECTORY_SEPARATOR . 'dir3');
     }
 
     public function testFindDirectories()
diff --git a/tests/framework/helpers/FormatConverterTest.php b/tests/framework/helpers/FormatConverterTest.php
index dd8d470a1cd..42ed3acb1e9 100644
--- a/tests/framework/helpers/FormatConverterTest.php
+++ b/tests/framework/helpers/FormatConverterTest.php
@@ -19,7 +19,7 @@
  */
 class FormatConverterTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -31,7 +31,7 @@ protected function setUp()
         ]);
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         IntlTestHelper::resetIntlStatus();
@@ -358,7 +358,7 @@ public function testIntlUtf8Ru()
         $formatter = new Formatter(['locale' => 'ru-RU']);
         // There is a dot after month name in updated ICU data and no dot in old data. Both are acceptable.
         // See https://github.com/yiisoft/yii2/issues/9906
-        $this->assertRegExp('/24 авг\.? 2014 г\./', $formatter->asDate('2014-8-24', "dd MMM y 'г'."));
+        $this->assertMatchesRegularExpression('/24 авг\.? 2014 г\./', $formatter->asDate('2014-8-24', "dd MMM y 'г'."));
     }
 
     public function testPhpToICUMixedPatterns()
diff --git a/tests/framework/helpers/HtmlTest.php b/tests/framework/helpers/HtmlTest.php
index 12e8869d2d8..24c8186181b 100644
--- a/tests/framework/helpers/HtmlTest.php
+++ b/tests/framework/helpers/HtmlTest.php
@@ -19,7 +19,7 @@
  */
 class HtmlTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication([
@@ -90,6 +90,21 @@ public function testScript()
         $this->assertEquals("<script type=\"text/js\">{$content}</script>", Html::script($content, ['type' => 'text/js']));
     }
 
+    public function testScriptCustomAttribute()
+    {
+        $nonce = Yii::$app->security->generateRandomString();
+        $this->mockApplication([
+            'components' => [
+                'view' => [
+                    'class' => 'yii\web\View',
+                    'scriptOptions' => ['nonce' => $nonce],
+                ],
+            ],
+        ]);
+        $content = 'a <>';
+        $this->assertEquals("<script nonce=\"{$nonce}\">{$content}</script>", Html::script($content));
+    }
+
     public function testCssFile()
     {
         $this->assertEquals('<link href="http://example.com" rel="stylesheet">', Html::cssFile('http://example.com'));
@@ -1672,6 +1687,11 @@ function ($model) {
                     $model->addError('name', 'Error message. Here are even more chars: ""');
                 },
             ],
+            [
+                'empty_class',
+                ['emptyClass' => 'd-none'],
+                '<div class="d-none"><p>Please fix the following errors:</p><ul></ul></div>',
+            ],
         ];
     }
 
@@ -1953,6 +1973,7 @@ public function testAttributeNameValidation($name, $expected)
     public function testAttributeNameException($name)
     {
         $this->expectException('yii\base\InvalidArgumentException');
+
         Html::getAttributeName($name);
     }
 
@@ -1989,12 +2010,11 @@ public function testActiveFileInput()
         $this->assertEqualsWithoutLE($expected, $actual);
     }
 
-    /**
-     * @expectedException \yii\base\InvalidArgumentException
-     * @expectedExceptionMessage Attribute name must contain word characters only.
-     */
     public function testGetAttributeValueInvalidArgumentException()
     {
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Attribute name must contain word characters only.');
+
         $model = new HtmlTestModel();
         Html::getAttributeValue($model, '-');
     }
@@ -2024,24 +2044,24 @@ public function testGetAttributeValue()
         $this->assertSame($expected, $actual);
     }
 
-    /**
-     * @expectedException \yii\base\InvalidArgumentException
-     * @expectedExceptionMessage Attribute name must contain word characters only.
-     */
     public function testGetInputNameInvalidArgumentExceptionAttribute()
     {
         $model = new HtmlTestModel();
+
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Attribute name must contain word characters only.');
+
         Html::getInputName($model, '-');
     }
 
-    /**
-     * @expectedException \yii\base\InvalidArgumentException
-     * @expectedExceptionMessageRegExp /(.*)formName\(\) cannot be empty for tabular inputs.$/
-     */
     public function testGetInputNameInvalidArgumentExceptionFormName()
     {
         $model = $this->getMockBuilder('yii\\base\\Model')->getMock();
         $model->method('formName')->willReturn('');
+
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage('cannot be empty for tabular inputs.');
+
         Html::getInputName($model, '[foo]bar');
     }
 
@@ -2055,7 +2075,7 @@ public function testGetInputName()
     }
 
     /**
-     * @dataProvider testGetInputIdDataProvider
+     * @dataProvider getInputIdDataProvider
      */
     public function testGetInputId($attributeName, $inputIdExpected)
     {
@@ -2068,7 +2088,7 @@ public function testGetInputId($attributeName, $inputIdExpected)
     }
 
     /**
-     * @dataProvider testGetInputIdByNameDataProvider
+     * @dataProvider getInputIdByNameDataProvider
      */
     public function testGetInputIdByName($attributeName, $inputIdExpected)
     {
@@ -2147,7 +2167,7 @@ public function testActiveTextInput_placeholderFillFromModel()
 
         $html = Html::activeTextInput($model, 'name', ['placeholder' => true]);
 
-        $this->assertContains('placeholder="Name"', $html);
+        $this->assertStringContainsString('placeholder="Name"', $html);
     }
 
     public function testActiveTextInput_customPlaceholder()
@@ -2156,7 +2176,7 @@ public function testActiveTextInput_customPlaceholder()
 
         $html = Html::activeTextInput($model, 'name', ['placeholder' => 'Custom placeholder']);
 
-        $this->assertContains('placeholder="Custom placeholder"', $html);
+        $this->assertStringContainsString('placeholder="Custom placeholder"', $html);
     }
 
     public function testActiveTextInput_placeholderFillFromModelTabular()
@@ -2165,7 +2185,7 @@ public function testActiveTextInput_placeholderFillFromModelTabular()
 
         $html = Html::activeTextInput($model, '[0]name', ['placeholder' => true]);
 
-        $this->assertContains('placeholder="Name"', $html);
+        $this->assertStringContainsString('placeholder="Name"', $html);
     }
 
     public function testOverrideSetActivePlaceholder()
@@ -2174,10 +2194,10 @@ public function testOverrideSetActivePlaceholder()
 
         $html = MyHtml::activeTextInput($model, 'name', ['placeholder' => true]);
 
-        $this->assertContains('placeholder="My placeholder: Name"', $html);
+        $this->assertStringContainsString('placeholder="My placeholder: Name"', $html);
     }
 
-    public function testGetInputIdDataProvider()
+    public static function getInputIdDataProvider()
     {
         return [
             [
@@ -2216,7 +2236,7 @@ public function testGetInputIdDataProvider()
         ];
     }
 
-    public function testGetInputIdByNameDataProvider()
+    public static function getInputIdByNameDataProvider()
     {
         return [
             [
diff --git a/tests/framework/helpers/InflectorTest.php b/tests/framework/helpers/InflectorTest.php
index 7b1632b9929..644660e7211 100644
--- a/tests/framework/helpers/InflectorTest.php
+++ b/tests/framework/helpers/InflectorTest.php
@@ -15,7 +15,7 @@
  */
 class InflectorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/helpers/IpHelperTest.php b/tests/framework/helpers/IpHelperTest.php
index ac77758ec5f..fb6b1e40371 100644
--- a/tests/framework/helpers/IpHelperTest.php
+++ b/tests/framework/helpers/IpHelperTest.php
@@ -55,6 +55,7 @@ public function testIpv6ExpandingWithInvalidValue()
     {
         try {
             IpHelper::expandIPv6('fa01::1/64');
+            $this->assertTrue(true);
         } catch (\Exception $exception) {
             $this->assertStringEndsWith('Unrecognized address fa01::1/64', $exception->getMessage());
         }
diff --git a/tests/framework/helpers/JsonTest.php b/tests/framework/helpers/JsonTest.php
index f8150c764d8..0802bf948e6 100644
--- a/tests/framework/helpers/JsonTest.php
+++ b/tests/framework/helpers/JsonTest.php
@@ -19,7 +19,7 @@
  */
 class JsonTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -205,12 +205,13 @@ public function testDecode()
     }
 
     /**
-     * @expectedException \yii\base\InvalidArgumentException
-     * @expectedExceptionMessage Invalid JSON data.
      * @covers ::decode
      */
-    public function testDecodeInvalidParamException()
+    public function testDecodeInvalidArgumentException()
     {
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid JSON data.');
+        
         Json::decode([]);
     }
 
diff --git a/tests/framework/helpers/MarkdownTest.php b/tests/framework/helpers/MarkdownTest.php
index 7514e142362..49178481674 100644
--- a/tests/framework/helpers/MarkdownTest.php
+++ b/tests/framework/helpers/MarkdownTest.php
@@ -18,7 +18,7 @@
  */
 class MarkdownTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -43,12 +43,11 @@ public function testOriginalFlavor()
         $this->assertEquals(Markdown::process($text), Markdown::process($text, 'gfm-comment'));
     }
 
-    /**
-     * @expectedException \yii\base\InvalidParamException
-     * @expectedExceptionMessage Markdown flavor 'undefined' is not defined.
-     */
-    public function testProcessInvalidParamException()
+    public function testProcessInvalidArgumentException()
     {
+        $this->expectException(\yii\base\InvalidArgumentException::class);
+        $this->expectExceptionMessage("Markdown flavor 'undefined' is not defined.");
+        
         Markdown::process('foo', 'undefined');
     }
 
diff --git a/tests/framework/helpers/StringHelperTest.php b/tests/framework/helpers/StringHelperTest.php
index 94efbf67137..5f222ec4e7a 100644
--- a/tests/framework/helpers/StringHelperTest.php
+++ b/tests/framework/helpers/StringHelperTest.php
@@ -17,7 +17,7 @@
 class StringHelperTest extends TestCase
 {
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/helpers/UrlTest.php b/tests/framework/helpers/UrlTest.php
index 0f2b6584eb9..1aca8a92850 100644
--- a/tests/framework/helpers/UrlTest.php
+++ b/tests/framework/helpers/UrlTest.php
@@ -22,7 +22,7 @@
  */
 class UrlTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication([
@@ -47,7 +47,7 @@ protected function setUp()
         ], '\yii\web\Application');
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->getSession()->removeAll();
         parent::tearDown();
@@ -268,7 +268,7 @@ public function testToWithSuffix()
                 ['label' => 'Test', 'url' => ['/site/page', 'view' => 'about']],
             ],
         ]);
-        $this->assertRegExp('~<a href="/site/page.html\?view=about">~', $output);
+        $this->assertMatchesRegularExpression('~<a href="/site/page.html\?view=about">~', $output);
     }
 
     public function testBase()
diff --git a/tests/framework/helpers/VarDumperTest.php b/tests/framework/helpers/VarDumperTest.php
index 434876398a2..b8dd2e63cc6 100644
--- a/tests/framework/helpers/VarDumperTest.php
+++ b/tests/framework/helpers/VarDumperTest.php
@@ -16,7 +16,7 @@
  */
 class VarDumperTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -29,8 +29,8 @@ public function testDumpIncompleteObject()
         $serializedObj = 'O:16:"nonExistingClass":0:{}';
         $incompleteObj = unserialize($serializedObj);
         $dumpResult = VarDumper::dumpAsString($incompleteObj);
-        $this->assertContains("__PHP_Incomplete_Class#1\n(", $dumpResult);
-        $this->assertContains('nonExistingClass', $dumpResult);
+        $this->assertStringContainsString("__PHP_Incomplete_Class#1\n(", $dumpResult);
+        $this->assertStringContainsString('nonExistingClass', $dumpResult);
     }
 
     public function testExportIncompleteObject()
@@ -38,7 +38,7 @@ public function testExportIncompleteObject()
         $serializedObj = 'O:16:"nonExistingClass":0:{}';
         $incompleteObj = unserialize($serializedObj);
         $exportResult = VarDumper::export($incompleteObj);
-        $this->assertContains('nonExistingClass', $exportResult);
+        $this->assertStringContainsString('nonExistingClass', $exportResult);
     }
 
     public function testDumpObject()
@@ -50,9 +50,9 @@ public function testDumpObject()
         $obj->name = 'test-name';
         $obj->price = 19;
         $dumpResult = VarDumper::dumpAsString($obj);
-        $this->assertContains("stdClass#1\n(", $dumpResult);
-        $this->assertContains("[name] => 'test-name'", $dumpResult);
-        $this->assertContains('[price] => 19', $dumpResult);
+        $this->assertStringContainsString("stdClass#1\n(", $dumpResult);
+        $this->assertStringContainsString("[name] => 'test-name'", $dumpResult);
+        $this->assertStringContainsString('[price] => 19', $dumpResult);
     }
 
     /**
@@ -197,7 +197,7 @@ public function testDumpClassWithCustomDebugInfo()
         $object->unitPrice = 15;
 
         $dumpResult = VarDumper::dumpAsString($object);
-        $this->assertContains('totalPrice', $dumpResult);
-        $this->assertNotContains('unitPrice', $dumpResult);
+        $this->assertStringContainsString('totalPrice', $dumpResult);
+        $this->assertStringNotContainsString('unitPrice', $dumpResult);
     }
 }
diff --git a/tests/framework/i18n/DbMessageSourceTest.php b/tests/framework/i18n/DbMessageSourceTest.php
index e295365ed86..8e4dd725e87 100644
--- a/tests/framework/i18n/DbMessageSourceTest.php
+++ b/tests/framework/i18n/DbMessageSourceTest.php
@@ -73,7 +73,7 @@ protected static function runConsoleAction($route, $params = [])
         }
     }
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         parent::setUpBeforeClass();
         $databases = static::getParam('databases');
@@ -104,7 +104,7 @@ public static function setUpBeforeClass()
         static::$db->createCommand()->insert('message', ['id' => 5, 'language' => 'ru', 'translation' => 'На диване {n, plural, =0{нет кошек} =1{лежит одна кошка} one{лежит # кошка} few{лежит # кошки} many{лежит # кошек} other{лежит # кошки}}!'])->execute();
     }
 
-    public static function tearDownAfterClass()
+    public static function tearDownAfterClass(): void
     {
         static::runConsoleAction('migrate/down', ['migrationPath' => '@yii/i18n/migrations/', 'interactive' => false]);
         if (static::$db) {
diff --git a/tests/framework/i18n/FormatterDateTest.php b/tests/framework/i18n/FormatterDateTest.php
index ef488433572..1af75fc49e0 100644
--- a/tests/framework/i18n/FormatterDateTest.php
+++ b/tests/framework/i18n/FormatterDateTest.php
@@ -22,7 +22,7 @@ class FormatterDateTest extends TestCase
      */
     protected $formatter;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -35,7 +35,7 @@ protected function setUp()
         $this->formatter = new Formatter(['locale' => 'en-US']);
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         IntlTestHelper::resetIntlStatus();
@@ -170,22 +170,22 @@ public function testIntlAsDatetime()
 
         // empty input
         $this->formatter->locale = 'de-DE';
-        $this->assertRegExp('~01\.01\.1970,? 00:00:00~', $this->formatter->asDatetime(''));
-        $this->assertRegExp('~01\.01\.1970,? 00:00:00~', $this->formatter->asDatetime(0));
-        $this->assertRegExp('~01\.01\.1970,? 00:00:00~', $this->formatter->asDatetime(false));
+        $this->assertMatchesRegularExpression('~01\.01\.1970,? 00:00:00~', $this->formatter->asDatetime(''));
+        $this->assertMatchesRegularExpression('~01\.01\.1970,? 00:00:00~', $this->formatter->asDatetime(0));
+        $this->assertMatchesRegularExpression('~01\.01\.1970,? 00:00:00~', $this->formatter->asDatetime(false));
     }
 
     public function testAsDatetime()
     {
         $value = time();
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             $this->sanitizeWhitespaces(date('~M j, Y,? g:i:s A~', $value)),
             $this->sanitizeWhitespaces($this->formatter->asDatetime($value))
         );
         $this->assertSame(date('Y/m/d h:i:s A', $value), $this->formatter->asDatetime($value, 'php:Y/m/d h:i:s A'));
 
         $value = new DateTime();
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             $this->sanitizeWhitespaces(date('~M j, Y,? g:i:s A~', $value->getTimestamp())),
             $this->sanitizeWhitespaces($this->formatter->asDatetime($value))
         );
@@ -195,7 +195,7 @@ public function testAsDatetime()
         $value = new DateTime();
         $date = $value->format('Y-m-d');
         $value = new DateTime($date);
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             $this->sanitizeWhitespaces(date('~M j, Y,? g:i:s A~', $value->getTimestamp())),
             $this->sanitizeWhitespaces($this->formatter->asDatetime($date))
         );
@@ -203,7 +203,7 @@ public function testAsDatetime()
 
         if (PHP_VERSION_ID >= 50500) {
             $value = new \DateTimeImmutable();
-            $this->assertRegExp(
+            $this->assertMatchesRegularExpression(
                 $this->sanitizeWhitespaces(date('~M j, Y,? g:i:s A~', $value->getTimestamp())),
                 $this->sanitizeWhitespaces($this->formatter->asDatetime($value))
             );
@@ -217,15 +217,15 @@ public function testAsDatetime()
         }
 
         // empty input
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             $this->sanitizeWhitespaces('~Jan 1, 1970,? 12:00:00 AM~'),
             $this->sanitizeWhitespaces($this->formatter->asDatetime(''))
         );
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             $this->sanitizeWhitespaces('~Jan 1, 1970,? 12:00:00 AM~'),
             $this->sanitizeWhitespaces($this->formatter->asDatetime(0))
         );
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             $this->sanitizeWhitespaces('~Jan 1, 1970,? 12:00:00 AM~'),
             $this->sanitizeWhitespaces($this->formatter->asDatetime(false))
         );
@@ -536,6 +536,7 @@ public function testAsDuration()
         // other options
         $this->assertSame('minus 244 seconds', $this->formatter->asDuration($interval_244_seconds, ' and ', 'minus '));
         $this->assertSame('minus 4 minutes and 4 seconds', $this->formatter->asDuration(-244, ' and ', 'minus '));
+        $this->assertSame('1 second', $this->formatter->asDuration(1.5));
 
         // Pass a inverted DateInterval string
         $this->assertSame('-1 year, 2 months, 10 days, 2 hours, 30 minutes', $this->formatter->asDuration('2008-05-11T15:30:00Z/2007-03-01T13:00:00Z'));
diff --git a/tests/framework/i18n/FormatterNumberTest.php b/tests/framework/i18n/FormatterNumberTest.php
index 234c9a5ea24..e572adb9021 100755
--- a/tests/framework/i18n/FormatterNumberTest.php
+++ b/tests/framework/i18n/FormatterNumberTest.php
@@ -22,7 +22,7 @@ class FormatterNumberTest extends TestCase
      */
     protected $formatter;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -35,7 +35,7 @@ protected function setUp()
         $this->formatter = new Formatter(['locale' => 'en-US']);
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         IntlTestHelper::resetIntlStatus();
diff --git a/tests/framework/i18n/FormatterTest.php b/tests/framework/i18n/FormatterTest.php
index a44b74aec60..83d4f884212 100644
--- a/tests/framework/i18n/FormatterTest.php
+++ b/tests/framework/i18n/FormatterTest.php
@@ -24,7 +24,7 @@ class FormatterTest extends TestCase
      */
     protected $formatter;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -39,7 +39,7 @@ protected function setUp()
         }
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         IntlTestHelper::resetIntlStatus();
diff --git a/tests/framework/i18n/GettextPoFileTest.php b/tests/framework/i18n/GettextPoFileTest.php
index 2c202fad235..81a93e889ca 100644
--- a/tests/framework/i18n/GettextPoFileTest.php
+++ b/tests/framework/i18n/GettextPoFileTest.php
@@ -15,7 +15,7 @@
  */
 class GettextPoFileTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/i18n/I18NTest.php b/tests/framework/i18n/I18NTest.php
index 77a514acaf0..c95ed2248ab 100644
--- a/tests/framework/i18n/I18NTest.php
+++ b/tests/framework/i18n/I18NTest.php
@@ -25,7 +25,7 @@ class I18NTest extends TestCase
      */
     public $i18n;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/i18n/LocaleTest.php b/tests/framework/i18n/LocaleTest.php
index 60d1951eca9..2e5ef84ebaa 100644
--- a/tests/framework/i18n/LocaleTest.php
+++ b/tests/framework/i18n/LocaleTest.php
@@ -20,7 +20,7 @@ class LocaleTest extends TestCase
      */
     protected $locale;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -31,7 +31,7 @@ protected function setUp()
         $this->locale = new Locale(['locale' => 'en-US']);
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         $this->locale = null;
diff --git a/tests/framework/log/DbTargetTest.php b/tests/framework/log/DbTargetTest.php
index 9d118d21bc1..853623963da 100644
--- a/tests/framework/log/DbTargetTest.php
+++ b/tests/framework/log/DbTargetTest.php
@@ -64,7 +64,7 @@ protected static function runConsoleAction($route, $params = [])
         }
     }
 
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $databases = static::getParam('databases');
@@ -78,7 +78,7 @@ public function setUp()
         static::runConsoleAction('migrate/up', ['migrationPath' => '@yii/log/migrations/', 'interactive' => false]);
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         self::getConnection()->createCommand()->truncateTable(self::$logTable)->execute();
         static::runConsoleAction('migrate/down', ['migrationPath' => '@yii/log/migrations/', 'interactive' => false]);
diff --git a/tests/framework/log/DispatcherTest.php b/tests/framework/log/DispatcherTest.php
index 5cb35b52e3c..24af341a79d 100644
--- a/tests/framework/log/DispatcherTest.php
+++ b/tests/framework/log/DispatcherTest.php
@@ -52,7 +52,7 @@ class DispatcherTest extends TestCase
          */
         public static $functions = [];
 
-        protected function setUp()
+        protected function setUp(): void
         {
             static::$microtimeIsMocked = false;
             $this->dispatcher = new Dispatcher();
diff --git a/tests/framework/log/EmailTargetTest.php b/tests/framework/log/EmailTargetTest.php
index 7c3b4e008f2..a60046b6cd8 100644
--- a/tests/framework/log/EmailTargetTest.php
+++ b/tests/framework/log/EmailTargetTest.php
@@ -24,7 +24,7 @@ class EmailTargetTest extends TestCase
     /**
      * Set up mailer.
      */
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mailer = $this->getMockBuilder('yii\\mail\\BaseMailer')
@@ -38,16 +38,17 @@ protected function setUp()
     public function testInitWithOptionTo()
     {
         $target = new EmailTarget(['mailer' => $this->mailer, 'message' => ['to' => 'developer1@example.com']]);
-        $this->assertInternalType('object', $target); // should be no exception during `init()`
+        $this->assertIsObject($target); // should be no exception during `init()`
     }
 
     /**
      * @covers \yii\log\EmailTarget::init()
-     * @expectedException \yii\base\InvalidConfigException
-     * @expectedExceptionMessage The "to" option must be set for EmailTarget::message.
      */
     public function testInitWithoutOptionTo()
     {
+        $this->expectException(\yii\base\InvalidConfigException::class);
+        $this->expectExceptionMessage('The "to" option must be set for EmailTarget::message.');
+                
         new EmailTarget(['mailer' => $this->mailer]);
     }
 
diff --git a/tests/framework/log/FileTargetTest.php b/tests/framework/log/FileTargetTest.php
index 4f6eaf4ae75..6c23837f23c 100644
--- a/tests/framework/log/FileTargetTest.php
+++ b/tests/framework/log/FileTargetTest.php
@@ -20,7 +20,7 @@
  */
 class FileTargetTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -37,7 +37,7 @@ public function testInit()
         new FileTarget([
             'logFile' => Yii::getAlias('@yiiunit/runtime/log/filetargettest.log'),
         ]);
-        $this->assertFileNotExists(
+        $this->assertFileDoesNotExist(
             dirname($logFile),
             'Log directory should not be created during init process'
         );
@@ -72,10 +72,10 @@ public function testRotate()
         clearstatcache();
 
         $this->assertFileExists($logFile);
-        $this->assertFileNotExists($logFile . '.1');
-        $this->assertFileNotExists($logFile . '.2');
-        $this->assertFileNotExists($logFile . '.3');
-        $this->assertFileNotExists($logFile . '.4');
+        $this->assertFileDoesNotExist($logFile . '.1');
+        $this->assertFileDoesNotExist($logFile . '.2');
+        $this->assertFileDoesNotExist($logFile . '.3');
+        $this->assertFileDoesNotExist($logFile . '.4');
 
         // exceed max size
         for ($i = 0; $i < 1024; $i++) {
@@ -92,9 +92,9 @@ public function testRotate()
 
         $this->assertFileExists($logFile);
         $this->assertFileExists($logFile . '.1');
-        $this->assertFileNotExists($logFile . '.2');
-        $this->assertFileNotExists($logFile . '.3');
-        $this->assertFileNotExists($logFile . '.4');
+        $this->assertFileDoesNotExist($logFile . '.2');
+        $this->assertFileDoesNotExist($logFile . '.3');
+        $this->assertFileDoesNotExist($logFile . '.4');
 
         // second rotate
 
@@ -107,9 +107,9 @@ public function testRotate()
 
         $this->assertFileExists($logFile);
         $this->assertFileExists($logFile . '.1');
-        $this->assertFileNotExists($logFile . '.2');
-        $this->assertFileNotExists($logFile . '.3');
-        $this->assertFileNotExists($logFile . '.4');
+        $this->assertFileDoesNotExist($logFile . '.2');
+        $this->assertFileDoesNotExist($logFile . '.3');
+        $this->assertFileDoesNotExist($logFile . '.4');
     }
 
     public function testLogEmptyStrings()
@@ -142,17 +142,17 @@ public function testLogEmptyStrings()
         $logger->messages = array_fill(0, 1, 'yyy');
         $logger->export();
 
-        $this->assertFileNotExists($logFile);
+        $this->assertFileDoesNotExist($logFile);
 
         $logger->messages = array_fill(0, 10, '');
         $logger->export();
 
-        $this->assertFileNotExists($logFile);
+        $this->assertFileDoesNotExist($logFile);
 
         $logger->messages = array_fill(0, 10, null);
         $logger->export();
 
-        $this->assertFileNotExists($logFile);
+        $this->assertFileDoesNotExist($logFile);
     }
 
     private function clearLogFile($logFile)
diff --git a/tests/framework/log/LoggerTest.php b/tests/framework/log/LoggerTest.php
index d5ffa83aca4..3238ea0afd7 100644
--- a/tests/framework/log/LoggerTest.php
+++ b/tests/framework/log/LoggerTest.php
@@ -26,7 +26,7 @@ class LoggerTest extends TestCase
      */
     protected $dispatcher;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->logger = new Logger();
         $this->dispatcher = $this->getMockBuilder('yii\log\Dispatcher')
diff --git a/tests/framework/log/SyslogTargetTest.php b/tests/framework/log/SyslogTargetTest.php
index 3c9efd10aec..384b51ec5d7 100644
--- a/tests/framework/log/SyslogTargetTest.php
+++ b/tests/framework/log/SyslogTargetTest.php
@@ -52,7 +52,7 @@ class SyslogTargetTest extends TestCase
         /**
          * Set up syslogTarget as the mock object.
          */
-        protected function setUp()
+        protected function setUp(): void
         {
             $this->syslogTarget = $this->getMockBuilder('yii\\log\\SyslogTarget')
                 ->setMethods(['getMessagePrefix'])
diff --git a/tests/framework/log/TargetTest.php b/tests/framework/log/TargetTest.php
index eace93aa3bf..7548092b788 100644
--- a/tests/framework/log/TargetTest.php
+++ b/tests/framework/log/TargetTest.php
@@ -76,7 +76,12 @@ public function testFilter($filter, $expected)
         $logger->log('testH', Logger::LEVEL_ERROR, 'yii.db.Command.whatever');
         $logger->log('testI', Logger::LEVEL_ERROR, 'yii\db\Command::query');
 
-        $this->assertEquals(count($expected), count(static::$messages), 'Expected ' . implode(',', $expected) . ', got ' . implode(',', array_column(static::$messages, 0)));
+        $messageColumn = [];
+        foreach (static::$messages as $message) {
+            $messageColumn[] = $message[0];
+        }
+
+        $this->assertEquals(count($expected), count(static::$messages), 'Expected ' . implode(',', $expected) . ', got ' . implode(',', $messageColumn));
         $i = 0;
         foreach ($expected as $e) {
             $this->assertEquals('test' . $e, static::$messages[$i++][0]);
@@ -118,23 +123,23 @@ public function testGetContextMessage()
             'C_c' => 1,
         ];
         $context = $target->getContextMessage();
-        $this->assertContains('A_a', $context);
-        $this->assertNotContains('A_b', $context);
-        $this->assertContains('A_c', $context);
-        $this->assertContains('B_a', $context);
-        $this->assertNotContains('B_b', $context);
-        $this->assertNotContains('B_c', $context);
-        $this->assertContains('C_a', $context);
-        $this->assertContains('C_b', $context);
-        $this->assertContains('C_c', $context);
-        $this->assertNotContains('D_a', $context);
-        $this->assertNotContains('D_b', $context);
-        $this->assertNotContains('D_c', $context);
-        $this->assertNotContains('E_a', $context);
-        $this->assertNotContains('E_b', $context);
-        $this->assertNotContains('E_c', $context);
-        $this->assertNotContains('mySecret', $context);
-        $this->assertContains('***', $context);
+        $this->assertStringContainsString('A_a', $context);
+        $this->assertStringNotContainsString('A_b', $context);
+        $this->assertStringContainsString('A_c', $context);
+        $this->assertStringContainsString('B_a', $context);
+        $this->assertStringNotContainsString('B_b', $context);
+        $this->assertStringNotContainsString('B_c', $context);
+        $this->assertStringContainsString('C_a', $context);
+        $this->assertStringContainsString('C_b', $context);
+        $this->assertStringContainsString('C_c', $context);
+        $this->assertStringNotContainsString('D_a', $context);
+        $this->assertStringNotContainsString('D_b', $context);
+        $this->assertStringNotContainsString('D_c', $context);
+        $this->assertStringNotContainsString('E_a', $context);
+        $this->assertStringNotContainsString('E_b', $context);
+        $this->assertStringNotContainsString('E_c', $context);
+        $this->assertStringNotContainsString('mySecret', $context);
+        $this->assertStringContainsString('***', $context);
     }
 
     /**
diff --git a/tests/framework/mail/BaseMailerTest.php b/tests/framework/mail/BaseMailerTest.php
index dc7e43deb0e..e0c388027b3 100644
--- a/tests/framework/mail/BaseMailerTest.php
+++ b/tests/framework/mail/BaseMailerTest.php
@@ -19,7 +19,7 @@
  */
 class BaseMailerTest extends TestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
@@ -32,7 +32,7 @@ public function setUp()
         }
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         $filePath = $this->getTestFilePath();
         if (file_exists($filePath)) {
@@ -85,7 +85,7 @@ public function testSetupView()
         ];
         $mailer->setView($viewConfig);
         $view = $mailer->getView();
-        $this->assertInternalType('object', $view, 'Unable to setup view via config!');
+        $this->assertIsObject($view, 'Unable to setup view via config!');
         $this->assertEquals($viewConfig['params'], $view->params, 'Unable to configure view via config array!');
     }
 
@@ -96,14 +96,14 @@ public function testGetDefaultView()
     {
         $mailer = new Mailer();
         $view = $mailer->getView();
-        $this->assertInternalType('object', $view, 'Unable to get default view!');
+        $this->assertIsObject($view, 'Unable to get default view!');
     }
 
     public function testCreateMessage()
     {
         $mailer = new Mailer();
         $message = $mailer->compose();
-        $this->assertInternalType('object', $message, 'Unable to create message instance!');
+        $this->assertIsObject($message, 'Unable to create message instance!');
         $this->assertEquals($mailer->messageClass, get_class($message), 'Invalid message class!');
     }
 
diff --git a/tests/framework/mail/BaseMessageTest.php b/tests/framework/mail/BaseMessageTest.php
index 9741f5d66d7..32bf2dcd31b 100644
--- a/tests/framework/mail/BaseMessageTest.php
+++ b/tests/framework/mail/BaseMessageTest.php
@@ -17,7 +17,7 @@
  */
 class BaseMessageTest extends TestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication([
             'components' => [
diff --git a/tests/framework/mutex/FileMutexTest.php b/tests/framework/mutex/FileMutexTest.php
index 48e3778c6ec..60947e750aa 100644
--- a/tests/framework/mutex/FileMutexTest.php
+++ b/tests/framework/mutex/FileMutexTest.php
@@ -47,6 +47,6 @@ public function testDeleteLockFile($mutexName)
         $this->assertFileExists($fileName);
 
         $mutex->release($mutexName);
-        $this->assertFileNotExists($fileName);
+        $this->assertFileDoesNotExist($fileName);
     }
 }
diff --git a/tests/framework/rbac/DbManagerTestCase.php b/tests/framework/rbac/DbManagerTestCase.php
index bb5debaddc8..f1063ebe0f4 100644
--- a/tests/framework/rbac/DbManagerTestCase.php
+++ b/tests/framework/rbac/DbManagerTestCase.php
@@ -36,6 +36,20 @@ abstract class DbManagerTestCase extends ManagerTestCase
      */
     protected $db;
 
+    public function testGetAssignmentsByRole()
+    {
+        $this->prepareData();
+        $reader = $this->auth->getRole('reader');
+        $this->auth->assign($reader, 123);
+
+        $this->auth = $this->createManager();
+
+        $this->assertEquals([], $this->auth->getUserIdsByRole('nonexisting'));
+        $this->assertEquals(['123', 'reader A'], $this->auth->getUserIdsByRole('reader'), '', 0.0, 10, true);
+        $this->assertEquals(['author B'], $this->auth->getUserIdsByRole('author'));
+        $this->assertEquals(['admin C'], $this->auth->getUserIdsByRole('admin'));
+    }    
+
     protected static function runConsoleAction($route, $params = [])
     {
         if (Yii::$app === null) {
@@ -67,7 +81,7 @@ protected static function runConsoleAction($route, $params = [])
         }
     }
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         parent::setUpBeforeClass();
         $databases = static::getParam('databases');
@@ -81,13 +95,13 @@ public static function setUpBeforeClass()
         static::runConsoleAction('migrate/up', ['migrationPath' => '@yii/rbac/migrations/', 'interactive' => false]);
     }
 
-    public static function tearDownAfterClass()
+    public static function tearDownAfterClass(): void
     {
         static::runConsoleAction('migrate/down', ['all', 'migrationPath' => '@yii/rbac/migrations/', 'interactive' => false]);
         parent::tearDownAfterClass();
     }
 
-    protected function setUp()
+    protected function setUp(): void
     {
         if (defined('HHVM_VERSION') && static::$driverName === 'pgsql') {
             static::markTestSkipped('HHVM PDO for pgsql does not work with binary columns, which are essential for rbac schema. See https://github.com/yiisoft/yii2/issues/14244');
@@ -96,7 +110,7 @@ protected function setUp()
         $this->auth = $this->createManager();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         $this->auth->removeAll();
@@ -393,7 +407,10 @@ private function assertSingleQueryToAssignmentsTable($logTarget)
             return strpos($message[0], 'auth_assignment') !== false;
         });
         $this->assertCount(1, $messages, 'Only one query should have been performed, but there are the following logs: ' . print_r($logTarget->messages, true));
-        $this->assertContains('auth_assignment', $messages[0][0], 'Log message should be a query to auth_assignment table');
+        $this->assertStringContainsString(
+            'auth_assignment',
+            $messages[0][0], 'Log message should be a query to auth_assignment table',
+        );
         $logTarget->messages = [];
     }
 }
diff --git a/tests/framework/rbac/ManagerTestCase.php b/tests/framework/rbac/ManagerTestCase.php
index e68378c541e..8c5ead7b544 100644
--- a/tests/framework/rbac/ManagerTestCase.php
+++ b/tests/framework/rbac/ManagerTestCase.php
@@ -373,8 +373,16 @@ public function testAssignMultipleRoles()
             $roleNames[] = $role->name;
         }
 
-        $this->assertContains('reader', $roleNames, 'Roles should contain reader. Currently it has: ' . implode(', ', $roleNames));
-        $this->assertContains('author', $roleNames, 'Roles should contain author. Currently it has: ' . implode(', ', $roleNames));
+        $this->assertContains(
+            'reader',
+            $roleNames,
+            'Roles should contain reader. Currently it has: ' . implode(', ', $roleNames)
+        );
+        $this->assertContains(
+            'author',
+            $roleNames,
+            'Roles should contain author. Currently it has: ' . implode(', ', $roleNames)
+        );
     }
 
     public function testAssignmentsToIntegerId()
diff --git a/tests/framework/rbac/PhpManagerTest.php b/tests/framework/rbac/PhpManagerTest.php
index 38107d26a84..e27b74420f5 100644
--- a/tests/framework/rbac/PhpManagerTest.php
+++ b/tests/framework/rbac/PhpManagerTest.php
@@ -74,7 +74,7 @@ protected function createManager()
         ]);
     }
 
-    protected function setUp()
+    protected function setUp(): void
     {
         static::$filemtime = null;
         static::$time = null;
@@ -89,7 +89,7 @@ protected function setUp()
         $this->auth = $this->createManager();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         $this->removeDataFiles();
         static::$filemtime = null;
@@ -136,15 +136,16 @@ public function testUpdateDescription()
         $this->assertTrue($this->auth->update($name, $permission), 'You should be able to save w/o changing name.');
     }
 
-    /**
-     * @expectedException \yii\base\InvalidParamException
-     */
     public function testOverwriteName()
     {
         $this->prepareData();
+
         $name = 'readPost';
         $permission = $this->auth->getPermission($name);
         $permission->name = 'createPost';
+
+        $this->expectException('yii\base\InvalidParamException');
+
         $this->auth->update($name, $permission);
     }
 
@@ -154,11 +155,11 @@ public function testSaveAssignments()
         $role = $this->auth->createRole('Admin');
         $this->auth->add($role);
         $this->auth->assign($role, 13);
-        $this->assertContains('Admin', file_get_contents($this->getAssignmentFile()));
+        $this->assertStringContainsString('Admin', file_get_contents($this->getAssignmentFile()));
         $role->name = 'NewAdmin';
         $this->auth->update('Admin', $role);
-        $this->assertContains('NewAdmin', file_get_contents($this->getAssignmentFile()));
+        $this->assertStringContainsString('NewAdmin', file_get_contents($this->getAssignmentFile()));
         $this->auth->remove($role);
-        $this->assertNotContains('NewAdmin', file_get_contents($this->getAssignmentFile()));
+        $this->assertStringNotContainsString('NewAdmin', file_get_contents($this->getAssignmentFile()));
     }
 }
diff --git a/tests/framework/rest/IndexActionTest.php b/tests/framework/rest/IndexActionTest.php
index d6481aa10e2..2b703d5494e 100644
--- a/tests/framework/rest/IndexActionTest.php
+++ b/tests/framework/rest/IndexActionTest.php
@@ -18,7 +18,7 @@
  */
 class IndexActionTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication([
diff --git a/tests/framework/rest/SerializerTest.php b/tests/framework/rest/SerializerTest.php
index 217d7fbf7a9..d7516e0dae0 100644
--- a/tests/framework/rest/SerializerTest.php
+++ b/tests/framework/rest/SerializerTest.php
@@ -10,7 +10,6 @@
 use yii\base\Model;
 use yii\data\ArrayDataProvider;
 use yii\rest\Serializer;
-use yii\web\Request;
 use yiiunit\TestCase;
 
 /**
@@ -18,7 +17,7 @@
  */
 class SerializerTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication([
@@ -416,32 +415,6 @@ public function testSerializeDataProvider($dataProvider, $expectedResult, $saveK
         $this->assertEquals($expectedResult, $serializer->serialize($dataProvider));
     }
 
-    /**
-     * @dataProvider dataProviderSerializeDataProvider
-     *
-     * @param \yii\data\DataProviderInterface $dataProvider
-     * @param array $expectedResult
-     * @param bool $saveKeys
-     */
-    public function testHeadSerializeDataProvider($dataProvider, $expectedResult, $saveKeys = false)
-    {
-        $serializer = new Serializer();
-        $serializer->preserveKeys = $saveKeys;
-        $serializer->collectionEnvelope = 'data';
-
-        $this->assertEquals($expectedResult, $serializer->serialize($dataProvider)['data']);
-
-        $_SERVER['REQUEST_METHOD'] = 'HEAD';
-        $request = new Request();
-        $_POST[$request->methodParam] = 'HEAD';
-        $serializer = new Serializer([
-            'request' => $request
-        ]);
-        $serializer->preserveKeys = $saveKeys;
-        $this->assertEmpty($serializer->serialize($dataProvider));
-        unset($_POST[$request->methodParam], $_SERVER['REQUEST_METHOD']);
-    }
-
     /**
      * @see https://github.com/yiisoft/yii2/issues/16334
      */
diff --git a/tests/framework/rest/UrlRuleTest.php b/tests/framework/rest/UrlRuleTest.php
index 0228742ce18..9cc39935f7d 100644
--- a/tests/framework/rest/UrlRuleTest.php
+++ b/tests/framework/rest/UrlRuleTest.php
@@ -20,7 +20,7 @@
  */
 class UrlRuleTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -376,7 +376,8 @@ public function testCreateUrl($ruleConfig, $tests)
     }
 
     /**
-     * @dataProvider testGetCreateUrlStatusProvider
+     * @dataProvider getCreateUrlStatusProvider
+     *
      * @param array $ruleConfig
      * @param array $tests
      */
@@ -413,7 +414,7 @@ public function testGetCreateUrlStatus($ruleConfig, $tests)
      *   - second element is the expected URL
      *   - third element is the expected result of getCreateUrlStatus() method
      */
-    public function testGetCreateUrlStatusProvider()
+    public static function getCreateUrlStatusProvider()
     {
         return [
             'single controller' => [
diff --git a/tests/framework/test/ActiveFixtureTest.php b/tests/framework/test/ActiveFixtureTest.php
index ba52d0e286d..c659e6958cf 100644
--- a/tests/framework/test/ActiveFixtureTest.php
+++ b/tests/framework/test/ActiveFixtureTest.php
@@ -23,7 +23,7 @@ class ActiveFixtureTest extends DatabaseTestCase
 {
     protected $driverName = 'mysql';
 
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $db = $this->getConnection();
@@ -31,7 +31,7 @@ public function setUp()
         ActiveRecord::$db = $db;
     }
 
-    public function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
     }
@@ -205,12 +205,12 @@ class BaseDbTestCase
 {
     use FixtureTrait;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->initFixtures();
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
     }
 }
diff --git a/tests/framework/test/ArrayFixtureTest.php b/tests/framework/test/ArrayFixtureTest.php
index 50ec62c3282..669dbc6cbce 100644
--- a/tests/framework/test/ArrayFixtureTest.php
+++ b/tests/framework/test/ArrayFixtureTest.php
@@ -20,7 +20,7 @@ class ArrayFixtureTest extends TestCase
      */
     private $_fixture;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->_fixture = new ArrayFixture();
@@ -47,12 +47,12 @@ public function testNothingToLoad()
         $this->assertEmpty($this->_fixture->data, 'fixture data should not be loaded');
     }
 
-    /**
-     * @expectedException \yii\base\InvalidConfigException
-     */
     public function testWrongDataFileException()
     {
         $this->_fixture->dataFile = 'wrong/fixtures/data/path/alias';
+
+        $this->expectException(\yii\base\InvalidConfigException::class);
+        
         $this->_fixture->load();
     }
 }
diff --git a/tests/framework/test/FixtureTest.php b/tests/framework/test/FixtureTest.php
index 25c57bc5537..6ec23bae974 100644
--- a/tests/framework/test/FixtureTest.php
+++ b/tests/framework/test/FixtureTest.php
@@ -90,12 +90,12 @@ class MyTestCase
     public static $load;
     public static $unload;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->loadFixtures();
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
         $this->unloadFixtures();
     }
diff --git a/tests/framework/validators/BooleanValidatorTest.php b/tests/framework/validators/BooleanValidatorTest.php
index 63331f6136f..0405a518967 100644
--- a/tests/framework/validators/BooleanValidatorTest.php
+++ b/tests/framework/validators/BooleanValidatorTest.php
@@ -17,7 +17,7 @@
  */
 class BooleanValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/CompareValidatorTest.php b/tests/framework/validators/CompareValidatorTest.php
index 2b600889d8c..69bc01b4c51 100644
--- a/tests/framework/validators/CompareValidatorTest.php
+++ b/tests/framework/validators/CompareValidatorTest.php
@@ -17,7 +17,7 @@
  */
 class CompareValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/DateValidatorTest.php b/tests/framework/validators/DateValidatorTest.php
index fc3cd1ef3d6..c00017cb46c 100644
--- a/tests/framework/validators/DateValidatorTest.php
+++ b/tests/framework/validators/DateValidatorTest.php
@@ -18,7 +18,7 @@
  */
 class DateValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -30,7 +30,7 @@ protected function setUp()
         ]);
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         parent::tearDown();
         IntlTestHelper::resetIntlStatus();
diff --git a/tests/framework/validators/DefaultValueValidatorTest.php b/tests/framework/validators/DefaultValueValidatorTest.php
index 9b25a1166ee..a76207b7f58 100644
--- a/tests/framework/validators/DefaultValueValidatorTest.php
+++ b/tests/framework/validators/DefaultValueValidatorTest.php
@@ -15,7 +15,7 @@
  */
 class DefaultValueValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/EachValidatorTest.php b/tests/framework/validators/EachValidatorTest.php
index 8e32327b2f3..aa328b3287b 100644
--- a/tests/framework/validators/EachValidatorTest.php
+++ b/tests/framework/validators/EachValidatorTest.php
@@ -20,7 +20,7 @@
  */
 class EachValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -76,12 +76,12 @@ public function testAllowMessageFromRule()
 
         $validator->allowMessageFromRule = true;
         $validator->validateAttribute($model, 'attr_one');
-        $this->assertContains('integer', $model->getFirstError('attr_one'));
+        $this->assertStringContainsString('integer', $model->getFirstError('attr_one'));
 
         $model->clearErrors();
         $validator->allowMessageFromRule = false;
         $validator->validateAttribute($model, 'attr_one');
-        $this->assertNotContains('integer', $model->getFirstError('attr_one'));
+        $this->assertStringNotContainsString('integer', $model->getFirstError('attr_one'));
     }
 
     /**
@@ -209,14 +209,11 @@ public function testValidateArrayAccess()
      * of different type during validation.
      * (ie: public array $dummy; where $dummy is array of booleans,
      * validator will try to assign these booleans one by one to $dummy)
+     *
+     * @requires PHP >= 7.4
      */
     public function testTypedProperties()
     {
-        if (PHP_VERSION_ID < 70400) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.4');
-            return;
-        }
-
         $model = new ValidatorTestTypedPropModel();
 
         $validator = new EachValidator(['rule' => ['boolean']]);
diff --git a/tests/framework/validators/EmailValidatorTest.php b/tests/framework/validators/EmailValidatorTest.php
index 7687b2bdc8f..fcf3b020871 100644
--- a/tests/framework/validators/EmailValidatorTest.php
+++ b/tests/framework/validators/EmailValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class EmailValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/ExistValidatorTest.php b/tests/framework/validators/ExistValidatorTest.php
index 259efe86e0d..1fc2e27b5ec 100644
--- a/tests/framework/validators/ExistValidatorTest.php
+++ b/tests/framework/validators/ExistValidatorTest.php
@@ -19,7 +19,7 @@
 
 abstract class ExistValidatorTest extends DatabaseTestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/FileValidatorTest.php b/tests/framework/validators/FileValidatorTest.php
index 157269e5d41..9e05edf4d23 100644
--- a/tests/framework/validators/FileValidatorTest.php
+++ b/tests/framework/validators/FileValidatorTest.php
@@ -12,6 +12,7 @@
 use yii\validators\FileValidator;
 use yii\web\UploadedFile;
 use yiiunit\data\validators\models\FakedValidationModel;
+use yiiunit\data\validators\models\FakedValidationTypedModel;
 use yiiunit\TestCase;
 
 /**
@@ -19,7 +20,7 @@
  */
 class FileValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -29,7 +30,7 @@ public function testAssureMessagesSetOnInit()
     {
         $val = new FileValidator();
         foreach (['message', 'uploadRequired', 'tooMany', 'wrongExtension', 'tooBig', 'tooSmall', 'wrongMimeType'] as $attr) {
-            $this->assertInternalType('string', $val->$attr);
+            $this->assertIsString($val->$attr);
         }
     }
 
@@ -119,6 +120,7 @@ public function testValidateAttributeMultiple()
         $val->validateAttribute($m, 'attr_files');
         $this->assertTrue($m->hasErrors('attr_files'));
         $this->assertSame($val->uploadRequired, current($m->getErrors('attr_files')));
+
         $m = FakedValidationModel::createWithAttributes(
             [
                 'attr_files' => $this->createTestFiles(
@@ -314,6 +316,32 @@ public function testValidateAttribute_minFilesTwoMaxFilesUnlimited_hasError()
         $this->assertTrue($model->hasErrors('attr_images'));
     }
 
+    /**
+     * https://github.com/yiisoft/yii2/issues/19855
+     */
+    public function testValidateArrayAttributeWithMinMaxOneAndOneFile()
+    {
+        $validator = new FileValidator(['maxFiles' => 1, 'minFiles' => 0]);
+        $files = $this->createTestFiles(
+            [
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ],
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ],
+            ]
+        )[0]; // <-- only one file
+        $model = FakedValidationModel::createWithAttributes(['attr_images' => [$files]]);
+
+        $validator->validateAttribute($model, 'attr_images');
+        $this->assertFalse($model->hasErrors('attr_images'));
+    }
+
     /**
      * @param  array          $params
      * @return UploadedFile[]
@@ -654,7 +682,9 @@ public function testValidateAttributeErrNoTmpDir()
      * @dataProvider mimeTypeCaseInsensitive
      */
     public function testValidateMimeTypeCaseInsensitive($mask, $fileMimeType, $expected) {
-        $validator = $this->getMock('\yii\validators\FileValidator', ['getMimeTypeByFile']);
+        $validator = $this->getMockBuilder(\yii\validators\FileValidator::class)
+            ->onlyMethods(['getMimeTypeByFile'])
+            ->getMock();
         $validator->method('getMimeTypeByFile')->willReturn($fileMimeType);
         $validator->mimeTypes = [$mask];
 
@@ -662,7 +692,8 @@ public function testValidateMimeTypeCaseInsensitive($mask, $fileMimeType, $expec
         $this->assertEquals($expected, $validator->validate($file), sprintf('Mime type validate fail: "%s" / "%s"', $mask, $fileMimeType));
     }
 
-    public function mimeTypeCaseInsensitive() {
+    public function mimeTypeCaseInsensitive()
+    {
         return [
             ['Image/*', 'image/jp2', true],
             ['image/*', 'Image/jp2', true],
@@ -670,4 +701,132 @@ public function mimeTypeCaseInsensitive() {
             ['image/jxra', 'image/jxrA', true],
         ];
     }
+
+    public function testValidateTypedAttributeNoErrors()
+    {
+        if (version_compare(PHP_VERSION, '7.4', '<')) {
+            $this->markTestSkipped('Requires typed properties');
+        }
+
+        $validator = new FileValidator(['minFiles' => 0, 'maxFiles' => 2]);
+        $file = $this->createTestFiles(
+            [
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ]
+            ]
+        );
+        $model = new FakedValidationTypedModel();
+        $model->single = $file;
+        $model->multiple = [$file];
+        $validator->validateAttribute($model, 'single');
+        $this->assertFalse($model->hasErrors('single'));
+        $validator->validateAttribute($model, 'multiple');
+        $this->assertFalse($model->hasErrors('multiple'));
+    }
+
+    public function testValidateTypedAttributeExactMinNoErrors()
+    {
+        if (version_compare(PHP_VERSION, '7.4', '<')) {
+            $this->markTestSkipped('Requires typed properties');
+        }
+
+        $validator = new FileValidator(['minFiles' => 1]);
+        $file = $this->createTestFiles(
+            [
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ]
+            ]
+        );
+        $model = new FakedValidationTypedModel();
+        $model->single = $file;
+        $model->multiple = [$file];
+        $validator->validateAttribute($model, 'single');
+        $this->assertFalse($model->hasErrors('single'));
+        $validator->validateAttribute($model, 'multiple');
+        $this->assertFalse($model->hasErrors('multiple'));
+    }
+
+    public function testValidateTypedAttributeExactMaxNoErrors()
+    {
+        if (version_compare(PHP_VERSION, '7.4', '<')) {
+            $this->markTestSkipped('Requires typed properties');
+        }
+
+        $validator = new FileValidator(['maxFiles' => 1]);
+        $file = $this->createTestFiles(
+            [
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ]
+            ]
+        );
+        $model = new FakedValidationTypedModel();
+        $model->single = $file;
+        $model->multiple = [$file];
+        $validator->validateAttribute($model, 'single');
+        $this->assertFalse($model->hasErrors('single'));
+        $validator->validateAttribute($model, 'multiple');
+        $this->assertFalse($model->hasErrors('multiple'));
+    }
+
+    public function testValidateTypedAttributeMinError()
+    {
+        if (version_compare(PHP_VERSION, '7.4', '<')) {
+            $this->markTestSkipped('Requires typed properties');
+        }
+
+        $validator = new FileValidator(['minFiles' => 2]);
+        $file = $this->createTestFiles(
+            [
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ]
+            ]
+        );
+        $model = new FakedValidationTypedModel();
+        $model->single = $file;
+        $model->multiple = [$file];
+        $validator->validateAttribute($model, 'single');
+        $this->assertTrue($model->hasErrors('single'));
+        $validator->validateAttribute($model, 'multiple');
+        $this->assertTrue($model->hasErrors('multiple'));
+    }
+
+    public function testValidateTypedAttributeMaxError()
+    {
+        if (version_compare(PHP_VERSION, '7.4', '<')) {
+            $this->markTestSkipped('Requires typed properties');
+        }
+
+        $validator = new FileValidator(['maxFiles' => 1]);
+        $files = $this->createTestFiles(
+            [
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ],
+                [
+                    'name' => 'image.png',
+                    'size' => 1024,
+                    'type' => 'image/png',
+                ]
+            ]
+        );
+        $model = new FakedValidationTypedModel();
+        // single attribute cannot be checked because maxFiles = 0 === no limits
+        $model->multiple = $files;
+        $validator->validateAttribute($model, 'multiple');
+        $this->assertTrue($model->hasErrors('multiple'));
+    }
 }
diff --git a/tests/framework/validators/FilterValidatorTest.php b/tests/framework/validators/FilterValidatorTest.php
index 06153d934a3..f574f259b5a 100644
--- a/tests/framework/validators/FilterValidatorTest.php
+++ b/tests/framework/validators/FilterValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class FilterValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         // destroy application, Validator must work without Yii::$app
diff --git a/tests/framework/validators/IpValidatorTest.php b/tests/framework/validators/IpValidatorTest.php
index a6a365ffb46..b99f6ad6c36 100644
--- a/tests/framework/validators/IpValidatorTest.php
+++ b/tests/framework/validators/IpValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class IpValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         // destroy application, Validator must work without Yii::$app
diff --git a/tests/framework/validators/NumberValidatorTest.php b/tests/framework/validators/NumberValidatorTest.php
index 826eb9cf915..7114e167351 100644
--- a/tests/framework/validators/NumberValidatorTest.php
+++ b/tests/framework/validators/NumberValidatorTest.php
@@ -48,7 +48,7 @@ private function restoreLocale()
         setlocale(LC_NUMERIC, $this->oldLocale);
     }
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -519,8 +519,8 @@ public function testClientValidateComparison()
         ]);
         $model = new FakedValidationModel();
         $js = $val->clientValidateAttribute($model, 'attr_number', new View(['assetBundles' => ['yii\validators\ValidationAsset' => true]]));
-        $this->assertContains('"min":5', $js);
-        $this->assertContains('"max":10', $js);
+        $this->assertStringContainsString('"min":5', $js);
+        $this->assertStringContainsString('"max":10', $js);
 
         $val = new NumberValidator([
             'min' => '5',
@@ -528,8 +528,8 @@ public function testClientValidateComparison()
         ]);
         $model = new FakedValidationModel();
         $js = $val->clientValidateAttribute($model, 'attr_number', new View(['assetBundles' => ['yii\validators\ValidationAsset' => true]]));
-        $this->assertContains('"min":5', $js);
-        $this->assertContains('"max":10', $js);
+        $this->assertStringContainsString('"min":5', $js);
+        $this->assertStringContainsString('"max":10', $js);
 
         $val = new NumberValidator([
             'min' => 5.65,
@@ -537,8 +537,8 @@ public function testClientValidateComparison()
         ]);
         $model = new FakedValidationModel();
         $js = $val->clientValidateAttribute($model, 'attr_number', new View(['assetBundles' => ['yii\validators\ValidationAsset' => true]]));
-        $this->assertContains('"min":5.65', $js);
-        $this->assertContains('"max":13.37', $js);
+        $this->assertStringContainsString('"min":5.65', $js);
+        $this->assertStringContainsString('"max":13.37', $js);
 
         $val = new NumberValidator([
             'min' => '5.65',
@@ -546,8 +546,8 @@ public function testClientValidateComparison()
         ]);
         $model = new FakedValidationModel();
         $js = $val->clientValidateAttribute($model, 'attr_number', new View(['assetBundles' => ['yii\validators\ValidationAsset' => true]]));
-        $this->assertContains('"min":5.65', $js);
-        $this->assertContains('"max":13.37', $js);
+        $this->assertStringContainsString('"min":5.65', $js);
+        $this->assertStringContainsString('"max":13.37', $js);
     }
 
     public function testValidateObject()
diff --git a/tests/framework/validators/RangeValidatorTest.php b/tests/framework/validators/RangeValidatorTest.php
index d86e0224e2b..67d843dc005 100644
--- a/tests/framework/validators/RangeValidatorTest.php
+++ b/tests/framework/validators/RangeValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class RangeValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -34,7 +34,7 @@ public function testInitException()
     public function testAssureMessageSetOnInit()
     {
         $val = new RangeValidator(['range' => []]);
-        $this->assertInternalType('string', $val->message);
+        $this->assertIsString($val->message);
     }
 
     public function testValidateValue()
diff --git a/tests/framework/validators/RegularExpressionValidatorTest.php b/tests/framework/validators/RegularExpressionValidatorTest.php
index 76166d45a01..847f83724fc 100644
--- a/tests/framework/validators/RegularExpressionValidatorTest.php
+++ b/tests/framework/validators/RegularExpressionValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class RegularExpressionValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -50,7 +50,7 @@ public function testValidateAttribute()
     public function testMessageSetOnInit()
     {
         $val = new RegularExpressionValidator(['pattern' => '/^[a-zA-Z0-9](\.)?([^\/]*)$/m']);
-        $this->assertInternalType('string', $val->message);
+        $this->assertIsString($val->message);
     }
 
     public function testInitException()
diff --git a/tests/framework/validators/RequiredValidatorTest.php b/tests/framework/validators/RequiredValidatorTest.php
index a45f3b10ef9..93a23837e45 100644
--- a/tests/framework/validators/RequiredValidatorTest.php
+++ b/tests/framework/validators/RequiredValidatorTest.php
@@ -17,7 +17,7 @@
  */
 class RequiredValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/StringValidatorTest.php b/tests/framework/validators/StringValidatorTest.php
index bef0db0deb3..f24719d40f1 100644
--- a/tests/framework/validators/StringValidatorTest.php
+++ b/tests/framework/validators/StringValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class StringValidatorTest extends TestCase
 {
-    public function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -112,9 +112,9 @@ public function testValidateAttribute()
     public function testEnsureMessagesOnInit()
     {
         $val = new StringValidator(['min' => 1, 'max' => 2]);
-        $this->assertInternalType('string', $val->message);
-        $this->assertInternalType('string', $val->tooLong);
-        $this->assertInternalType('string', $val->tooShort);
+        $this->assertIsString($val->message);
+        $this->assertIsString($val->tooLong);
+        $this->assertIsString($val->tooShort);
     }
 
     public function testCustomErrorMessageInValidateAttribute()
diff --git a/tests/framework/validators/UniqueValidatorTest.php b/tests/framework/validators/UniqueValidatorTest.php
index 0c5149e5887..d580eefbc6d 100644
--- a/tests/framework/validators/UniqueValidatorTest.php
+++ b/tests/framework/validators/UniqueValidatorTest.php
@@ -22,7 +22,7 @@
 
 abstract class UniqueValidatorTest extends DatabaseTestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
@@ -34,7 +34,7 @@ protected function setUp()
     public function testAssureMessageSetOnInit()
     {
         $val = new UniqueValidator();
-        $this->assertInternalType('string', $val->message);
+        $this->assertIsString($val->message);
     }
 
     public function testCustomMessage()
diff --git a/tests/framework/validators/UrlValidatorTest.php b/tests/framework/validators/UrlValidatorTest.php
index 7872d9d21e9..99866a9655e 100644
--- a/tests/framework/validators/UrlValidatorTest.php
+++ b/tests/framework/validators/UrlValidatorTest.php
@@ -16,7 +16,7 @@
  */
 class UrlValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/validators/ValidatorTest.php b/tests/framework/validators/ValidatorTest.php
index 3f3eb8c0dd0..cd25e3895db 100644
--- a/tests/framework/validators/ValidatorTest.php
+++ b/tests/framework/validators/ValidatorTest.php
@@ -24,7 +24,7 @@
  */
 class ValidatorTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/web/AssetBundleTest.php b/tests/framework/web/AssetBundleTest.php
index a0399d0aa85..70471af07eb 100644
--- a/tests/framework/web/AssetBundleTest.php
+++ b/tests/framework/web/AssetBundleTest.php
@@ -18,7 +18,7 @@
  */
 class AssetBundleTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -124,7 +124,7 @@ public function testSourcesPublish_AssetManagerBeforeCopy()
         $this->assertFalse(is_dir($bundle->basePath));
         foreach ($bundle->js as $filename) {
             $publishedFile = $bundle->basePath . DIRECTORY_SEPARATOR . $filename;
-            $this->assertFileNotExists($publishedFile);
+            $this->assertFileDoesNotExist($publishedFile);
         }
     }
 
@@ -144,7 +144,7 @@ public function testSourcesPublish_AssetBeforeCopy()
         $this->assertFalse(is_dir($bundle->basePath));
         foreach ($bundle->js as $filename) {
             $publishedFile = $bundle->basePath . DIRECTORY_SEPARATOR . $filename;
-            $this->assertFileNotExists($publishedFile);
+            $this->assertFileDoesNotExist($publishedFile);
         }
     }
 
@@ -163,7 +163,7 @@ public function testSourcesPublish_publishOptions_Only()
         $bundle->publish($am);
 
         $notNeededFilesDir = dirname($bundle->basePath . DIRECTORY_SEPARATOR . $bundle->css[0]);
-        $this->assertFileNotExists($notNeededFilesDir);
+        $this->assertFileDoesNotExist($notNeededFilesDir);
 
         foreach ($bundle->js as $filename) {
             $publishedFile = $bundle->basePath . DIRECTORY_SEPARATOR . $filename;
@@ -189,7 +189,9 @@ public function testBasePathIsWritableOnPublish()
         $view = $this->getView(['basePath' => '@testReadOnlyAssetPath']);
         $bundle = new TestSourceAsset();
 
-        $this->setExpectedException('yii\base\InvalidConfigException', 'The directory is not writable by the Web process');
+        $this->expectException(\yii\base\InvalidConfigException::class);
+        $this->expectExceptionMessage('The directory is not writable by the Web process');
+
         $bundle->publish($view->getAssetManager());
 
         FileHelper::removeDirectory($path);
@@ -543,7 +545,7 @@ public function testCustomFilePublishWithTimestamp()
         $am = $view->assetManager;
         // publishing without timestamp
         $result = $am->publish($path . '/data.txt');
-        $this->assertRegExp('/.*data.txt$/i', $result[1]);
+        $this->assertMatchesRegularExpression('/.*data.txt$/i', $result[1]);
         unset($view, $am, $result);
 
         $view = $this->getView();
@@ -551,7 +553,7 @@ public function testCustomFilePublishWithTimestamp()
         // turn on timestamp appending
         $am->appendTimestamp = true;
         $result = $am->publish($path . '/data.txt');
-        $this->assertRegExp('/.*data.txt\?v=\d+$/i', $result[1]);
+        $this->assertMatchesRegularExpression('/.*data.txt\?v=\d+$/i', $result[1]);
     }
 
     /**
@@ -563,7 +565,7 @@ public function testNonRelativeAssetWebPathWithTimestamp()
 
         $view = $this->getView(['appendTimestamp' => true]);
         TestNonRelativeAsset::register($view);
-        $this->assertRegExp(
+        $this->assertMatchesRegularExpression(
             '~123<script src="http:\/\/example\.com\/js\/jquery\.js\?v=\d+"><\/script>4~',
             $view->renderFile('@yiiunit/data/views/rawlayout.php')
         );
diff --git a/tests/framework/web/AssetConverterTest.php b/tests/framework/web/AssetConverterTest.php
index 4b618bc81c0..0d439ee4e26 100644
--- a/tests/framework/web/AssetConverterTest.php
+++ b/tests/framework/web/AssetConverterTest.php
@@ -20,7 +20,7 @@ class AssetConverterTest extends \yiiunit\TestCase
      */
     protected $tmpPath;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -30,7 +30,7 @@ protected function setUp()
         }
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         if (is_dir($this->tmpPath)) {
             FileHelper::removeDirectory($this->tmpPath);
diff --git a/tests/framework/web/ControllerTest.php b/tests/framework/web/ControllerTest.php
index 1ce51eeb298..e4b79cd4b77 100644
--- a/tests/framework/web/ControllerTest.php
+++ b/tests/framework/web/ControllerTest.php
@@ -24,7 +24,7 @@ class ControllerTest extends TestCase
     /** @var FakeController */
     private $controller;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -61,11 +61,6 @@ public function testBindActionParams()
 
     public function testNullableInjectedActionParams()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
-
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new \yii\web\Application([
             'id' => 'app',
@@ -88,11 +83,6 @@ public function testNullableInjectedActionParams()
     }
 
     public function testModelBindingHttpException() {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
-
         $this->controller = new FakePhp71Controller('fake', new \yii\web\Application([
             'id' => 'app',
             'basePath' => __DIR__,
@@ -119,10 +109,6 @@ public function testModelBindingHttpException() {
 
     public function testInjectionContainerException()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new \yii\web\Application([
             'id' => 'app',
@@ -149,10 +135,6 @@ public function testInjectionContainerException()
 
     public function testUnknownInjection()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new \yii\web\Application([
             'id' => 'app',
@@ -177,10 +159,6 @@ public function testUnknownInjection()
 
     public function testInjectedActionParams()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         // Use the PHP71 controller for this test
         $this->controller = new FakePhp71Controller('fake', new \yii\web\Application([
             'id' => 'app',
@@ -211,10 +189,6 @@ public function testInjectedActionParams()
 
     public function testInjectedActionParamsFromModule()
     {
-        if (PHP_VERSION_ID < 70100) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.1');
-            return;
-        }
         $module = new \yii\base\Module('fake', new \yii\web\Application([
             'id' => 'app',
             'basePath' => __DIR__,
@@ -244,11 +218,6 @@ public function testInjectedActionParamsFromModule()
      */
     public function testBindTypedActionParams()
     {
-        if (PHP_VERSION_ID < 70000) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.0');
-            return;
-        }
-
         // Use the PHP7 controller for this test
         $this->controller = new FakePhp7Controller('fake', new \yii\web\Application([
             'id' => 'app',
diff --git a/tests/framework/web/ErrorActionTest.php b/tests/framework/web/ErrorActionTest.php
index 73211650012..f844f4fa2be 100644
--- a/tests/framework/web/ErrorActionTest.php
+++ b/tests/framework/web/ErrorActionTest.php
@@ -19,7 +19,7 @@
  */
 class ErrorActionTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication();
@@ -105,7 +105,7 @@ public function testDefaultView()
         $action->view = null;
         $ds = preg_quote(DIRECTORY_SEPARATOR, '\\');
         $this->expectException('yii\base\ViewNotFoundException');
-        $this->expectExceptionMessageRegExp('#The view file does not exist: .*?views' . $ds . 'test' . $ds . 'error.php#');
+        $this->expectExceptionMessageMatches('#The view file does not exist: .*?views' . $ds . 'test' . $ds . 'error.php#');
         $this->invokeMethod($action, 'renderHtmlResponse');
     }
 
diff --git a/tests/framework/web/ErrorHandlerTest.php b/tests/framework/web/ErrorHandlerTest.php
index 4ea8b15e6c8..17a3c34b04b 100644
--- a/tests/framework/web/ErrorHandlerTest.php
+++ b/tests/framework/web/ErrorHandlerTest.php
@@ -14,7 +14,7 @@
 
 class ErrorHandlerTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication([
@@ -53,10 +53,13 @@ public function testFormatRaw()
         $this->invokeMethod($handler, 'renderException', [new \Exception('Test Exception')]);
         $out = ob_get_clean();
 
-        $this->assertcontains('Test Exception', $out);
+        $this->assertStringContainsString('Test Exception', $out);
 
         $this->assertTrue(is_string(Yii::$app->response->data));
-        $this->assertcontains("Exception 'Exception' with message 'Test Exception'", Yii::$app->response->data);
+        $this->assertStringContainsString(
+            "Exception 'Exception' with message 'Test Exception'",
+            Yii::$app->response->data
+        );
     }
 
     public function testFormatXml()
@@ -70,7 +73,7 @@ public function testFormatXml()
         $this->invokeMethod($handler, 'renderException', [new \Exception('Test Exception')]);
         $out = ob_get_clean();
 
-        $this->assertcontains('Test Exception', $out);
+        $this->assertStringContainsString('Test Exception', $out);
 
         $outArray = Yii::$app->response->data;
 
@@ -80,7 +83,7 @@ public function testFormatXml()
         $this->assertEquals('Test Exception', $outArray['message']);
         $this->assertArrayHasKey('code', $outArray);
         $this->assertEquals('Exception', $outArray['type']);
-        $this->assertContains('ErrorHandlerTest.php', $outArray['file']);
+        $this->assertStringContainsString('ErrorHandlerTest.php', $outArray['file']);
         $this->assertArrayHasKey('stack-trace', $outArray);
         $this->assertArrayHasKey('line', $outArray);
     }
@@ -109,7 +112,7 @@ public function testClearAssetFilesInErrorActionView()
         $this->invokeMethod($handler, 'renderException', [new NotFoundHttpException()]);
         ob_get_clean();
         $out = Yii::$app->response->data;
-        $this->assertNotContains('<script', $out);
+        $this->assertStringNotContainsString('<script', $out);
     }
 
     public function testRenderCallStackItem()
@@ -120,7 +123,7 @@ public function testRenderCallStackItem()
 
         $out = $handler->renderCallStackItem($file, 63, \yii\web\Application::className(), null, null, null);
 
-        $this->assertContains('<a href="netbeans://open?file=' . $file . '&line=63">', $out);
+        $this->assertStringContainsString('<a href="netbeans://open?file=' . $file . '&line=63">', $out);
     }
 
     public function dataHtmlEncode()
@@ -128,7 +131,7 @@ public function dataHtmlEncode()
         return [
             [
                 "a \t=<>&\"'\x80`\n",
-                "a \t=&lt;&gt;&amp;\"'�`\n",
+                "a \t=&lt;&gt;&amp;&quot;&apos;�`\n",
             ],
             [
                 '<b>test</b>',
@@ -136,11 +139,11 @@ public function dataHtmlEncode()
             ],
             [
                 '"hello"',
-                '"hello"',
+                '&quot;hello&quot;',
             ],
             [
                 "'hello world'",
-                "'hello world'",
+                "&apos;hello world&apos;",
             ],
             [
                 'Chip&amp;Dale',
@@ -165,15 +168,10 @@ public function testHtmlEncode($text, $expected)
 
     public function testHtmlEncodeWithUnicodeSequence()
     {
-        if (PHP_VERSION_ID < 70000) {
-            $this->markTestSkipped('Can not be tested on PHP < 7.0');
-            return;
-        }
-
         $handler = Yii::$app->getErrorHandler();
 
         $text = "a \t=<>&\"'\x80\u{20bd}`\u{000a}\u{000c}\u{0000}";
-        $expected = "a \t=&lt;&gt;&amp;\"'�₽`\n\u{000c}\u{0000}";
+        $expected = "a \t=&lt;&gt;&amp;&quot;&apos;�₽`\n\u{000c}\u{0000}";
 
         $this->assertSame($expected, $handler->htmlEncode($text));
     }
diff --git a/tests/framework/web/FakePhp71Controller.php b/tests/framework/web/FakePhp71Controller.php
index d8aa0e406c5..c48243e2fed 100644
--- a/tests/framework/web/FakePhp71Controller.php
+++ b/tests/framework/web/FakePhp71Controller.php
@@ -21,9 +21,14 @@ class FakePhp71Controller extends Controller
 {
     public $enableCsrfValidation = false;
 
-    public function actionInjection($before, Request $request, $between, VendorImage $vendorImage, Post $post = null, $after)
-    {
-
+    public function actionInjection(
+        $before,
+        Request $request,
+        $between,
+        VendorImage $vendorImage,
+        ?Post $post,
+        $after
+    ) {
     }
 
     public function actionNullableInjection(?Request $request, ?Post $post)
diff --git a/tests/framework/web/FakePhp7Controller.php b/tests/framework/web/FakePhp7Controller.php
index 4d267a85e15..74008f49fad 100644
--- a/tests/framework/web/FakePhp7Controller.php
+++ b/tests/framework/web/FakePhp7Controller.php
@@ -17,11 +17,11 @@ class FakePhp7Controller extends Controller
 {
     public $enableCsrfValidation = false;
 
-    public function actionAksi1(int $foo, float $bar = null, bool $true, bool $false)
+    public function actionAksi1(int $foo, ?float $bar, bool $true, bool $false)
     {
     }
 
-    public function actionStringy(string $foo = null)
+    public function actionStringy(?string $foo = null)
     {
     }
 }
diff --git a/tests/framework/web/FormatterTest.php b/tests/framework/web/FormatterTest.php
index e89e6dcf18c..a84fb310315 100644
--- a/tests/framework/web/FormatterTest.php
+++ b/tests/framework/web/FormatterTest.php
@@ -21,7 +21,7 @@ abstract class FormatterTest extends \yiiunit\TestCase
      */
     public $formatter;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->mockApplication();
         $this->response = new Response();
diff --git a/tests/framework/web/GroupUrlRuleTest.php b/tests/framework/web/GroupUrlRuleTest.php
index 9bc8b26684d..cedb6c57f82 100644
--- a/tests/framework/web/GroupUrlRuleTest.php
+++ b/tests/framework/web/GroupUrlRuleTest.php
@@ -18,7 +18,7 @@
  */
 class GroupUrlRuleTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/web/LinkTest.php b/tests/framework/web/LinkTest.php
new file mode 100644
index 00000000000..6cc99b4d5a2
--- /dev/null
+++ b/tests/framework/web/LinkTest.php
@@ -0,0 +1,89 @@
+<?php
+/**
+ * @link https://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license https://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\framework\web;
+
+use yii\web\Link;
+use yiiunit\TestCase;
+
+/**
+ * @group web
+ */
+class LinkTest extends TestCase
+{
+    public function testSerializeLinkInSimpleArrayWillRemoveNotSetValues()
+    {
+        $managerLink = new Link([
+            'href' => 'https://example.com/users/4',
+            'name' => 'User 4',
+            'title' => 'My Manager',
+        ]);
+
+        $expected = [
+            'self' => [
+                'href' => 'https://example.com/users/1'
+            ],
+            'manager' => [
+                'href' => 'https://example.com/users/4',
+                'name' => 'User 4',
+                'title' => 'My Manager',
+            ],
+        ];
+
+        $this->assertEquals($expected, Link::serialize([
+            'self' => 'https://example.com/users/1',
+            'manager' => $managerLink,
+        ]));
+    }
+
+    public function testSerializeNestedArrayWithLinkWillSerialize()
+    {
+        $linkData = [
+            'self' => new Link([
+                'href' => 'https://example.com/users/3',
+                'name' => 'Daffy Duck',
+            ]),
+            'fellows' => [
+                [
+                    new Link([
+                        'href' => 'https://example.com/users/4',
+                        'name' => 'Bugs Bunny',
+                    ]),
+                ],
+                [
+                    new Link([
+                        'href' => 'https://example.com/users/5',
+                        'name' => 'Lola Bunny',
+                    ]),
+                ]
+            ]
+        ];
+
+        $expected = [
+            'self' => [
+                'href' => 'https://example.com/users/3',
+                'name' => 'Daffy Duck',
+            ],
+            'fellows' => [
+                [
+                    [
+                        'href' => 'https://example.com/users/4',
+                        'name' => 'Bugs Bunny',
+                    ]
+                ],
+                [
+                    [
+                        'href' => 'https://example.com/users/5',
+                        'name' => 'Lola Bunny',
+                    ]
+                ]
+            ],
+        ];
+
+        $this->assertEquals($expected, Link::serialize($linkData));
+    }
+}
diff --git a/tests/framework/web/RequestTest.php b/tests/framework/web/RequestTest.php
index fd4bcb021cc..ec493e95b7c 100644
--- a/tests/framework/web/RequestTest.php
+++ b/tests/framework/web/RequestTest.php
@@ -91,7 +91,7 @@ public function testCsrfTokenContainsASCIIOnly()
         $request->enableCsrfCookie = false;
 
         $token = $request->getCsrfToken();
-        $this->assertRegExp('~[-_=a-z0-9]~i', $token);
+        $this->assertMatchesRegularExpression('~[-_=a-z0-9]~i', $token);
     }
 
     public function testCsrfTokenValidation()
@@ -430,25 +430,23 @@ public function testSetHostInfo()
         $this->assertSame('servername.com', $request->getHostName());
     }
 
-    /**
-     * @expectedException \yii\base\InvalidConfigException
-     */
     public function testGetScriptFileWithEmptyServer()
     {
         $request = new Request();
         $_SERVER = [];
 
+        $this->expectException(\yii\base\InvalidConfigException::class);
+
         $request->getScriptFile();
     }
 
-    /**
-     * @expectedException \yii\base\InvalidConfigException
-     */
     public function testGetScriptUrlWithEmptyServer()
     {
         $request = new Request();
         $_SERVER = [];
 
+        $this->expectException(\yii\base\InvalidConfigException::class);
+        
         $request->getScriptUrl();
     }
 
diff --git a/tests/framework/web/ResponseTest.php b/tests/framework/web/ResponseTest.php
index 2c49964fbcd..3ff3bfeb3f1 100644
--- a/tests/framework/web/ResponseTest.php
+++ b/tests/framework/web/ResponseTest.php
@@ -27,7 +27,7 @@ class ResponseTest extends \yiiunit\TestCase
      */
     public $response;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication([
diff --git a/tests/framework/web/UploadedFileTest.php b/tests/framework/web/UploadedFileTest.php
index 0e0892ac004..9acdd0f04e4 100644
--- a/tests/framework/web/UploadedFileTest.php
+++ b/tests/framework/web/UploadedFileTest.php
@@ -19,7 +19,7 @@
  */
 class UploadedFileTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/web/UrlManagerParseUrlTest.php b/tests/framework/web/UrlManagerParseUrlTest.php
index 9111c02cc1d..ee09e05bd06 100644
--- a/tests/framework/web/UrlManagerParseUrlTest.php
+++ b/tests/framework/web/UrlManagerParseUrlTest.php
@@ -65,7 +65,7 @@ protected function getRequest($pathInfo, $hostInfo = 'http://www.example.com', $
         return new Request($config);
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         unset($_POST['_method']);
         parent::tearDown();
diff --git a/tests/framework/web/UrlNormalizerTest.php b/tests/framework/web/UrlNormalizerTest.php
index e2d8201149b..236eea0f3a6 100644
--- a/tests/framework/web/UrlNormalizerTest.php
+++ b/tests/framework/web/UrlNormalizerTest.php
@@ -20,7 +20,7 @@
  */
 class UrlNormalizerTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/web/UrlRuleTest.php b/tests/framework/web/UrlRuleTest.php
index 6dbfbc60598..1602f4eff5b 100644
--- a/tests/framework/web/UrlRuleTest.php
+++ b/tests/framework/web/UrlRuleTest.php
@@ -22,7 +22,7 @@
  */
 class UrlRuleTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -1292,7 +1292,8 @@ protected function getTestsForToString()
     }
 
     /**
-     * @dataProvider testGetCreateUrlStatusProvider
+     * @dataProvider getCreateUrlStatusProvider
+     *
      * @param array $config
      * @param array $tests
      */
@@ -1329,7 +1330,7 @@ public function testGetCreateUrlStatus($config, $tests)
      *   - third element is the expected URL
      *   - fourth element is the expected result of getCreateUrlStatus() method
      */
-    public function testGetCreateUrlStatusProvider()
+    public static function getCreateUrlStatusProvider()
     {
         return [
             'route' => [
diff --git a/tests/framework/web/UserTest.php b/tests/framework/web/UserTest.php
index e02fe1cf4d7..85cb2d2dd95 100644
--- a/tests/framework/web/UserTest.php
+++ b/tests/framework/web/UserTest.php
@@ -38,7 +38,7 @@ class UserTest extends TestCase
      */
     public static $time;
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         Yii::$app->session->removeAll();
         static::$time = null;
@@ -404,7 +404,7 @@ public function testAccessChecker()
 
     public function testGetIdentityException()
     {
-        $session = $this->getMock('yii\web\Session');
+        $session = $this->getMockBuilder(\yii\web\Session::class)->getMock();
         $session->method('getHasSessionId')->willReturn(true);
         $session->method('get')->with($this->equalTo('__id'))->willReturn('1');
 
diff --git a/tests/framework/web/ViewTest.php b/tests/framework/web/ViewTest.php
index d572998cf65..1bc25bf57cf 100644
--- a/tests/framework/web/ViewTest.php
+++ b/tests/framework/web/ViewTest.php
@@ -16,7 +16,7 @@
  */
 class ViewTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
     }
@@ -35,7 +35,7 @@ public function testRegisterJsVar()
         $view = new View();
         $view->registerJsVar('username', 'samdark');
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script>var username = "samdark";</script></head>', $html);
+        $this->assertStringContainsString('<script>var username = "samdark";</script></head>', $html);
 
         $view = new View();
         $view->registerJsVar('objectTest',
@@ -44,7 +44,10 @@ public function testRegisterJsVar()
                 'question' => 'Unknown',
             ]);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script>var objectTest = {"number":42,"question":"Unknown"};</script></head>', $html);
+        $this->assertStringContainsString(
+            '<script>var objectTest = {"number":42,"question":"Unknown"};</script></head>',
+            $html
+        );
     }
 
     public function testRegisterJsFileWithAlias()
@@ -61,7 +64,7 @@ public function testRegisterJsFileWithAlias()
         $view = new View();
         $view->registerJsFile('@web/js/somefile.js', ['position' => View::POS_HEAD]);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="/baseUrl/js/somefile.js"></script></head>', $html);
+        $this->assertStringContainsString('<script src="/baseUrl/js/somefile.js"></script></head>', $html);
 
         $view = new View();
         $view->registerJsFile('@web/js/somefile.js', ['position' => View::POS_BEGIN]);
@@ -71,13 +74,13 @@ public function testRegisterJsFileWithAlias()
         $view = new View();
         $view->registerJsFile('@web/js/somefile.js', ['position' => View::POS_END]);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="/baseUrl/js/somefile.js"></script></body>', $html);
+        $this->assertStringContainsString('<script src="/baseUrl/js/somefile.js"></script></body>', $html);
 
         // alias with depends
         $view = new View();
         $view->registerJsFile('@web/js/somefile.js', ['position' => View::POS_END, 'depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="/baseUrl/js/somefile.js"></script></body>', $html);
+        $this->assertStringContainsString('<script src="/baseUrl/js/somefile.js"></script></body>', $html);
     }
 
     public function testRegisterCssFileWithAlias()
@@ -94,14 +97,14 @@ public function testRegisterCssFileWithAlias()
         $view = new View();
         $view->registerCssFile('@web/css/somefile.css');
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="/baseUrl/css/somefile.css" rel="stylesheet"></head>', $html);
+        $this->assertStringContainsString('<link href="/baseUrl/css/somefile.css" rel="stylesheet"></head>', $html);
 
         // with depends
         $view = new View();
         $view->registerCssFile('@web/css/somefile.css',
             ['position' => View::POS_END, 'depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="/baseUrl/css/somefile.css" rel="stylesheet"></head>', $html);
+        $this->assertStringContainsString('<link href="/baseUrl/css/somefile.css" rel="stylesheet"></head>', $html);
     }
 
     public function testRegisterregisterCsrfMetaTags()
@@ -122,16 +125,16 @@ public function testRegisterregisterCsrfMetaTags()
 
         $view->registerCsrfMetaTags();
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<meta name="csrf-param" content="_csrf">', $html);
-        $this->assertContains('<meta name="csrf-token" content="', $html);
+        $this->assertStringContainsString('<meta name="csrf-param" content="_csrf">', $html);
+        $this->assertStringContainsString('<meta name="csrf-token" content="', $html);
         $csrfToken1 = $this->getCSRFTokenValue($html);
 
         // regenerate token
         \Yii::$app->request->getCsrfToken(true);
         $view->registerCsrfMetaTags();
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<meta name="csrf-param" content="_csrf">', $html);
-        $this->assertContains('<meta name="csrf-token" content="', $html);
+        $this->assertStringContainsString('<meta name="csrf-param" content="_csrf">', $html);
+        $this->assertStringContainsString('<meta name="csrf-token" content="', $html);
         $csrfToken2 = $this->getCSRFTokenValue($html);
 
         $this->assertNotSame($csrfToken1, $csrfToken2);
@@ -183,7 +186,7 @@ public function testAppendTimestampForRegisterJsFile()
         $view->registerJsFile('/assetSources/js/jquery.js',
             ['depends' => 'yii\web\AssetBundle']); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // test append timestamp when @web is prefixed in url
         \Yii::setAlias('@web', '/test-app');
@@ -191,7 +194,7 @@ public function testAppendTimestampForRegisterJsFile()
         $view->registerJsFile(\Yii::getAlias('@web/assetSources/js/jquery.js'),
             ['depends' => 'yii\web\AssetBundle']); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // test append timestamp when @web has the same name as the asset-source folder
         \Yii::setAlias('@web', '/assetSources/');
@@ -199,7 +202,7 @@ public function testAppendTimestampForRegisterJsFile()
         $view->registerJsFile(\Yii::getAlias('@web/assetSources/js/jquery.js'),
             ['depends' => 'yii\web\AssetBundle']); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
         // reset aliases
         $this->setUpAliases();
 
@@ -207,26 +210,26 @@ public function testAppendTimestampForRegisterJsFile()
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js'); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js',
             ['appendTimestamp' => true]); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // redefine AssetManager timestamp setting
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js',
             ['appendTimestamp' => false]); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // with alias
         $view = new View();
         $view->registerJsFile('@web/assetSources/js/jquery.js'); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // with alias but wo timestamp
         // redefine AssetManager timestamp setting
@@ -237,35 +240,41 @@ public function testAppendTimestampForRegisterJsFile()
                 'depends' => 'yii\web\AssetBundle',
             ]); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // wo depends == wo AssetManager
         $view = new View();
         $view->registerJsFile('@web/assetSources/js/jquery.js',
             ['appendTimestamp' => false]); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // absolute link
         $view = new View();
         $view->registerJsFile('http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js');
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
-            $html);
+        $this->assertStringContainsString(
+            '<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
+            $html
+        );
 
         $view = new View();
         $view->registerJsFile('//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
-            $html);
+        $this->assertStringContainsString(
+            '<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
+            $html
+        );
 
         $view = new View();
         $view->registerJsFile('http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
-            $html);
+        $this->assertStringContainsString(
+            '<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
+            $html
+        );
 
         \Yii::$app->assetManager->appendTimestamp = false;
 
@@ -273,18 +282,18 @@ public function testAppendTimestampForRegisterJsFile()
         $view->registerJsFile('/assetSources/js/jquery.js',
             ['depends' => 'yii\web\AssetBundle']); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js'); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js',
             ['appendTimestamp' => true]); // <script src="/assetSources/js/jquery.js?v=1541056962"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // redefine AssetManager timestamp setting
         $view = new View();
@@ -294,34 +303,40 @@ public function testAppendTimestampForRegisterJsFile()
                 'depends' => 'yii\web\AssetBundle',
             ]); // <script src="/assetSources/js/jquery.js?v=1602294572"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js',
             ['appendTimestamp' => false]); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // absolute link
         $view = new View();
         $view->registerJsFile('http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js');
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
-            $html);
+        $this->assertStringContainsString(
+            '<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
+            $html
+        );
 
         $view = new View();
         $view->registerJsFile('//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
-            $html);
+        $this->assertStringContainsString(
+            '<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
+            $html
+        );
 
         $view = new View();
         $view->registerJsFile('http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
-            $html);
+        $this->assertStringContainsString(
+            '<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>',
+            $html
+        );
 
     }
 
@@ -347,7 +362,7 @@ public function testAppendTimestampForRegisterCssFile()
         $view->registerCssFile('/assetSources/css/stub.css',
             ['depends' => 'yii\web\AssetBundle']); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // test append timestamp when @web is prefixed in url
         \Yii::setAlias('@web', '/test-app');
@@ -355,7 +370,7 @@ public function testAppendTimestampForRegisterCssFile()
         $view->registerCssFile(\Yii::getAlias('@web/assetSources/css/stub.css'),
             ['depends' => 'yii\web\AssetBundle']); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // test append timestamp when @web has the same name as the asset-source folder
         \Yii::setAlias('@web', '/assetSources/');
@@ -363,7 +378,7 @@ public function testAppendTimestampForRegisterCssFile()
         $view->registerCssFile(\Yii::getAlias('@web/assetSources/css/stub.css'),
             ['depends' => 'yii\web\AssetBundle']); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
         // reset aliases
         $this->setUpAliases();
 
@@ -371,26 +386,26 @@ public function testAppendTimestampForRegisterCssFile()
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css'); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css',
             ['appendTimestamp' => true]); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // redefine AssetManager timestamp setting
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css',
             ['appendTimestamp' => false]); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // with alias
         $view = new View();
         $view->registerCssFile('@web/assetSources/css/stub.css'); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // with alias but wo timestamp
         // redefine AssetManager timestamp setting
@@ -401,35 +416,41 @@ public function testAppendTimestampForRegisterCssFile()
                 'depends' => 'yii\web\AssetBundle',
             ]); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // wo depends == wo AssetManager
         $view = new View();
         $view->registerCssFile('@web/assetSources/css/stub.css',
             ['appendTimestamp' => false]); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // absolute link
         $view = new View();
         $view->registerCssFile('https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css');
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
-            $html);
+        $this->assertStringContainsString(
+            '<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
+            $html
+        );
 
         $view = new View();
         $view->registerCssFile('//cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="//cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
-            $html);
+        $this->assertStringContainsString(
+            '<link href="//cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
+            $html
+        );
 
         $view = new View();
         $view->registerCssFile('https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
-            $html);
+        $this->assertStringContainsString(
+            '<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
+            $html
+        );
 
         \Yii::$app->assetManager->appendTimestamp = false;
 
@@ -437,18 +458,18 @@ public function testAppendTimestampForRegisterCssFile()
         $view->registerCssFile('/assetSources/css/stub.css',
             ['depends' => 'yii\web\AssetBundle']); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css'); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css',
             ['appendTimestamp' => true]); // <link href="/assetSources/css/stub.css?v=1541056962" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         // redefine AssetManager timestamp setting
         $view = new View();
@@ -458,33 +479,39 @@ public function testAppendTimestampForRegisterCssFile()
                 'depends' => 'yii\web\AssetBundle',
             ]); // <link href="/assetSources/css/stub.css?v=1602294572" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertMatchesRegularExpression($pattern, $html);
 
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css',
             ['appendTimestamp' => false]); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertDoesNotMatchRegularExpression($pattern, $html);
 
         // absolute link
         $view = new View();
         $view->registerCssFile('https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css');
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
-            $html);
+        $this->assertStringContainsString(
+            '<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
+            $html
+        );
 
         $view = new View();
         $view->registerCssFile('//cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="//cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
-            $html);
+        $this->assertStringContainsString(
+            '<link href="//cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
+            $html
+        );
 
         $view = new View();
         $view->registerCssFile('https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css',
             ['depends' => 'yii\web\AssetBundle']);
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertContains('<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
-            $html);
+        $this->assertStringContainsString(
+            '<link href="https://cdnjs.cloudflare.com/ajax/libs/balloon-css/1.0.3/balloon.css" rel="stylesheet">',
+            $html
+        );
     }
 }
diff --git a/tests/framework/web/session/AbstractDbSessionTest.php b/tests/framework/web/session/AbstractDbSessionTest.php
index 5fdfe50f98b..f8dbb32f550 100644
--- a/tests/framework/web/session/AbstractDbSessionTest.php
+++ b/tests/framework/web/session/AbstractDbSessionTest.php
@@ -27,7 +27,7 @@ abstract class AbstractDbSessionTest extends TestCase
      */
     abstract protected function getDriverNames();
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
@@ -37,7 +37,7 @@ protected function setUp()
         $this->createTableSession();
     }
 
-    protected function tearDown()
+    protected function tearDown(): void
     {
         $this->dropTableSession();
         parent::tearDown();
diff --git a/tests/framework/web/session/CacheSessionTest.php b/tests/framework/web/session/CacheSessionTest.php
index d34f7b7f82f..cc62e1b3681 100644
--- a/tests/framework/web/session/CacheSessionTest.php
+++ b/tests/framework/web/session/CacheSessionTest.php
@@ -18,7 +18,7 @@ class CacheSessionTest extends \yiiunit\TestCase
 {
     use SessionTestTrait;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/web/session/pgsql/DbSessionTest.php b/tests/framework/web/session/pgsql/DbSessionTest.php
index 8ef66fd0130..9af861b09f7 100644
--- a/tests/framework/web/session/pgsql/DbSessionTest.php
+++ b/tests/framework/web/session/pgsql/DbSessionTest.php
@@ -17,7 +17,7 @@
  */
 class DbSessionTest extends \yiiunit\framework\web\session\AbstractDbSessionTest
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         if (defined('HHVM_VERSION')) {
             $this->markTestSkipped('HHVMs PgSQL implementation does not seem to support blob columns in the way they are used here.');
diff --git a/tests/framework/web/session/sqlite/DbSessionTest.php b/tests/framework/web/session/sqlite/DbSessionTest.php
index e13539cebd0..a7e0154f538 100644
--- a/tests/framework/web/session/sqlite/DbSessionTest.php
+++ b/tests/framework/web/session/sqlite/DbSessionTest.php
@@ -19,7 +19,7 @@
  */
 class DbSessionTest extends \yiiunit\framework\web\session\AbstractDbSessionTest
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/widgets/ActiveFieldTest.php b/tests/framework/widgets/ActiveFieldTest.php
index 0ac63c77b3f..b38cfa29c8d 100644
--- a/tests/framework/widgets/ActiveFieldTest.php
+++ b/tests/framework/widgets/ActiveFieldTest.php
@@ -7,6 +7,7 @@
 
 namespace yiiunit\framework\widgets;
 
+use DMS\PHPUnitExtensions\ArraySubset\ArraySubsetAsserts;
 use Yii;
 use yii\base\DynamicModel;
 use yii\web\AssetManager;
@@ -23,6 +24,8 @@
  */
 class ActiveFieldTest extends \yiiunit\TestCase
 {
+    use ArraySubsetAsserts;
+    
     /**
      * @var ActiveFieldExtend
      */
@@ -37,7 +40,7 @@ class ActiveFieldTest extends \yiiunit\TestCase
     private $helperForm;
     private $attributeName = 'attributeName';
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         // dirty way to have Request object not throwing exception when running testHomeLinkNull()
@@ -672,14 +675,21 @@ public function testInputOptionsTransferToWidget()
             'mask' => '999-999-9999',
             'options' => ['placeholder' => 'pholder_direct'],
         ]);
-        $this->assertContains('placeholder="pholder_direct"', (string) $widget);
+        $this->assertStringContainsString('placeholder="pholder_direct"', (string) $widget);
+
+        // use regex clientOptions instead mask
+        $widget = $this->activeField->widget(TestMaskedInput::className(), [
+            'options' => ['placeholder' => 'pholder_direct'],
+            'clientOptions' => ['regex' => '^.*$'],
+        ]);
+        $this->assertStringContainsString('placeholder="pholder_direct"', (string) $widget);
 
         // transfer options from ActiveField to widget
         $this->activeField->inputOptions = ['placeholder' => 'pholder_input'];
         $widget = $this->activeField->widget(TestMaskedInput::className(), [
             'mask' => '999-999-9999',
         ]);
-        $this->assertContains('placeholder="pholder_input"', (string) $widget);
+        $this->assertStringContainsString('placeholder="pholder_input"', (string) $widget);
 
         // set both AF and widget options (second one takes precedence)
         $this->activeField->inputOptions = ['placeholder' => 'pholder_both_input'];
@@ -687,7 +697,7 @@ public function testInputOptionsTransferToWidget()
             'mask' => '999-999-9999',
             'options' => ['placeholder' => 'pholder_both_direct']
         ]);
-        $this->assertContains('placeholder="pholder_both_direct"', (string) $widget);
+        $this->assertStringContainsString('placeholder="pholder_both_direct"', (string) $widget);
     }
 
     /**
diff --git a/tests/framework/widgets/ActiveFormTest.php b/tests/framework/widgets/ActiveFormTest.php
index 64f921b0c24..313b3459076 100644
--- a/tests/framework/widgets/ActiveFormTest.php
+++ b/tests/framework/widgets/ActiveFormTest.php
@@ -17,7 +17,7 @@
  */
 class ActiveFormTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
@@ -133,6 +133,8 @@ public function testRegisterClientScript()
         $form->field($model, 'name');
         $form::end();
         ob_get_clean();
+
+        $this->assertTrue(true);
     }
 
     /**
diff --git a/tests/framework/widgets/BlockTest.php b/tests/framework/widgets/BlockTest.php
index c7b8ad2f6ec..a6b6d7fc9c9 100644
--- a/tests/framework/widgets/BlockTest.php
+++ b/tests/framework/widgets/BlockTest.php
@@ -14,7 +14,7 @@
  */
 class BlockTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/widgets/BreadcrumbsTest.php b/tests/framework/widgets/BreadcrumbsTest.php
index 5a4fddcbb3b..fd2106c7bfc 100644
--- a/tests/framework/widgets/BreadcrumbsTest.php
+++ b/tests/framework/widgets/BreadcrumbsTest.php
@@ -19,7 +19,7 @@ class BreadcrumbsTest extends \yiiunit\TestCase
 {
     private $breadcrumbs;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         // dirty way to have Request object not throwing exception when running testHomeLinkNull()
diff --git a/tests/framework/widgets/ContentDecoratorTest.php b/tests/framework/widgets/ContentDecoratorTest.php
index 02fc9a49766..c33c507ea73 100644
--- a/tests/framework/widgets/ContentDecoratorTest.php
+++ b/tests/framework/widgets/ContentDecoratorTest.php
@@ -14,7 +14,7 @@
  */
 class ContentDecoratorTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/widgets/DetailViewTest.php b/tests/framework/widgets/DetailViewTest.php
index a2fd34ef124..6b2f7fe3d96 100644
--- a/tests/framework/widgets/DetailViewTest.php
+++ b/tests/framework/widgets/DetailViewTest.php
@@ -20,7 +20,7 @@ class DetailViewTest extends \yiiunit\TestCase
     /** @var DetailView */
     public $detailView;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
 
diff --git a/tests/framework/widgets/FragmentCacheTest.php b/tests/framework/widgets/FragmentCacheTest.php
index a3b040e8f9d..a08a0795efb 100644
--- a/tests/framework/widgets/FragmentCacheTest.php
+++ b/tests/framework/widgets/FragmentCacheTest.php
@@ -17,7 +17,7 @@
  */
 class FragmentCacheTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication();
diff --git a/tests/framework/widgets/LinkPagerTest.php b/tests/framework/widgets/LinkPagerTest.php
index 265b891362b..88200cfc207 100644
--- a/tests/framework/widgets/LinkPagerTest.php
+++ b/tests/framework/widgets/LinkPagerTest.php
@@ -16,7 +16,7 @@
  */
 class LinkPagerTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication([
@@ -52,8 +52,14 @@ public function testFirstLastPageLabels()
             'lastPageLabel' => true,
         ]);
 
-        static::assertContains('<li class="first"><a href="/?r=test&amp;page=1" data-page="0">1</a></li>', $output);
-        static::assertContains('<li class="last"><a href="/?r=test&amp;page=25" data-page="24">25</a></li>', $output);
+        $this->assertStringContainsString(
+            '<li class="first"><a href="/?r=test&amp;page=1" data-page="0">1</a></li>',
+            $output,
+        );
+        $this->assertStringContainsString(
+            '<li class="last"><a href="/?r=test&amp;page=25" data-page="24">25</a></li>',
+            $output,
+        );
 
         $output = LinkPager::widget([
             'pagination' => $pagination,
@@ -61,8 +67,14 @@ public function testFirstLastPageLabels()
             'lastPageLabel' => 'Last',
         ]);
 
-        static::assertContains('<li class="first"><a href="/?r=test&amp;page=1" data-page="0">First</a></li>', $output);
-        static::assertContains('<li class="last"><a href="/?r=test&amp;page=25" data-page="24">Last</a></li>', $output);
+        $this->assertStringContainsString(
+            '<li class="first"><a href="/?r=test&amp;page=1" data-page="0">First</a></li>',
+            $output,
+        );
+        $this->assertStringContainsString(
+            '<li class="last"><a href="/?r=test&amp;page=25" data-page="24">Last</a></li>',
+            $output,
+        );
 
         $output = LinkPager::widget([
             'pagination' => $pagination,
@@ -70,8 +82,8 @@ public function testFirstLastPageLabels()
             'lastPageLabel' => false,
         ]);
 
-        static::assertNotContains('<li class="first">', $output);
-        static::assertNotContains('<li class="last">', $output);
+        $this->assertStringNotContainsString('<li class="first">', $output);
+        $this->assertStringNotContainsString('<li class="last">', $output);
     }
 
     public function testDisabledPageElementOptions()
@@ -81,7 +93,7 @@ public function testDisabledPageElementOptions()
             'disabledListItemSubTagOptions' => ['class' => 'foo-bar'],
         ]);
 
-        static::assertContains('<span class="foo-bar">&laquo;</span>', $output);
+        $this->assertStringContainsString('<span class="foo-bar">&laquo;</span>', $output);
     }
 
     public function testDisabledPageElementOptionsWithTagOption()
@@ -91,7 +103,7 @@ public function testDisabledPageElementOptionsWithTagOption()
             'disabledListItemSubTagOptions' => ['class' => 'foo-bar', 'tag' => 'div'],
         ]);
 
-        static::assertContains('<div class="foo-bar">&laquo;</div>', $output);
+        $this->assertStringContainsString('<div class="foo-bar">&laquo;</div>', $output);
     }
 
     public function testDisableCurrentPageButton()
@@ -102,14 +114,17 @@ public function testDisableCurrentPageButton()
             'disableCurrentPageButton' => false,
         ]);
 
-        static::assertContains('<li class="active"><a href="/?r=test&amp;page=6" data-page="5">6</a></li>', $output);
+        $this->assertStringContainsString(
+            '<li class="active"><a href="/?r=test&amp;page=6" data-page="5">6</a></li>',
+            $output,
+        );
 
         $output = LinkPager::widget([
             'pagination' => $pagination,
             'disableCurrentPageButton' => true,
         ]);
 
-        static::assertContains('<li class="active disabled"><span>6</span></li>', $output);
+        $this->assertStringContainsString('<li class="active disabled"><span>6</span></li>', $output);
     }
 
     public function testOptionsWithTagOption()
@@ -135,11 +150,11 @@ public function testLinkWrapOptions()
             ],
         ]);
 
-        $this->assertContains(
+        $this->assertStringContainsString(
             '<div class="my-class"><a href="/?r=test&amp;page=3" data-page="2">3</a></div>',
             $output
         );
-        $this->assertContains(
+        $this->assertStringContainsString(
             '<div class="my-class active"><a href="/?r=test&amp;page=2" data-page="1">2</a></div>',
             $output
         );
diff --git a/tests/framework/widgets/LinkSorterTest.php b/tests/framework/widgets/LinkSorterTest.php
index 49da1fce71e..652b8c18c2d 100644
--- a/tests/framework/widgets/LinkSorterTest.php
+++ b/tests/framework/widgets/LinkSorterTest.php
@@ -22,7 +22,7 @@ class LinkSorterTest extends DatabaseTestCase
 {
     protected $driverName = 'sqlite';
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         ActiveRecord::$db = $this->getConnection();
diff --git a/tests/framework/widgets/ListViewTest.php b/tests/framework/widgets/ListViewTest.php
index 6d3ff286f1f..8f01b9e78bd 100644
--- a/tests/framework/widgets/ListViewTest.php
+++ b/tests/framework/widgets/ListViewTest.php
@@ -18,7 +18,7 @@
  */
 class ListViewTest extends TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockApplication();
diff --git a/tests/framework/widgets/MenuTest.php b/tests/framework/widgets/MenuTest.php
index 3de5f5efd83..938bec4b356 100644
--- a/tests/framework/widgets/MenuTest.php
+++ b/tests/framework/widgets/MenuTest.php
@@ -15,7 +15,7 @@
  */
 class MenuTest extends \yiiunit\TestCase
 {
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication([
diff --git a/tests/framework/widgets/PjaxTest.php b/tests/framework/widgets/PjaxTest.php
index e08d5776f17..209fa16e0cc 100644
--- a/tests/framework/widgets/PjaxTest.php
+++ b/tests/framework/widgets/PjaxTest.php
@@ -33,7 +33,7 @@ public function testGeneratedIdByPjaxWidget()
         $this->assertEquals('p1', $pjax2->options['id']);
     }
 
-    protected function setUp()
+    protected function setUp(): void
     {
         parent::setUp();
         $this->mockWebApplication();
diff --git a/tests/js/tests/yii.activeForm.test.js b/tests/js/tests/yii.activeForm.test.js
index f79599b0747..506fe38a5a1 100644
--- a/tests/js/tests/yii.activeForm.test.js
+++ b/tests/js/tests/yii.activeForm.test.js
@@ -49,7 +49,8 @@ describe('yii.activeForm', function () {
 
     jsdom({
         html: html,
-        src: fs.readFileSync(jQueryPath, 'utf-8')
+        src: fs.readFileSync(jQueryPath, 'utf-8'),
+        url: "http://foo.bar"
     });
 
     before(function () {
diff --git a/tests/js/tests/yii.captcha.test.js b/tests/js/tests/yii.captcha.test.js
index 9fdd1d1d95f..8970b7decfb 100644
--- a/tests/js/tests/yii.captcha.test.js
+++ b/tests/js/tests/yii.captcha.test.js
@@ -30,7 +30,8 @@ describe('yii.captcha', function () {
 
     jsdom({
         html: html,
-        src: fs.readFileSync(jQueryPath, 'utf-8')
+        src: fs.readFileSync(jQueryPath, 'utf-8'),
+        url: "http://foo.bar"
     });
 
     before(function () {
diff --git a/tests/js/tests/yii.gridView.test.js b/tests/js/tests/yii.gridView.test.js
index 85f5b56637e..de13b4e7090 100644
--- a/tests/js/tests/yii.gridView.test.js
+++ b/tests/js/tests/yii.gridView.test.js
@@ -51,7 +51,8 @@ describe('yii.gridView', function () {
 
     jsdom({
         html: html,
-        src: fs.readFileSync(jQueryPath, 'utf-8')
+        src: fs.readFileSync(jQueryPath, 'utf-8'),
+        url: "http://foo.bar"
     });
 
     before(function () {
@@ -787,7 +788,7 @@ describe('yii.gridView', function () {
 
             assert.throws(function () {
                 $gridView1.yiiGridView('applyFilter');
-            }, "Cannot read property 'settings' of undefined");
+            }, "Cannot read properties of undefined (reading \'settings\')");
             $gridView1.yiiGridView(settings); // Reinitialize without "beforeFilter" and "afterFilter" event handlers
 
             $gridView1.yiiGridView('applyFilter');
diff --git a/tests/js/tests/yii.test.js b/tests/js/tests/yii.test.js
index 0164dcf8606..2072235002b 100644
--- a/tests/js/tests/yii.test.js
+++ b/tests/js/tests/yii.test.js
@@ -74,7 +74,8 @@ describe('yii', function () {
 
     jsdom({
         html: fs.readFileSync('tests/js/data/yii.html', 'utf-8'),
-        src: fs.readFileSync(jQueryPath, 'utf-8')
+        src: fs.readFileSync(jQueryPath, 'utf-8'),
+        url: "http://foo.bar"
     });
 
     before(function () {
diff --git a/tests/js/tests/yii.validation.test.js b/tests/js/tests/yii.validation.test.js
index 3fa08f45278..5cd742c075e 100644
--- a/tests/js/tests/yii.validation.test.js
+++ b/tests/js/tests/yii.validation.test.js
@@ -76,7 +76,8 @@ describe('yii.validation', function () {
     }
 
     jsdom({
-        src: fs.readFileSync('vendor/bower-asset/jquery/dist/jquery.js', 'utf-8')
+        src: fs.readFileSync('vendor/bower-asset/jquery/dist/jquery.js', 'utf-8'),
+        url: "http://foo.bar"
     });
 
     before(function () {
